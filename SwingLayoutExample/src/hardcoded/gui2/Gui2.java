package hardcoded.gui2;


import com.hopstepjump.backbone.runtime.api.*;

/** generated by Evolve */
public class Gui2
{
  private Attribute<String> messageX = new Attribute<String>("MessageX!!");
  public void setMessageX(Attribute<String> messageX) { this.messageX = messageX; }
  public Attribute<String> getMessageX() { return messageX; }
  private Attribute<Integer> c = new Attribute<Integer>(10);
  public void setC(Attribute<Integer> c) { this.c = c; }
  public Attribute<Integer> getC() { return c; }
  private Attribute<String> message =  new Attribute<String>(messageX.get());
  public void setMessage(Attribute<String> message) { this.message = message; }
  public Attribute<String> getMessage() { return message; }

  private hardcoded.designgridlayout.DesignGridLayoutPanel dd = new hardcoded.designgridlayout.DesignGridLayoutPanel();
  private test.Row x = new test.Row();
  private test.Row x1 = new test.Row();
  private test.Grid x2 = new test.Grid();
  private test.Grid x3 = new test.Grid();
  private javax.swing.JLabel x4 = new javax.swing.JLabel();
  private javax.swing.JLabel x5 = new javax.swing.JLabel();
  private test.Grid x6 = new test.Grid();
  private javax.swing.JLabel x7 = new javax.swing.JLabel();
  private javax.swing.JButton xx = new javax.swing.JButton();
  private javax.swing.JTextField x8 = new javax.swing.JTextField();
  private javax.swing.JButton x9 = new javax.swing.JButton();
  private test.My2Logic yy = new test.My2Logic();
  private test.Row x10 = new test.Row();
  private test.Grid x11 = new test.Grid();
  private javax.swing.JButton x12 = new javax.swing.JButton();
  private javax.swing.JLabel x13 = new javax.swing.JLabel();
  private test.Logger inside = new test.Logger();
  private test.My2Logic zz = new test.My2Logic();

  public Gui2()
  {
  }

  public void setSlots()
  {
    x4.setText(new Attribute<String>("Grid1").get());
    x5.setText(new Attribute<String>("Grid2").get());
    x7.setText(new Attribute<String>("Grid3").get());
    xx.setText(message.get());
    x8.setText(messageX.get());
    x9.setText(new Attribute<String>("Button").get());
    yy.setMessage(messageX);
    yy.setColor(new Attribute<java.awt.Color>(new java.awt.Color(c.get(), 0, c.get())));
    x12.setText(new Attribute<String>("Hello").get());
    x13.setText(new Attribute<String>("Extra").get());
    inside.setPrefix(new Attribute<String>("Inside"));
    zz.setMessage( new Attribute<String>(messageX.get()));
    zz.setColor(new Attribute<java.awt.Color>(new java.awt.Color(c.get(), c.get(), 255)));
    dd.setSlots();
  }

  public javax.swing.JPanel getRun_JPanel(Class<?> required)
  {
    return dd.getPanel_JPanel(required);
  }

  public void cacheProvidedInterfaces()
  {
    dd.cacheProvidedInterfaces();
  }

  public void setRequiredInterfaces()
  {
    x.setGrids_IGrid(x2.getGrid_IGrid(test.IGrid.class), -1);
    dd.setRows_IRow(x.getRow_IRow(test.IRow.class), -1);
    x.setGrids_IGrid(x3.getGrid_IGrid(test.IGrid.class), -1);
    dd.setRows_IRow(x1.getRow_IRow(test.IRow.class), -1);
    dd.setRows_IRow(x10.getRow_IRow(test.IRow.class), -1);
    x2.setLabel_JLabel(x4);
    x3.setLabel_JLabel(x5);
    x6.setLabel_JLabel(x7);
    x1.setGrids_IGrid(x6.getGrid_IGrid(test.IGrid.class), -1);
    x6.setContents_JComponent(xx, -1);
    x2.setContents_JComponent(x8, -1);
    x3.setContents_JComponent(x9, -1);
    xx.addActionListener(yy.getHit_ActionListener(java.awt.event.ActionListener.class));
    x10.setGrids_IGrid(x11.getGrid_IGrid(test.IGrid.class), -1);
    x11.setContents_JComponent(x12, -1);
    x11.setLabel_JLabel(x13);
    x9.addActionListener(zz.getHit_ActionListener(java.awt.event.ActionListener.class));
    dd.setRequiredInterfaces();
  }

  public Gui2 init(boolean children)
  {
    if (children)
    {
      setSlots();
      cacheProvidedInterfaces();
      setRequiredInterfaces();
    }
    dd.init(false);
    return this;
  }
}
