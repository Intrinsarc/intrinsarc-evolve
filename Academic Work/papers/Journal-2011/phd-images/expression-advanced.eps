%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 176 263 419 528
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, July 7, 2015 5:45:31 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
243 265 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
243.000 0.00000 l
243.000 265.000 l
0.00000 265.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 267 289 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 269.000 291.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 271.000 293.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 224.335 220.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.17773 .632812 m
2.35547 .632812 l
2.35547 9.24023 l
1.17773 9.24023 l
h
10.5117 .632812 m
10.5117 1.65820 l
7.61133 1.65820 l
7.61133 9.24023 l
6.42773 9.24023 l
6.42773 1.65820 l
3.52734 1.65820 l
3.52734 .632812 l
h
15.3457 3.13770 m
15.7637 3.34668 16.0820 3.61719 16.3008 3.94922  c
16.5117 4.26562 16.6523 4.63477 16.7227 5.05664  c
16.7852 5.34570 16.8164 5.80664 16.8164 6.43945  c
12.2168 6.43945 l
12.2363 7.07617 12.3867 7.58691 12.6680 7.97168  c
12.9492 8.35645 13.3848 8.54883 13.9746 8.54883  c
14.5254 8.54883 14.9648 8.36719 15.2930 8.00391  c
15.4805 7.79297 15.6133 7.54883 15.6914 7.27148  c
16.7285 7.27148 l
16.7012 7.50195 16.6104 7.75879 16.4561 8.04199  c
16.3018 8.32520 16.1289 8.55664 15.9375 8.73633  c
15.6172 9.04883 15.2207 9.25977 14.7480 9.36914  c
14.4941 9.43164 14.2070 9.46289 13.8867 9.46289  c
13.1055 9.46289 12.4434 9.17871 11.9004 8.61035  c
11.3574 8.04199 11.0859 7.24609 11.0859 6.22266  c
11.0859 5.21484 11.3594 4.39648 11.9062 3.76758  c
12.4531 3.13867 13.1680 2.82422 14.0508 2.82422  c
14.4961 2.82422 14.9277 2.92871 15.3457 3.13770  c
h
15.7324 5.60156 m
15.6895 5.14453 15.5898 4.77930 15.4336 4.50586  c
15.1445 3.99805 14.6621 3.74414 13.9863 3.74414  c
13.5020 3.74414 13.0957 3.91895 12.7676 4.26855  c
12.4395 4.61816 12.2656 5.06250 12.2461 5.60156  c
h
18.1406 2.96484 m
19.1426 2.96484 l
19.1426 4.04883 l
19.2246 3.83789 19.4258 3.58105 19.7461 3.27832  c
20.0664 2.97559 20.4355 2.82422 20.8535 2.82422  c
20.8730 2.82422 20.9062 2.82617 20.9531 2.83008  c
21.0000 2.83398 21.0801 2.84180 21.1934 2.85352  c
21.1934 3.96680 l
21.1309 3.95508 21.0732 3.94727 21.0205 3.94336  c
20.9678 3.93945 20.9102 3.93750 20.8477 3.93750  c
20.3164 3.93750 19.9082 4.10840 19.6230 4.45020  c
19.3379 4.79199 19.1953 5.18555 19.1953 5.63086  c
19.1953 9.24023 l
18.1406 9.24023 l
h
22.1074 2.96484 m
23.1504 2.96484 l
23.1504 3.85547 l
23.4004 3.54688 23.6270 3.32227 23.8301 3.18164  c
24.1777 2.94336 24.5723 2.82422 25.0137 2.82422  c
25.5137 2.82422 25.9160 2.94727 26.2207 3.19336  c
26.3926 3.33398 26.5488 3.54102 26.6895 3.81445  c
26.9238 3.47852 27.1992 3.22949 27.5156 3.06738  c
27.8320 2.90527 28.1875 2.82422 28.5820 2.82422  c
29.4258 2.82422 30.0000 3.12891 30.3047 3.73828  c
30.4688 4.06641 30.5508 4.50781 30.5508 5.06250  c
30.5508 9.24023 l
29.4551 9.24023 l
29.4551 4.88086 l
29.4551 4.46289 29.3506 4.17578 29.1416 4.01953  c
28.9326 3.86328 28.6777 3.78516 28.3770 3.78516  c
27.9629 3.78516 27.6064 3.92383 27.3076 4.20117  c
27.0088 4.47852 26.8594 4.94141 26.8594 5.58984  c
26.8594 9.24023 l
25.7871 9.24023 l
25.7871 5.14453 l
25.7871 4.71875 25.7363 4.40820 25.6348 4.21289  c
25.4746 3.91992 25.1758 3.77344 24.7383 3.77344  c
24.3398 3.77344 23.9775 3.92773 23.6514 4.23633  c
23.3252 4.54492 23.1621 5.10352 23.1621 5.91211  c
23.1621 9.24023 l
22.1074 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
0 J
2 j
0 j
[ 1.00000 0.00000 0.00000 1.00000 152.335 220.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.17773 .632812 m
2.35547 .632812 l
2.35547 9.24023 l
1.17773 9.24023 l
h
10.5117 .632812 m
10.5117 1.65820 l
7.61133 1.65820 l
7.61133 9.24023 l
6.42773 9.24023 l
6.42773 1.65820 l
3.52734 1.65820 l
3.52734 .632812 l
h
15.3457 3.13770 m
15.7637 3.34668 16.0820 3.61719 16.3008 3.94922  c
16.5117 4.26562 16.6523 4.63477 16.7227 5.05664  c
16.7852 5.34570 16.8164 5.80664 16.8164 6.43945  c
12.2168 6.43945 l
12.2363 7.07617 12.3867 7.58691 12.6680 7.97168  c
12.9492 8.35645 13.3848 8.54883 13.9746 8.54883  c
14.5254 8.54883 14.9648 8.36719 15.2930 8.00391  c
15.4805 7.79297 15.6133 7.54883 15.6914 7.27148  c
16.7285 7.27148 l
16.7012 7.50195 16.6104 7.75879 16.4561 8.04199  c
16.3018 8.32520 16.1289 8.55664 15.9375 8.73633  c
15.6172 9.04883 15.2207 9.25977 14.7480 9.36914  c
14.4941 9.43164 14.2070 9.46289 13.8867 9.46289  c
13.1055 9.46289 12.4434 9.17871 11.9004 8.61035  c
11.3574 8.04199 11.0859 7.24609 11.0859 6.22266  c
11.0859 5.21484 11.3594 4.39648 11.9062 3.76758  c
12.4531 3.13867 13.1680 2.82422 14.0508 2.82422  c
14.4961 2.82422 14.9277 2.92871 15.3457 3.13770  c
h
15.7324 5.60156 m
15.6895 5.14453 15.5898 4.77930 15.4336 4.50586  c
15.1445 3.99805 14.6621 3.74414 13.9863 3.74414  c
13.5020 3.74414 13.0957 3.91895 12.7676 4.26855  c
12.4395 4.61816 12.2656 5.06250 12.2461 5.60156  c
h
18.1406 2.96484 m
19.1426 2.96484 l
19.1426 4.04883 l
19.2246 3.83789 19.4258 3.58105 19.7461 3.27832  c
20.0664 2.97559 20.4355 2.82422 20.8535 2.82422  c
20.8730 2.82422 20.9062 2.82617 20.9531 2.83008  c
21.0000 2.83398 21.0801 2.84180 21.1934 2.85352  c
21.1934 3.96680 l
21.1309 3.95508 21.0732 3.94727 21.0205 3.94336  c
20.9678 3.93945 20.9102 3.93750 20.8477 3.93750  c
20.3164 3.93750 19.9082 4.10840 19.6230 4.45020  c
19.3379 4.79199 19.1953 5.18555 19.1953 5.63086  c
19.1953 9.24023 l
18.1406 9.24023 l
h
22.1074 2.96484 m
23.1504 2.96484 l
23.1504 3.85547 l
23.4004 3.54688 23.6270 3.32227 23.8301 3.18164  c
24.1777 2.94336 24.5723 2.82422 25.0137 2.82422  c
25.5137 2.82422 25.9160 2.94727 26.2207 3.19336  c
26.3926 3.33398 26.5488 3.54102 26.6895 3.81445  c
26.9238 3.47852 27.1992 3.22949 27.5156 3.06738  c
27.8320 2.90527 28.1875 2.82422 28.5820 2.82422  c
29.4258 2.82422 30.0000 3.12891 30.3047 3.73828  c
30.4688 4.06641 30.5508 4.50781 30.5508 5.06250  c
30.5508 9.24023 l
29.4551 9.24023 l
29.4551 4.88086 l
29.4551 4.46289 29.3506 4.17578 29.1416 4.01953  c
28.9326 3.86328 28.6777 3.78516 28.3770 3.78516  c
27.9629 3.78516 27.6064 3.92383 27.3076 4.20117  c
27.0088 4.47852 26.8594 4.94141 26.8594 5.58984  c
26.8594 9.24023 l
25.7871 9.24023 l
25.7871 5.14453 l
25.7871 4.71875 25.7363 4.40820 25.6348 4.21289  c
25.4746 3.91992 25.1758 3.77344 24.7383 3.77344  c
24.3398 3.77344 23.9775 3.92773 23.6514 4.23633  c
23.3252 4.54492 23.1621 5.10352 23.1621 5.91211  c
23.1621 9.24023 l
22.1074 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
2 j
0 j
[ 1.00000 0.00000 0.00000 1.00000 53.5000 172.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.17773 .632812 m
2.35547 .632812 l
2.35547 9.24023 l
1.17773 9.24023 l
h
4.92773 .632812 m
7.40039 7.96289 l
9.84375 .632812 l
11.1504 .632812 l
8.00977 9.24023 l
6.77344 9.24023 l
3.63867 .632812 l
h
12.1113 2.99414 m
13.1836 2.99414 l
13.1836 9.24023 l
12.1113 9.24023 l
h
12.1113 .632812 m
13.1836 .632812 l
13.1836 1.82812 l
12.1113 1.82812 l
h
15.4043 7.27148 m
15.4355 7.62305 15.5234 7.89258 15.6680 8.08008  c
15.9336 8.41992 16.3945 8.58984 17.0508 8.58984  c
17.4414 8.58984 17.7852 8.50488 18.0820 8.33496  c
18.3789 8.16504 18.5273 7.90234 18.5273 7.54688  c
18.5273 7.27734 18.4082 7.07227 18.1699 6.93164  c
18.0176 6.84570 17.7168 6.74609 17.2676 6.63281  c
16.4297 6.42188 l
15.8945 6.28906 15.5000 6.14062 15.2461 5.97656  c
14.7930 5.69141 14.5664 5.29688 14.5664 4.79297  c
14.5664 4.19922 14.7803 3.71875 15.2080 3.35156  c
15.6357 2.98438 16.2109 2.80078 16.9336 2.80078  c
17.8789 2.80078 18.5605 3.07812 18.9785 3.63281  c
19.2402 3.98438 19.3672 4.36328 19.3594 4.76953  c
18.3633 4.76953 l
18.3438 4.53125 18.2598 4.31445 18.1113 4.11914  c
17.8691 3.84180 17.4492 3.70312 16.8516 3.70312  c
16.4531 3.70312 16.1514 3.77930 15.9463 3.93164  c
15.7412 4.08398 15.6387 4.28516 15.6387 4.53516  c
15.6387 4.80859 15.7734 5.02734 16.0430 5.19141  c
16.1992 5.28906 16.4297 5.37500 16.7344 5.44922  c
17.4316 5.61914 l
18.1895 5.80273 18.6973 5.98047 18.9551 6.15234  c
19.3652 6.42188 19.5703 6.84570 19.5703 7.42383  c
19.5703 7.98242 19.3584 8.46484 18.9346 8.87109  c
18.5107 9.27734 17.8652 9.48047 16.9980 9.48047  c
16.0645 9.48047 15.4033 9.26855 15.0146 8.84473  c
14.6260 8.42090 14.4180 7.89648 14.3906 7.27148  c
h
20.7773 2.99414 m
21.8496 2.99414 l
21.8496 9.24023 l
20.7773 9.24023 l
h
20.7773 .632812 m
21.8496 .632812 l
21.8496 1.82812 l
20.7773 1.82812 l
h
23.6543 1.21289 m
24.7207 1.21289 l
24.7207 2.96484 l
25.7227 2.96484 l
25.7227 3.82617 l
24.7207 3.82617 l
24.7207 7.92188 l
24.7207 8.14062 24.7949 8.28711 24.9434 8.36133  c
25.0254 8.40430 25.1621 8.42578 25.3535 8.42578  c
25.4043 8.42578 25.4590 8.42480 25.5176 8.42285  c
25.5762 8.42090 25.6445 8.41602 25.7227 8.40820  c
25.7227 9.24023 l
25.6016 9.27539 25.4756 9.30078 25.3447 9.31641  c
25.2139 9.33203 25.0723 9.33984 24.9199 9.33984  c
24.4277 9.33984 24.0938 9.21387 23.9180 8.96191  c
23.7422 8.70996 23.6543 8.38281 23.6543 7.98047  c
23.6543 3.82617 l
22.8047 3.82617 l
22.8047 2.96484 l
23.6543 2.96484 l
h
30.7061 7.76660 m
30.9658 7.23730 31.0957 6.64844 31.0957 6.00000  c
31.0957 5.41406 31.0020 4.93750 30.8145 4.57031  c
30.5176 3.99219 30.0059 3.70312 29.2793 3.70312  c
28.6348 3.70312 28.1660 3.94922 27.8730 4.44141  c
27.5801 4.93359 27.4336 5.52734 27.4336 6.22266  c
27.4336 6.89062 27.5801 7.44727 27.8730 7.89258  c
28.1660 8.33789 28.6309 8.56055 29.2676 8.56055  c
29.9668 8.56055 30.4463 8.29590 30.7061 7.76660  c
h
31.3594 3.59180 m
31.9180 4.13086 32.1973 4.92383 32.1973 5.97070  c
32.1973 6.98242 31.9512 7.81836 31.4590 8.47852  c
30.9668 9.13867 30.2031 9.46875 29.1680 9.46875  c
28.3047 9.46875 27.6191 9.17676 27.1113 8.59277  c
26.6035 8.00879 26.3496 7.22461 26.3496 6.24023  c
26.3496 5.18555 26.6172 4.34570 27.1523 3.72070  c
27.6875 3.09570 28.4062 2.78320 29.3086 2.78320  c
30.1172 2.78320 30.8008 3.05273 31.3594 3.59180  c
h
33.4805 2.96484 m
34.4824 2.96484 l
34.4824 4.04883 l
34.5645 3.83789 34.7656 3.58105 35.0859 3.27832  c
35.4062 2.97559 35.7754 2.82422 36.1934 2.82422  c
36.2129 2.82422 36.2461 2.82617 36.2930 2.83008  c
36.3398 2.83398 36.4199 2.84180 36.5332 2.85352  c
36.5332 3.96680 l
36.4707 3.95508 36.4131 3.94727 36.3604 3.94336  c
36.3076 3.93945 36.2500 3.93750 36.1875 3.93750  c
35.6562 3.93750 35.2480 4.10840 34.9629 4.45020  c
34.6777 4.79199 34.5352 5.18555 34.5352 5.63086  c
34.5352 9.24023 l
33.4805 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
2 j
0 j
[ 1.00000 0.00000 0.00000 1.00000 175.500 264.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.17773 .632812 m
2.35547 .632812 l
2.35547 9.24023 l
1.17773 9.24023 l
h
11.3379 1.86328 m
11.9082 2.62500 12.1934 3.59961 12.1934 4.78711  c
12.1934 6.07227 11.8672 7.14062 11.2148 7.99219  c
10.4492 8.99219 9.35742 9.49219 7.93945 9.49219  c
6.61523 9.49219 5.57422 9.05469 4.81641 8.17969  c
4.14062 7.33594 3.80273 6.26953 3.80273 4.98047  c
3.80273 3.81641 4.09180 2.82031 4.66992 1.99219  c
5.41211 .929688 6.50977 .398438 7.96289 .398438  c
9.48242 .398438 10.6074 .886719 11.3379 1.86328  c
h
10.3096 7.34473 m
10.7686 6.60840 10.9980 5.76172 10.9980 4.80469  c
10.9980 3.79297 10.7334 2.97852 10.2041 2.36133  c
9.67480 1.74414 8.95117 1.43555 8.03320 1.43555  c
7.14258 1.43555 6.41602 1.74121 5.85352 2.35254  c
5.29102 2.96387 5.00977 3.86523 5.00977 5.05664  c
5.00977 6.00977 5.25098 6.81348 5.73340 7.46777  c
6.21582 8.12207 6.99805 8.44922 8.08008 8.44922  c
9.10742 8.44922 9.85059 8.08105 10.3096 7.34473  c
h
17.3174 7.91309 m
17.6436 7.50098 17.8066 6.88477 17.8066 6.06445  c
17.8066 5.56445 17.7344 5.13477 17.5898 4.77539  c
17.3164 4.08398 16.8164 3.73828 16.0898 3.73828  c
15.3594 3.73828 14.8594 4.10352 14.5898 4.83398  c
14.4453 5.22461 14.3730 5.72070 14.3730 6.32227  c
14.3730 6.80664 14.4453 7.21875 14.5898 7.55859  c
14.8633 8.20703 15.3633 8.53125 16.0898 8.53125  c
16.5820 8.53125 16.9912 8.32520 17.3174 7.91309  c
h
13.3594 2.99414 m
14.3848 2.99414 l
14.3848 3.82617 l
14.5957 3.54102 14.8262 3.32031 15.0762 3.16406  c
15.4316 2.92969 15.8496 2.81250 16.3301 2.81250  c
17.0410 2.81250 17.6445 3.08496 18.1406 3.62988  c
18.6367 4.17480 18.8848 4.95312 18.8848 5.96484  c
18.8848 7.33203 18.5273 8.30859 17.8125 8.89453  c
17.3594 9.26562 16.8320 9.45117 16.2305 9.45117  c
15.7578 9.45117 15.3613 9.34766 15.0410 9.14062  c
14.8535 9.02344 14.6445 8.82227 14.4141 8.53711  c
14.4141 11.7422 l
13.3594 11.7422 l
h
24.0234 3.13770 m
24.4414 3.34668 24.7598 3.61719 24.9785 3.94922  c
25.1895 4.26562 25.3301 4.63477 25.4004 5.05664  c
25.4629 5.34570 25.4941 5.80664 25.4941 6.43945  c
20.8945 6.43945 l
20.9141 7.07617 21.0645 7.58691 21.3457 7.97168  c
21.6270 8.35645 22.0625 8.54883 22.6523 8.54883  c
23.2031 8.54883 23.6426 8.36719 23.9707 8.00391  c
24.1582 7.79297 24.2910 7.54883 24.3691 7.27148  c
25.4062 7.27148 l
25.3789 7.50195 25.2881 7.75879 25.1338 8.04199  c
24.9795 8.32520 24.8066 8.55664 24.6152 8.73633  c
24.2949 9.04883 23.8984 9.25977 23.4258 9.36914  c
23.1719 9.43164 22.8848 9.46289 22.5645 9.46289  c
21.7832 9.46289 21.1211 9.17871 20.5781 8.61035  c
20.0352 8.04199 19.7637 7.24609 19.7637 6.22266  c
19.7637 5.21484 20.0371 4.39648 20.5840 3.76758  c
21.1309 3.13867 21.8457 2.82422 22.7285 2.82422  c
23.1738 2.82422 23.6055 2.92871 24.0234 3.13770  c
h
24.4102 5.60156 m
24.3672 5.14453 24.2676 4.77930 24.1113 4.50586  c
23.8223 3.99805 23.3398 3.74414 22.6641 3.74414  c
22.1797 3.74414 21.7734 3.91895 21.4453 4.26855  c
21.1172 4.61816 20.9434 5.06250 20.9238 5.60156  c
h
26.8184 2.96484 m
27.8203 2.96484 l
27.8203 4.04883 l
27.9023 3.83789 28.1035 3.58105 28.4238 3.27832  c
28.7441 2.97559 29.1133 2.82422 29.5312 2.82422  c
29.5508 2.82422 29.5840 2.82617 29.6309 2.83008  c
29.6777 2.83398 29.7578 2.84180 29.8711 2.85352  c
29.8711 3.96680 l
29.8086 3.95508 29.7510 3.94727 29.6982 3.94336  c
29.6455 3.93945 29.5879 3.93750 29.5254 3.93750  c
28.9941 3.93750 28.5859 4.10840 28.3008 4.45020  c
28.0156 4.79199 27.8730 5.18555 27.8730 5.63086  c
27.8730 9.24023 l
26.8184 9.24023 l
h
31.9277 8.29102 m
32.1504 8.46680 32.4141 8.55469 32.7188 8.55469  c
33.0898 8.55469 33.4492 8.46875 33.7969 8.29688  c
34.3828 8.01172 34.6758 7.54492 34.6758 6.89648  c
34.6758 6.04688 l
34.5469 6.12891 34.3809 6.19727 34.1777 6.25195  c
33.9746 6.30664 33.7754 6.34570 33.5801 6.36914  c
32.9414 6.45117 l
32.5586 6.50195 32.2715 6.58203 32.0801 6.69141  c
31.7559 6.87500 31.5938 7.16797 31.5938 7.57031  c
31.5938 7.87500 31.7051 8.11523 31.9277 8.29102  c
h
34.1484 5.43750 m
34.3906 5.40625 34.5527 5.30469 34.6348 5.13281  c
34.6816 5.03906 34.7051 4.90430 34.7051 4.72852  c
34.7051 4.36914 34.5771 4.10840 34.3213 3.94629  c
34.0654 3.78418 33.6992 3.70312 33.2227 3.70312  c
32.6719 3.70312 32.2812 3.85156 32.0508 4.14844  c
31.9219 4.31250 31.8379 4.55664 31.7988 4.88086  c
30.8145 4.88086 l
30.8340 4.10742 31.0850 3.56934 31.5674 3.26660  c
32.0498 2.96387 32.6094 2.81250 33.2461 2.81250  c
33.9844 2.81250 34.5840 2.95312 35.0449 3.23438  c
35.5020 3.51562 35.7305 3.95312 35.7305 4.54688  c
35.7305 8.16211 l
35.7305 8.27148 35.7529 8.35938 35.7979 8.42578  c
35.8428 8.49219 35.9375 8.52539 36.0820 8.52539  c
36.1289 8.52539 36.1816 8.52246 36.2402 8.51660  c
36.2988 8.51074 36.3613 8.50195 36.4277 8.49023  c
36.4277 9.26953 l
36.2637 9.31641 36.1387 9.34570 36.0527 9.35742  c
35.9668 9.36914 35.8496 9.37500 35.7012 9.37500  c
35.3379 9.37500 35.0742 9.24609 34.9102 8.98828  c
34.8242 8.85156 34.7637 8.65820 34.7285 8.40820  c
34.5137 8.68945 34.2051 8.93359 33.8027 9.14062  c
33.4004 9.34766 32.9570 9.45117 32.4727 9.45117  c
31.8906 9.45117 31.4150 9.27441 31.0459 8.92090  c
30.6768 8.56738 30.4922 8.12500 30.4922 7.59375  c
30.4922 7.01172 30.6738 6.56055 31.0371 6.24023  c
31.4004 5.91992 31.8770 5.72266 32.4668 5.64844  c
h
37.6699 1.21289 m
38.7363 1.21289 l
38.7363 2.96484 l
39.7383 2.96484 l
39.7383 3.82617 l
38.7363 3.82617 l
38.7363 7.92188 l
38.7363 8.14062 38.8105 8.28711 38.9590 8.36133  c
39.0410 8.40430 39.1777 8.42578 39.3691 8.42578  c
39.4199 8.42578 39.4746 8.42480 39.5332 8.42285  c
39.5918 8.42090 39.6602 8.41602 39.7383 8.40820  c
39.7383 9.24023 l
39.6172 9.27539 39.4912 9.30078 39.3604 9.31641  c
39.2295 9.33203 39.0879 9.33984 38.9355 9.33984  c
38.4434 9.33984 38.1094 9.21387 37.9336 8.96191  c
37.7578 8.70996 37.6699 8.38281 37.6699 7.98047  c
37.6699 3.82617 l
36.8203 3.82617 l
36.8203 2.96484 l
37.6699 2.96484 l
h
40.7930 2.99414 m
41.8652 2.99414 l
41.8652 9.24023 l
40.7930 9.24023 l
h
40.7930 .632812 m
41.8652 .632812 l
41.8652 1.82812 l
40.7930 1.82812 l
h
47.3877 7.76660 m
47.6475 7.23730 47.7773 6.64844 47.7773 6.00000  c
47.7773 5.41406 47.6836 4.93750 47.4961 4.57031  c
47.1992 3.99219 46.6875 3.70312 45.9609 3.70312  c
45.3164 3.70312 44.8477 3.94922 44.5547 4.44141  c
44.2617 4.93359 44.1152 5.52734 44.1152 6.22266  c
44.1152 6.89062 44.2617 7.44727 44.5547 7.89258  c
44.8477 8.33789 45.3125 8.56055 45.9492 8.56055  c
46.6484 8.56055 47.1279 8.29590 47.3877 7.76660  c
h
48.0410 3.59180 m
48.5996 4.13086 48.8789 4.92383 48.8789 5.97070  c
48.8789 6.98242 48.6328 7.81836 48.1406 8.47852  c
47.6484 9.13867 46.8848 9.46875 45.8496 9.46875  c
44.9863 9.46875 44.3008 9.17676 43.7930 8.59277  c
43.2852 8.00879 43.0312 7.22461 43.0312 6.24023  c
43.0312 5.18555 43.2988 4.34570 43.8340 3.72070  c
44.3691 3.09570 45.0879 2.78320 45.9902 2.78320  c
46.7988 2.78320 47.4824 3.05273 48.0410 3.59180  c
h
50.1328 2.96484 m
51.1348 2.96484 l
51.1348 3.85547 l
51.4316 3.48828 51.7461 3.22461 52.0781 3.06445  c
52.4102 2.90430 52.7793 2.82422 53.1855 2.82422  c
54.0762 2.82422 54.6777 3.13477 54.9902 3.75586  c
55.1621 4.09570 55.2480 4.58203 55.2480 5.21484  c
55.2480 9.24023 l
54.1758 9.24023 l
54.1758 5.28516 l
54.1758 4.90234 54.1191 4.59375 54.0059 4.35938  c
53.8184 3.96875 53.4785 3.77344 52.9863 3.77344  c
52.7363 3.77344 52.5312 3.79883 52.3711 3.84961  c
52.0820 3.93555 51.8281 4.10742 51.6094 4.36523  c
51.4336 4.57227 51.3193 4.78613 51.2666 5.00684  c
51.2139 5.22754 51.1875 5.54297 51.1875 5.95312  c
51.1875 9.24023 l
50.1328 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
2 j
0 j
[ 1.00000 0.00000 0.00000 1.00000 172.000 60.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.17773 .632812 m
2.35547 .632812 l
2.35547 9.24023 l
1.17773 9.24023 l
h
4.35938 .632812 m
10.6348 .632812 l
10.6348 1.68750 l
5.49609 1.68750 l
5.49609 4.30078 l
10.2480 4.30078 l
10.2480 5.29688 l
5.49609 5.29688 l
5.49609 8.21484 l
10.7227 8.21484 l
10.7227 9.24023 l
4.35938 9.24023 l
h
11.5137 2.96484 m
12.8789 2.96484 l
14.3203 5.17383 l
15.7793 2.96484 l
17.0625 2.99414 l
14.9473 6.02344 l
17.1562 9.24023 l
15.8086 9.24023 l
14.2500 6.88477 l
12.7383 9.24023 l
11.4023 9.24023 l
13.6113 6.02344 l
h
21.9873 7.91309 m
22.3135 7.50098 22.4766 6.88477 22.4766 6.06445  c
22.4766 5.56445 22.4043 5.13477 22.2598 4.77539  c
21.9863 4.08398 21.4863 3.73828 20.7598 3.73828  c
20.0293 3.73828 19.5293 4.10352 19.2598 4.83398  c
19.1152 5.22461 19.0430 5.72070 19.0430 6.32227  c
19.0430 6.80664 19.1152 7.21875 19.2598 7.55859  c
19.5332 8.20703 20.0332 8.53125 20.7598 8.53125  c
21.2520 8.53125 21.6611 8.32520 21.9873 7.91309  c
h
18.0293 2.99414 m
19.0547 2.99414 l
19.0547 3.82617 l
19.2656 3.54102 19.4961 3.32031 19.7461 3.16406  c
20.1016 2.92969 20.5195 2.81250 21.0000 2.81250  c
21.7109 2.81250 22.3145 3.08496 22.8105 3.62988  c
23.3066 4.17480 23.5547 4.95312 23.5547 5.96484  c
23.5547 7.33203 23.1973 8.30859 22.4824 8.89453  c
22.0293 9.26562 21.5020 9.45117 20.9004 9.45117  c
20.4277 9.45117 20.0312 9.34766 19.7109 9.14062  c
19.5234 9.02344 19.3145 8.82227 19.0840 8.53711  c
19.0840 11.7422 l
18.0293 11.7422 l
h
24.8145 2.96484 m
25.8164 2.96484 l
25.8164 4.04883 l
25.8984 3.83789 26.0996 3.58105 26.4199 3.27832  c
26.7402 2.97559 27.1094 2.82422 27.5273 2.82422  c
27.5469 2.82422 27.5801 2.82617 27.6270 2.83008  c
27.6738 2.83398 27.7539 2.84180 27.8672 2.85352  c
27.8672 3.96680 l
27.8047 3.95508 27.7471 3.94727 27.6943 3.94336  c
27.6416 3.93945 27.5840 3.93750 27.5215 3.93750  c
26.9902 3.93750 26.5820 4.10840 26.2969 4.45020  c
26.0117 4.79199 25.8691 5.18555 25.8691 5.63086  c
25.8691 9.24023 l
24.8145 9.24023 l
h
32.6895 3.13770 m
33.1074 3.34668 33.4258 3.61719 33.6445 3.94922  c
33.8555 4.26562 33.9961 4.63477 34.0664 5.05664  c
34.1289 5.34570 34.1602 5.80664 34.1602 6.43945  c
29.5605 6.43945 l
29.5801 7.07617 29.7305 7.58691 30.0117 7.97168  c
30.2930 8.35645 30.7285 8.54883 31.3184 8.54883  c
31.8691 8.54883 32.3086 8.36719 32.6367 8.00391  c
32.8242 7.79297 32.9570 7.54883 33.0352 7.27148  c
34.0723 7.27148 l
34.0449 7.50195 33.9541 7.75879 33.7998 8.04199  c
33.6455 8.32520 33.4727 8.55664 33.2812 8.73633  c
32.9609 9.04883 32.5645 9.25977 32.0918 9.36914  c
31.8379 9.43164 31.5508 9.46289 31.2305 9.46289  c
30.4492 9.46289 29.7871 9.17871 29.2441 8.61035  c
28.7012 8.04199 28.4297 7.24609 28.4297 6.22266  c
28.4297 5.21484 28.7031 4.39648 29.2500 3.76758  c
29.7969 3.13867 30.5117 2.82422 31.3945 2.82422  c
31.8398 2.82422 32.2715 2.92871 32.6895 3.13770  c
h
33.0762 5.60156 m
33.0332 5.14453 32.9336 4.77930 32.7773 4.50586  c
32.4883 3.99805 32.0059 3.74414 31.3301 3.74414  c
30.8457 3.74414 30.4395 3.91895 30.1113 4.26855  c
29.7832 4.61816 29.6094 5.06250 29.5898 5.60156  c
h
36.0820 7.27148 m
36.1133 7.62305 36.2012 7.89258 36.3457 8.08008  c
36.6113 8.41992 37.0723 8.58984 37.7285 8.58984  c
38.1191 8.58984 38.4629 8.50488 38.7598 8.33496  c
39.0566 8.16504 39.2051 7.90234 39.2051 7.54688  c
39.2051 7.27734 39.0859 7.07227 38.8477 6.93164  c
38.6953 6.84570 38.3945 6.74609 37.9453 6.63281  c
37.1074 6.42188 l
36.5723 6.28906 36.1777 6.14062 35.9238 5.97656  c
35.4707 5.69141 35.2441 5.29688 35.2441 4.79297  c
35.2441 4.19922 35.4580 3.71875 35.8857 3.35156  c
36.3135 2.98438 36.8887 2.80078 37.6113 2.80078  c
38.5566 2.80078 39.2383 3.07812 39.6562 3.63281  c
39.9180 3.98438 40.0449 4.36328 40.0371 4.76953  c
39.0410 4.76953 l
39.0215 4.53125 38.9375 4.31445 38.7891 4.11914  c
38.5469 3.84180 38.1270 3.70312 37.5293 3.70312  c
37.1309 3.70312 36.8291 3.77930 36.6240 3.93164  c
36.4189 4.08398 36.3164 4.28516 36.3164 4.53516  c
36.3164 4.80859 36.4512 5.02734 36.7207 5.19141  c
36.8770 5.28906 37.1074 5.37500 37.4121 5.44922  c
38.1094 5.61914 l
38.8672 5.80273 39.3750 5.98047 39.6328 6.15234  c
40.0430 6.42188 40.2480 6.84570 40.2480 7.42383  c
40.2480 7.98242 40.0361 8.46484 39.6123 8.87109  c
39.1885 9.27734 38.5430 9.48047 37.6758 9.48047  c
36.7422 9.48047 36.0811 9.26855 35.6924 8.84473  c
35.3037 8.42090 35.0957 7.89648 35.0684 7.27148  c
h
42.0820 7.27148 m
42.1133 7.62305 42.2012 7.89258 42.3457 8.08008  c
42.6113 8.41992 43.0723 8.58984 43.7285 8.58984  c
44.1191 8.58984 44.4629 8.50488 44.7598 8.33496  c
45.0566 8.16504 45.2051 7.90234 45.2051 7.54688  c
45.2051 7.27734 45.0859 7.07227 44.8477 6.93164  c
44.6953 6.84570 44.3945 6.74609 43.9453 6.63281  c
43.1074 6.42188 l
42.5723 6.28906 42.1777 6.14062 41.9238 5.97656  c
41.4707 5.69141 41.2441 5.29688 41.2441 4.79297  c
41.2441 4.19922 41.4580 3.71875 41.8857 3.35156  c
42.3135 2.98438 42.8887 2.80078 43.6113 2.80078  c
44.5566 2.80078 45.2383 3.07812 45.6562 3.63281  c
45.9180 3.98438 46.0449 4.36328 46.0371 4.76953  c
45.0410 4.76953 l
45.0215 4.53125 44.9375 4.31445 44.7891 4.11914  c
44.5469 3.84180 44.1270 3.70312 43.5293 3.70312  c
43.1309 3.70312 42.8291 3.77930 42.6240 3.93164  c
42.4189 4.08398 42.3164 4.28516 42.3164 4.53516  c
42.3164 4.80859 42.4512 5.02734 42.7207 5.19141  c
42.8770 5.28906 43.1074 5.37500 43.4121 5.44922  c
44.1094 5.61914 l
44.8672 5.80273 45.3750 5.98047 45.6328 6.15234  c
46.0430 6.42188 46.2480 6.84570 46.2480 7.42383  c
46.2480 7.98242 46.0361 8.46484 45.6123 8.87109  c
45.1885 9.27734 44.5430 9.48047 43.6758 9.48047  c
42.7422 9.48047 42.0811 9.26855 41.6924 8.84473  c
41.3037 8.42090 41.0957 7.89648 41.0684 7.27148  c
h
47.4551 2.99414 m
48.5273 2.99414 l
48.5273 9.24023 l
47.4551 9.24023 l
h
47.4551 .632812 m
48.5273 .632812 l
48.5273 1.82812 l
47.4551 1.82812 l
h
54.0498 7.76660 m
54.3096 7.23730 54.4395 6.64844 54.4395 6.00000  c
54.4395 5.41406 54.3457 4.93750 54.1582 4.57031  c
53.8613 3.99219 53.3496 3.70312 52.6230 3.70312  c
51.9785 3.70312 51.5098 3.94922 51.2168 4.44141  c
50.9238 4.93359 50.7773 5.52734 50.7773 6.22266  c
50.7773 6.89062 50.9238 7.44727 51.2168 7.89258  c
51.5098 8.33789 51.9746 8.56055 52.6113 8.56055  c
53.3105 8.56055 53.7900 8.29590 54.0498 7.76660  c
h
54.7031 3.59180 m
55.2617 4.13086 55.5410 4.92383 55.5410 5.97070  c
55.5410 6.98242 55.2949 7.81836 54.8027 8.47852  c
54.3105 9.13867 53.5469 9.46875 52.5117 9.46875  c
51.6484 9.46875 50.9629 9.17676 50.4551 8.59277  c
49.9473 8.00879 49.6934 7.22461 49.6934 6.24023  c
49.6934 5.18555 49.9609 4.34570 50.4961 3.72070  c
51.0312 3.09570 51.7500 2.78320 52.6523 2.78320  c
53.4609 2.78320 54.1445 3.05273 54.7031 3.59180  c
h
56.7949 2.96484 m
57.7969 2.96484 l
57.7969 3.85547 l
58.0938 3.48828 58.4082 3.22461 58.7402 3.06445  c
59.0723 2.90430 59.4414 2.82422 59.8477 2.82422  c
60.7383 2.82422 61.3398 3.13477 61.6523 3.75586  c
61.8242 4.09570 61.9102 4.58203 61.9102 5.21484  c
61.9102 9.24023 l
60.8379 9.24023 l
60.8379 5.28516 l
60.8379 4.90234 60.7812 4.59375 60.6680 4.35938  c
60.4805 3.96875 60.1406 3.77344 59.6484 3.77344  c
59.3984 3.77344 59.1934 3.79883 59.0332 3.84961  c
58.7441 3.93555 58.4902 4.10742 58.2715 4.36523  c
58.0957 4.57227 57.9814 4.78613 57.9287 5.00684  c
57.8760 5.22754 57.8496 5.54297 57.8496 5.95312  c
57.8496 9.24023 l
56.7949 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
216.000 44.0000 m
216.000 50.6274 210.627 56.0000 204.000 56.0000  c
197.373 56.0000 192.000 50.6274 192.000 44.0000  c
192.000 37.3726 197.373 32.0000 204.000 32.0000  c
210.627 32.0000 216.000 37.3726 216.000 44.0000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
216.000 44.0000 m
216.000 50.6274 210.627 56.0000 204.000 56.0000  c
197.373 56.0000 192.000 50.6274 192.000 44.0000  c
192.000 37.3726 197.373 32.0000 204.000 32.0000  c
210.627 32.0000 216.000 37.3726 216.000 44.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
[ 1.00000 0.00000 0.00000 1.00000 40.0000 104.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.17773 .632812 m
2.35547 .632812 l
2.35547 9.24023 l
1.17773 9.24023 l
h
4.35938 .632812 m
10.6348 .632812 l
10.6348 1.68750 l
5.49609 1.68750 l
5.49609 4.30078 l
10.2480 4.30078 l
10.2480 5.29688 l
5.49609 5.29688 l
5.49609 8.21484 l
10.7227 8.21484 l
10.7227 9.24023 l
4.35938 9.24023 l
h
11.5137 2.96484 m
12.8789 2.96484 l
14.3203 5.17383 l
15.7793 2.96484 l
17.0625 2.99414 l
14.9473 6.02344 l
17.1562 9.24023 l
15.8086 9.24023 l
14.2500 6.88477 l
12.7383 9.24023 l
11.4023 9.24023 l
13.6113 6.02344 l
h
21.9873 7.91309 m
22.3135 7.50098 22.4766 6.88477 22.4766 6.06445  c
22.4766 5.56445 22.4043 5.13477 22.2598 4.77539  c
21.9863 4.08398 21.4863 3.73828 20.7598 3.73828  c
20.0293 3.73828 19.5293 4.10352 19.2598 4.83398  c
19.1152 5.22461 19.0430 5.72070 19.0430 6.32227  c
19.0430 6.80664 19.1152 7.21875 19.2598 7.55859  c
19.5332 8.20703 20.0332 8.53125 20.7598 8.53125  c
21.2520 8.53125 21.6611 8.32520 21.9873 7.91309  c
h
18.0293 2.99414 m
19.0547 2.99414 l
19.0547 3.82617 l
19.2656 3.54102 19.4961 3.32031 19.7461 3.16406  c
20.1016 2.92969 20.5195 2.81250 21.0000 2.81250  c
21.7109 2.81250 22.3145 3.08496 22.8105 3.62988  c
23.3066 4.17480 23.5547 4.95312 23.5547 5.96484  c
23.5547 7.33203 23.1973 8.30859 22.4824 8.89453  c
22.0293 9.26562 21.5020 9.45117 20.9004 9.45117  c
20.4277 9.45117 20.0312 9.34766 19.7109 9.14062  c
19.5234 9.02344 19.3145 8.82227 19.0840 8.53711  c
19.0840 11.7422 l
18.0293 11.7422 l
h
24.8145 2.96484 m
25.8164 2.96484 l
25.8164 4.04883 l
25.8984 3.83789 26.0996 3.58105 26.4199 3.27832  c
26.7402 2.97559 27.1094 2.82422 27.5273 2.82422  c
27.5469 2.82422 27.5801 2.82617 27.6270 2.83008  c
27.6738 2.83398 27.7539 2.84180 27.8672 2.85352  c
27.8672 3.96680 l
27.8047 3.95508 27.7471 3.94727 27.6943 3.94336  c
27.6416 3.93945 27.5840 3.93750 27.5215 3.93750  c
26.9902 3.93750 26.5820 4.10840 26.2969 4.45020  c
26.0117 4.79199 25.8691 5.18555 25.8691 5.63086  c
25.8691 9.24023 l
24.8145 9.24023 l
h
32.6895 3.13770 m
33.1074 3.34668 33.4258 3.61719 33.6445 3.94922  c
33.8555 4.26562 33.9961 4.63477 34.0664 5.05664  c
34.1289 5.34570 34.1602 5.80664 34.1602 6.43945  c
29.5605 6.43945 l
29.5801 7.07617 29.7305 7.58691 30.0117 7.97168  c
30.2930 8.35645 30.7285 8.54883 31.3184 8.54883  c
31.8691 8.54883 32.3086 8.36719 32.6367 8.00391  c
32.8242 7.79297 32.9570 7.54883 33.0352 7.27148  c
34.0723 7.27148 l
34.0449 7.50195 33.9541 7.75879 33.7998 8.04199  c
33.6455 8.32520 33.4727 8.55664 33.2812 8.73633  c
32.9609 9.04883 32.5645 9.25977 32.0918 9.36914  c
31.8379 9.43164 31.5508 9.46289 31.2305 9.46289  c
30.4492 9.46289 29.7871 9.17871 29.2441 8.61035  c
28.7012 8.04199 28.4297 7.24609 28.4297 6.22266  c
28.4297 5.21484 28.7031 4.39648 29.2500 3.76758  c
29.7969 3.13867 30.5117 2.82422 31.3945 2.82422  c
31.8398 2.82422 32.2715 2.92871 32.6895 3.13770  c
h
33.0762 5.60156 m
33.0332 5.14453 32.9336 4.77930 32.7773 4.50586  c
32.4883 3.99805 32.0059 3.74414 31.3301 3.74414  c
30.8457 3.74414 30.4395 3.91895 30.1113 4.26855  c
29.7832 4.61816 29.6094 5.06250 29.5898 5.60156  c
h
36.0820 7.27148 m
36.1133 7.62305 36.2012 7.89258 36.3457 8.08008  c
36.6113 8.41992 37.0723 8.58984 37.7285 8.58984  c
38.1191 8.58984 38.4629 8.50488 38.7598 8.33496  c
39.0566 8.16504 39.2051 7.90234 39.2051 7.54688  c
39.2051 7.27734 39.0859 7.07227 38.8477 6.93164  c
38.6953 6.84570 38.3945 6.74609 37.9453 6.63281  c
37.1074 6.42188 l
36.5723 6.28906 36.1777 6.14062 35.9238 5.97656  c
35.4707 5.69141 35.2441 5.29688 35.2441 4.79297  c
35.2441 4.19922 35.4580 3.71875 35.8857 3.35156  c
36.3135 2.98438 36.8887 2.80078 37.6113 2.80078  c
38.5566 2.80078 39.2383 3.07812 39.6562 3.63281  c
39.9180 3.98438 40.0449 4.36328 40.0371 4.76953  c
39.0410 4.76953 l
39.0215 4.53125 38.9375 4.31445 38.7891 4.11914  c
38.5469 3.84180 38.1270 3.70312 37.5293 3.70312  c
37.1309 3.70312 36.8291 3.77930 36.6240 3.93164  c
36.4189 4.08398 36.3164 4.28516 36.3164 4.53516  c
36.3164 4.80859 36.4512 5.02734 36.7207 5.19141  c
36.8770 5.28906 37.1074 5.37500 37.4121 5.44922  c
38.1094 5.61914 l
38.8672 5.80273 39.3750 5.98047 39.6328 6.15234  c
40.0430 6.42188 40.2480 6.84570 40.2480 7.42383  c
40.2480 7.98242 40.0361 8.46484 39.6123 8.87109  c
39.1885 9.27734 38.5430 9.48047 37.6758 9.48047  c
36.7422 9.48047 36.0811 9.26855 35.6924 8.84473  c
35.3037 8.42090 35.0957 7.89648 35.0684 7.27148  c
h
42.0820 7.27148 m
42.1133 7.62305 42.2012 7.89258 42.3457 8.08008  c
42.6113 8.41992 43.0723 8.58984 43.7285 8.58984  c
44.1191 8.58984 44.4629 8.50488 44.7598 8.33496  c
45.0566 8.16504 45.2051 7.90234 45.2051 7.54688  c
45.2051 7.27734 45.0859 7.07227 44.8477 6.93164  c
44.6953 6.84570 44.3945 6.74609 43.9453 6.63281  c
43.1074 6.42188 l
42.5723 6.28906 42.1777 6.14062 41.9238 5.97656  c
41.4707 5.69141 41.2441 5.29688 41.2441 4.79297  c
41.2441 4.19922 41.4580 3.71875 41.8857 3.35156  c
42.3135 2.98438 42.8887 2.80078 43.6113 2.80078  c
44.5566 2.80078 45.2383 3.07812 45.6562 3.63281  c
45.9180 3.98438 46.0449 4.36328 46.0371 4.76953  c
45.0410 4.76953 l
45.0215 4.53125 44.9375 4.31445 44.7891 4.11914  c
44.5469 3.84180 44.1270 3.70312 43.5293 3.70312  c
43.1309 3.70312 42.8291 3.77930 42.6240 3.93164  c
42.4189 4.08398 42.3164 4.28516 42.3164 4.53516  c
42.3164 4.80859 42.4512 5.02734 42.7207 5.19141  c
42.8770 5.28906 43.1074 5.37500 43.4121 5.44922  c
44.1094 5.61914 l
44.8672 5.80273 45.3750 5.98047 45.6328 6.15234  c
46.0430 6.42188 46.2480 6.84570 46.2480 7.42383  c
46.2480 7.98242 46.0361 8.46484 45.6123 8.87109  c
45.1885 9.27734 44.5430 9.48047 43.6758 9.48047  c
42.7422 9.48047 42.0811 9.26855 41.6924 8.84473  c
41.3037 8.42090 41.0957 7.89648 41.0684 7.27148  c
h
47.4551 2.99414 m
48.5273 2.99414 l
48.5273 9.24023 l
47.4551 9.24023 l
h
47.4551 .632812 m
48.5273 .632812 l
48.5273 1.82812 l
47.4551 1.82812 l
h
54.0498 7.76660 m
54.3096 7.23730 54.4395 6.64844 54.4395 6.00000  c
54.4395 5.41406 54.3457 4.93750 54.1582 4.57031  c
53.8613 3.99219 53.3496 3.70312 52.6230 3.70312  c
51.9785 3.70312 51.5098 3.94922 51.2168 4.44141  c
50.9238 4.93359 50.7773 5.52734 50.7773 6.22266  c
50.7773 6.89062 50.9238 7.44727 51.2168 7.89258  c
51.5098 8.33789 51.9746 8.56055 52.6113 8.56055  c
53.3105 8.56055 53.7900 8.29590 54.0498 7.76660  c
h
54.7031 3.59180 m
55.2617 4.13086 55.5410 4.92383 55.5410 5.97070  c
55.5410 6.98242 55.2949 7.81836 54.8027 8.47852  c
54.3105 9.13867 53.5469 9.46875 52.5117 9.46875  c
51.6484 9.46875 50.9629 9.17676 50.4551 8.59277  c
49.9473 8.00879 49.6934 7.22461 49.6934 6.24023  c
49.6934 5.18555 49.9609 4.34570 50.4961 3.72070  c
51.0312 3.09570 51.7500 2.78320 52.6523 2.78320  c
53.4609 2.78320 54.1445 3.05273 54.7031 3.59180  c
h
56.7949 2.96484 m
57.7969 2.96484 l
57.7969 3.85547 l
58.0938 3.48828 58.4082 3.22461 58.7402 3.06445  c
59.0723 2.90430 59.4414 2.82422 59.8477 2.82422  c
60.7383 2.82422 61.3398 3.13477 61.6523 3.75586  c
61.8242 4.09570 61.9102 4.58203 61.9102 5.21484  c
61.9102 9.24023 l
60.8379 9.24023 l
60.8379 5.28516 l
60.8379 4.90234 60.7812 4.59375 60.6680 4.35938  c
60.4805 3.96875 60.1406 3.77344 59.6484 3.77344  c
59.3984 3.77344 59.1934 3.79883 59.0332 3.84961  c
58.7441 3.93555 58.4902 4.10742 58.2715 4.36523  c
58.0957 4.57227 57.9814 4.78613 57.9287 5.00684  c
57.8760 5.22754 57.8496 5.54297 57.8496 5.95312  c
57.8496 9.24023 l
56.7949 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
84.0000 88.0000 m
84.0000 94.6274 78.6274 100.000 72.0000 100.000  c
65.3726 100.000 60.0000 94.6274 60.0000 88.0000  c
60.0000 81.3726 65.3726 76.0000 72.0000 76.0000  c
78.6274 76.0000 84.0000 81.3726 84.0000 88.0000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
84.0000 88.0000 m
84.0000 94.6274 78.6274 100.000 72.0000 100.000  c
65.3726 100.000 60.0000 94.6274 60.0000 88.0000  c
60.0000 81.3726 65.3726 76.0000 72.0000 76.0000  c
78.6274 76.0000 84.0000 81.3726 84.0000 88.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
148.000 103.000 m
148.000 139.000 l
148.000 140.657 149.343 142.000 151.000 142.000  c
259.500 142.000 l
261.157 142.000 262.500 140.657 262.500 139.000  c
262.500 103.000 l
262.500 101.343 261.157 100.000 259.500 100.000  c
151.000 100.000 l
149.343 100.000 148.000 101.343 148.000 103.000  c
h
f
1.50000 w
2 j
.525490 .525490 .525490 RG
newpath
148.000 103.000 m
148.000 139.000 l
148.000 140.657 149.343 142.000 151.000 142.000  c
259.500 142.000 l
261.157 142.000 262.500 140.657 262.500 139.000  c
262.500 103.000 l
262.500 101.343 261.157 100.000 259.500 100.000  c
151.000 100.000 l
149.343 100.000 148.000 101.343 148.000 103.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [148.0 100.0 148.0 142.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
150.500 105.500 m
150.500 138.500 l
150.500 140.157 151.843 141.500 153.500 141.500  c
259.000 141.500 l
260.657 141.500 262.000 140.157 262.000 138.500  c
262.000 105.500 l
262.000 103.843 260.657 102.500 259.000 102.500  c
153.500 102.500 l
151.843 102.500 150.500 103.843 150.500 105.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 170.250 108.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.02539 .632812 m
7.30078 .632812 l
7.30078 1.68750 l
2.16211 1.68750 l
2.16211 4.30078 l
6.91406 4.30078 l
6.91406 5.29688 l
2.16211 5.29688 l
2.16211 8.21484 l
7.38867 8.21484 l
7.38867 9.24023 l
1.02539 9.24023 l
h
8.17969 2.96484 m
9.54492 2.96484 l
10.9863 5.17383 l
12.4453 2.96484 l
13.7285 2.99414 l
11.6133 6.02344 l
13.8223 9.24023 l
12.4746 9.24023 l
10.9160 6.88477 l
9.40430 9.24023 l
8.06836 9.24023 l
10.2773 6.02344 l
h
18.6533 7.91309 m
18.9795 7.50098 19.1426 6.88477 19.1426 6.06445  c
19.1426 5.56445 19.0703 5.13477 18.9258 4.77539  c
18.6523 4.08398 18.1523 3.73828 17.4258 3.73828  c
16.6953 3.73828 16.1953 4.10352 15.9258 4.83398  c
15.7812 5.22461 15.7090 5.72070 15.7090 6.32227  c
15.7090 6.80664 15.7812 7.21875 15.9258 7.55859  c
16.1992 8.20703 16.6992 8.53125 17.4258 8.53125  c
17.9180 8.53125 18.3271 8.32520 18.6533 7.91309  c
h
14.6953 2.99414 m
15.7207 2.99414 l
15.7207 3.82617 l
15.9316 3.54102 16.1621 3.32031 16.4121 3.16406  c
16.7676 2.92969 17.1855 2.81250 17.6660 2.81250  c
18.3770 2.81250 18.9805 3.08496 19.4766 3.62988  c
19.9727 4.17480 20.2207 4.95312 20.2207 5.96484  c
20.2207 7.33203 19.8633 8.30859 19.1484 8.89453  c
18.6953 9.26562 18.1680 9.45117 17.5664 9.45117  c
17.0938 9.45117 16.6973 9.34766 16.3770 9.14062  c
16.1895 9.02344 15.9805 8.82227 15.7500 8.53711  c
15.7500 11.7422 l
14.6953 11.7422 l
h
21.4805 2.96484 m
22.4824 2.96484 l
22.4824 4.04883 l
22.5645 3.83789 22.7656 3.58105 23.0859 3.27832  c
23.4062 2.97559 23.7754 2.82422 24.1934 2.82422  c
24.2129 2.82422 24.2461 2.82617 24.2930 2.83008  c
24.3398 2.83398 24.4199 2.84180 24.5332 2.85352  c
24.5332 3.96680 l
24.4707 3.95508 24.4131 3.94727 24.3604 3.94336  c
24.3076 3.93945 24.2500 3.93750 24.1875 3.93750  c
23.6562 3.93750 23.2480 4.10840 22.9629 4.45020  c
22.6777 4.79199 22.5352 5.18555 22.5352 5.63086  c
22.5352 9.24023 l
21.4805 9.24023 l
h
29.3555 3.13770 m
29.7734 3.34668 30.0918 3.61719 30.3105 3.94922  c
30.5215 4.26562 30.6621 4.63477 30.7324 5.05664  c
30.7949 5.34570 30.8262 5.80664 30.8262 6.43945  c
26.2266 6.43945 l
26.2461 7.07617 26.3965 7.58691 26.6777 7.97168  c
26.9590 8.35645 27.3945 8.54883 27.9844 8.54883  c
28.5352 8.54883 28.9746 8.36719 29.3027 8.00391  c
29.4902 7.79297 29.6230 7.54883 29.7012 7.27148  c
30.7383 7.27148 l
30.7109 7.50195 30.6201 7.75879 30.4658 8.04199  c
30.3115 8.32520 30.1387 8.55664 29.9473 8.73633  c
29.6270 9.04883 29.2305 9.25977 28.7578 9.36914  c
28.5039 9.43164 28.2168 9.46289 27.8965 9.46289  c
27.1152 9.46289 26.4531 9.17871 25.9102 8.61035  c
25.3672 8.04199 25.0957 7.24609 25.0957 6.22266  c
25.0957 5.21484 25.3691 4.39648 25.9160 3.76758  c
26.4629 3.13867 27.1777 2.82422 28.0605 2.82422  c
28.5059 2.82422 28.9375 2.92871 29.3555 3.13770  c
h
29.7422 5.60156 m
29.6992 5.14453 29.5996 4.77930 29.4434 4.50586  c
29.1543 3.99805 28.6719 3.74414 27.9961 3.74414  c
27.5117 3.74414 27.1055 3.91895 26.7773 4.26855  c
26.4492 4.61816 26.2754 5.06250 26.2559 5.60156  c
h
32.7480 7.27148 m
32.7793 7.62305 32.8672 7.89258 33.0117 8.08008  c
33.2773 8.41992 33.7383 8.58984 34.3945 8.58984  c
34.7852 8.58984 35.1289 8.50488 35.4258 8.33496  c
35.7227 8.16504 35.8711 7.90234 35.8711 7.54688  c
35.8711 7.27734 35.7520 7.07227 35.5137 6.93164  c
35.3613 6.84570 35.0605 6.74609 34.6113 6.63281  c
33.7734 6.42188 l
33.2383 6.28906 32.8438 6.14062 32.5898 5.97656  c
32.1367 5.69141 31.9102 5.29688 31.9102 4.79297  c
31.9102 4.19922 32.1240 3.71875 32.5518 3.35156  c
32.9795 2.98438 33.5547 2.80078 34.2773 2.80078  c
35.2227 2.80078 35.9043 3.07812 36.3223 3.63281  c
36.5840 3.98438 36.7109 4.36328 36.7031 4.76953  c
35.7070 4.76953 l
35.6875 4.53125 35.6035 4.31445 35.4551 4.11914  c
35.2129 3.84180 34.7930 3.70312 34.1953 3.70312  c
33.7969 3.70312 33.4951 3.77930 33.2900 3.93164  c
33.0850 4.08398 32.9824 4.28516 32.9824 4.53516  c
32.9824 4.80859 33.1172 5.02734 33.3867 5.19141  c
33.5430 5.28906 33.7734 5.37500 34.0781 5.44922  c
34.7754 5.61914 l
35.5332 5.80273 36.0410 5.98047 36.2988 6.15234  c
36.7090 6.42188 36.9141 6.84570 36.9141 7.42383  c
36.9141 7.98242 36.7021 8.46484 36.2783 8.87109  c
35.8545 9.27734 35.2090 9.48047 34.3418 9.48047  c
33.4082 9.48047 32.7471 9.26855 32.3584 8.84473  c
31.9697 8.42090 31.7617 7.89648 31.7344 7.27148  c
h
38.7480 7.27148 m
38.7793 7.62305 38.8672 7.89258 39.0117 8.08008  c
39.2773 8.41992 39.7383 8.58984 40.3945 8.58984  c
40.7852 8.58984 41.1289 8.50488 41.4258 8.33496  c
41.7227 8.16504 41.8711 7.90234 41.8711 7.54688  c
41.8711 7.27734 41.7520 7.07227 41.5137 6.93164  c
41.3613 6.84570 41.0605 6.74609 40.6113 6.63281  c
39.7734 6.42188 l
39.2383 6.28906 38.8438 6.14062 38.5898 5.97656  c
38.1367 5.69141 37.9102 5.29688 37.9102 4.79297  c
37.9102 4.19922 38.1240 3.71875 38.5518 3.35156  c
38.9795 2.98438 39.5547 2.80078 40.2773 2.80078  c
41.2227 2.80078 41.9043 3.07812 42.3223 3.63281  c
42.5840 3.98438 42.7109 4.36328 42.7031 4.76953  c
41.7070 4.76953 l
41.6875 4.53125 41.6035 4.31445 41.4551 4.11914  c
41.2129 3.84180 40.7930 3.70312 40.1953 3.70312  c
39.7969 3.70312 39.4951 3.77930 39.2900 3.93164  c
39.0850 4.08398 38.9824 4.28516 38.9824 4.53516  c
38.9824 4.80859 39.1172 5.02734 39.3867 5.19141  c
39.5430 5.28906 39.7734 5.37500 40.0781 5.44922  c
40.7754 5.61914 l
41.5332 5.80273 42.0410 5.98047 42.2988 6.15234  c
42.7090 6.42188 42.9141 6.84570 42.9141 7.42383  c
42.9141 7.98242 42.7021 8.46484 42.2783 8.87109  c
41.8545 9.27734 41.2090 9.48047 40.3418 9.48047  c
39.4082 9.48047 38.7471 9.26855 38.3584 8.84473  c
37.9697 8.42090 37.7617 7.89648 37.7344 7.27148  c
h
44.1211 2.99414 m
45.1934 2.99414 l
45.1934 9.24023 l
44.1211 9.24023 l
h
44.1211 .632812 m
45.1934 .632812 l
45.1934 1.82812 l
44.1211 1.82812 l
h
50.7158 7.76660 m
50.9756 7.23730 51.1055 6.64844 51.1055 6.00000  c
51.1055 5.41406 51.0117 4.93750 50.8242 4.57031  c
50.5273 3.99219 50.0156 3.70312 49.2891 3.70312  c
48.6445 3.70312 48.1758 3.94922 47.8828 4.44141  c
47.5898 4.93359 47.4434 5.52734 47.4434 6.22266  c
47.4434 6.89062 47.5898 7.44727 47.8828 7.89258  c
48.1758 8.33789 48.6406 8.56055 49.2773 8.56055  c
49.9766 8.56055 50.4561 8.29590 50.7158 7.76660  c
h
51.3691 3.59180 m
51.9277 4.13086 52.2070 4.92383 52.2070 5.97070  c
52.2070 6.98242 51.9609 7.81836 51.4688 8.47852  c
50.9766 9.13867 50.2129 9.46875 49.1777 9.46875  c
48.3145 9.46875 47.6289 9.17676 47.1211 8.59277  c
46.6133 8.00879 46.3594 7.22461 46.3594 6.24023  c
46.3594 5.18555 46.6270 4.34570 47.1621 3.72070  c
47.6973 3.09570 48.4160 2.78320 49.3184 2.78320  c
50.1270 2.78320 50.8105 3.05273 51.3691 3.59180  c
h
53.4609 2.96484 m
54.4629 2.96484 l
54.4629 3.85547 l
54.7598 3.48828 55.0742 3.22461 55.4062 3.06445  c
55.7383 2.90430 56.1074 2.82422 56.5137 2.82422  c
57.4043 2.82422 58.0059 3.13477 58.3184 3.75586  c
58.4902 4.09570 58.5762 4.58203 58.5762 5.21484  c
58.5762 9.24023 l
57.5039 9.24023 l
57.5039 5.28516 l
57.5039 4.90234 57.4473 4.59375 57.3340 4.35938  c
57.1465 3.96875 56.8066 3.77344 56.3145 3.77344  c
56.0645 3.77344 55.8594 3.79883 55.6992 3.84961  c
55.4102 3.93555 55.1562 4.10742 54.9375 4.36523  c
54.7617 4.57227 54.6475 4.78613 54.5947 5.00684  c
54.5420 5.22754 54.5156 5.54297 54.5156 5.95312  c
54.5156 9.24023 l
53.4609 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
241.500 108.000 m
250.500 108.000 l
250.500 120.000 l
241.500 120.000 l
241.500 108.000 l
h
f
1.00000 w
0 j
newpath
241.500 108.000 m
250.500 108.000 l
250.500 120.000 l
241.500 120.000 l
241.500 108.000 l
h
S
newpath
238.500 110.000 m
244.500 110.000 l
244.500 113.000 l
238.500 113.000 l
238.500 110.000 l
h
f
.752941 .752941 .752941 RG
newpath
238.500 110.000 m
244.500 110.000 l
244.500 113.000 l
238.500 113.000 l
238.500 110.000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
238.500 115.000 m
244.500 115.000 l
244.500 118.000 l
238.500 118.000 l
238.500 115.000 l
h
f
.752941 .752941 .752941 RG
newpath
238.500 115.000 m
244.500 115.000 l
244.500 118.000 l
238.500 118.000 l
238.500 115.000 l
h
S
0.00000 0.00000 0.00000 RG
2 j
0.00000 0.00000 0.00000 RG
newpath
204.000 150.000 m
204.000 235.498 l
S
newpath
216.000 248.000 m
216.000 241.373 210.627 236.000 204.000 236.000  c
197.373 236.000 192.000 241.373 192.000 248.000  c
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
204.000 92.0000 m
204.000 72.0529 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
240.000 150.000 m
240.000 191.525 l
S
newpath
252.000 204.000 m
252.000 197.373 246.627 192.000 240.000 192.000  c
233.373 192.000 228.000 197.373 228.000 204.000  c
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
168.000 150.000 m
168.000 191.525 l
S
newpath
180.000 204.000 m
180.000 197.373 174.627 192.000 168.000 192.000  c
161.373 192.000 156.000 197.373 156.000 204.000  c
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
140.116 120.149 m
83.0485 150.185 l
S
newpath
77.5890 166.619 m
83.4537 163.532 85.7057 156.276 82.6190 150.411  c
79.5323 144.546 72.2758 142.294 66.4110 145.381  c
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
139.890 113.012 m
83.5066 92.2393 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
196.000 94.0000 m
196.000 106.000 l
196.000 107.105 196.895 108.000 198.000 108.000  c
210.000 108.000 l
211.105 108.000 212.000 107.105 212.000 106.000  c
212.000 94.0000 l
212.000 92.8954 211.105 92.0000 210.000 92.0000  c
198.000 92.0000 l
196.895 92.0000 196.000 92.8954 196.000 94.0000  c
h
f
1.50000 w
.525490 .525490 .525490 RG
newpath
196.000 94.0000 m
196.000 106.000 l
196.000 107.105 196.895 108.000 198.000 108.000  c
210.000 108.000 l
211.105 108.000 212.000 107.105 212.000 106.000  c
212.000 94.0000 l
212.000 92.8954 211.105 92.0000 210.000 92.0000  c
198.000 92.0000 l
196.895 92.0000 196.000 92.8954 196.000 94.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [196.0 92.0 196.0 108.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
198.500 96.5000 m
198.500 105.500 l
198.500 106.605 199.395 107.500 200.500 107.500  c
209.500 107.500 l
210.605 107.500 211.500 106.605 211.500 105.500  c
211.500 96.5000 l
211.500 95.3954 210.605 94.5000 209.500 94.5000  c
200.500 94.5000 l
199.395 94.5000 198.500 95.3954 198.500 96.5000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 196.000 76.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
232.000 136.000 m
232.000 148.000 l
232.000 149.105 232.895 150.000 234.000 150.000  c
246.000 150.000 l
247.105 150.000 248.000 149.105 248.000 148.000  c
248.000 136.000 l
248.000 134.895 247.105 134.000 246.000 134.000  c
234.000 134.000 l
232.895 134.000 232.000 134.895 232.000 136.000  c
h
f
.525490 .525490 .525490 RG
newpath
232.000 136.000 m
232.000 148.000 l
232.000 149.105 232.895 150.000 234.000 150.000  c
246.000 150.000 l
247.105 150.000 248.000 149.105 248.000 148.000  c
248.000 136.000 l
248.000 134.895 247.105 134.000 246.000 134.000  c
234.000 134.000 l
232.895 134.000 232.000 134.895 232.000 136.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [232.0 134.0 232.0 150.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
234.500 138.500 m
234.500 147.500 l
234.500 148.605 235.395 149.500 236.500 149.500  c
245.500 149.500 l
246.605 149.500 247.500 148.605 247.500 147.500  c
247.500 138.500 l
247.500 137.395 246.605 136.500 245.500 136.500  c
236.500 136.500 l
235.395 136.500 234.500 137.395 234.500 138.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 256.000 146.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.984375 1.21289 m
2.05078 1.21289 l
2.05078 2.96484 l
3.05273 2.96484 l
3.05273 3.82617 l
2.05078 3.82617 l
2.05078 7.92188 l
2.05078 8.14062 2.12500 8.28711 2.27344 8.36133  c
2.35547 8.40430 2.49219 8.42578 2.68359 8.42578  c
2.73438 8.42578 2.78906 8.42480 2.84766 8.42285  c
2.90625 8.42090 2.97461 8.41602 3.05273 8.40820  c
3.05273 9.24023 l
2.93164 9.27539 2.80566 9.30078 2.67480 9.31641  c
2.54395 9.33203 2.40234 9.33984 2.25000 9.33984  c
1.75781 9.33984 1.42383 9.21387 1.24805 8.96191  c
1.07227 8.70996 .984375 8.38281 .984375 7.98047  c
.984375 3.82617 l
.134766 3.82617 l
.134766 2.96484 l
.984375 2.96484 l
h
4.15723 7.35352 m
4.41699 6.81836 4.92383 6.33203 5.67773 5.89453  c
6.80273 5.24414 l
7.30664 4.95117 7.66016 4.70117 7.86328 4.49414  c
8.18359 4.16992 8.34375 3.79883 8.34375 3.38086  c
8.34375 2.89258 8.19727 2.50488 7.90430 2.21777  c
7.61133 1.93066 7.22070 1.78711 6.73242 1.78711  c
6.00977 1.78711 5.50977 2.06055 5.23242 2.60742  c
5.08398 2.90039 5.00195 3.30664 4.98633 3.82617  c
3.91406 3.82617 l
3.92578 3.09570 4.06055 2.50000 4.31836 2.03906  c
4.77539 1.22656 5.58203 .820312 6.73828 .820312  c
7.69922 .820312 8.40137 1.08008 8.84473 1.59961  c
9.28809 2.11914 9.50977 2.69727 9.50977 3.33398  c
9.50977 4.00586 9.27344 4.58008 8.80078 5.05664  c
8.52734 5.33398 8.03711 5.66992 7.33008 6.06445  c
6.52734 6.50977 l
6.14453 6.72070 5.84375 6.92188 5.62500 7.11328  c
5.23438 7.45312 4.98828 7.83008 4.88672 8.24414  c
9.46875 8.24414 l
9.46875 9.24023 l
3.70898 9.24023 l
3.74805 8.51758 3.89746 7.88867 4.15723 7.35352  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
196.000 136.000 m
196.000 148.000 l
196.000 149.105 196.895 150.000 198.000 150.000  c
210.000 150.000 l
211.105 150.000 212.000 149.105 212.000 148.000  c
212.000 136.000 l
212.000 134.895 211.105 134.000 210.000 134.000  c
198.000 134.000 l
196.895 134.000 196.000 134.895 196.000 136.000  c
h
f
.525490 .525490 .525490 RG
newpath
196.000 136.000 m
196.000 148.000 l
196.000 149.105 196.895 150.000 198.000 150.000  c
210.000 150.000 l
211.105 150.000 212.000 149.105 212.000 148.000  c
212.000 136.000 l
212.000 134.895 211.105 134.000 210.000 134.000  c
198.000 134.000 l
196.895 134.000 196.000 134.895 196.000 136.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [196.0 134.0 196.0 150.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
198.500 138.500 m
198.500 147.500 l
198.500 148.605 199.395 149.500 200.500 149.500  c
209.500 149.500 l
210.605 149.500 211.500 148.605 211.500 147.500  c
211.500 138.500 l
211.500 137.395 210.605 136.500 209.500 136.500  c
200.500 136.500 l
199.395 136.500 198.500 137.395 198.500 138.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 192.000 150.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
4.70215 7.76660 m
4.96191 7.23730 5.09180 6.64844 5.09180 6.00000  c
5.09180 5.41406 4.99805 4.93750 4.81055 4.57031  c
4.51367 3.99219 4.00195 3.70312 3.27539 3.70312  c
2.63086 3.70312 2.16211 3.94922 1.86914 4.44141  c
1.57617 4.93359 1.42969 5.52734 1.42969 6.22266  c
1.42969 6.89062 1.57617 7.44727 1.86914 7.89258  c
2.16211 8.33789 2.62695 8.56055 3.26367 8.56055  c
3.96289 8.56055 4.44238 8.29590 4.70215 7.76660  c
h
5.35547 3.59180 m
5.91406 4.13086 6.19336 4.92383 6.19336 5.97070  c
6.19336 6.98242 5.94727 7.81836 5.45508 8.47852  c
4.96289 9.13867 4.19922 9.46875 3.16406 9.46875  c
2.30078 9.46875 1.61523 9.17676 1.10742 8.59277  c
.599609 8.00879 .345703 7.22461 .345703 6.24023  c
.345703 5.18555 .613281 4.34570 1.14844 3.72070  c
1.68359 3.09570 2.40234 2.78320 3.30469 2.78320  c
4.11328 2.78320 4.79688 3.05273 5.35547 3.59180  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
160.000 136.000 m
160.000 148.000 l
160.000 149.105 160.895 150.000 162.000 150.000  c
174.000 150.000 l
175.105 150.000 176.000 149.105 176.000 148.000  c
176.000 136.000 l
176.000 134.895 175.105 134.000 174.000 134.000  c
162.000 134.000 l
160.895 134.000 160.000 134.895 160.000 136.000  c
h
f
.525490 .525490 .525490 RG
newpath
160.000 136.000 m
160.000 148.000 l
160.000 149.105 160.895 150.000 162.000 150.000  c
174.000 150.000 l
175.105 150.000 176.000 149.105 176.000 148.000  c
176.000 136.000 l
176.000 134.895 175.105 134.000 174.000 134.000  c
162.000 134.000 l
160.895 134.000 160.000 134.895 160.000 136.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [160.0 134.0 160.0 150.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
162.500 138.500 m
162.500 147.500 l
162.500 148.605 163.395 149.500 164.500 149.500  c
173.500 149.500 l
174.605 149.500 175.500 148.605 175.500 147.500  c
175.500 138.500 l
175.500 137.395 174.605 136.500 173.500 136.500  c
164.500 136.500 l
163.395 136.500 162.500 137.395 162.500 138.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 144.000 150.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.984375 1.21289 m
2.05078 1.21289 l
2.05078 2.96484 l
3.05273 2.96484 l
3.05273 3.82617 l
2.05078 3.82617 l
2.05078 7.92188 l
2.05078 8.14062 2.12500 8.28711 2.27344 8.36133  c
2.35547 8.40430 2.49219 8.42578 2.68359 8.42578  c
2.73438 8.42578 2.78906 8.42480 2.84766 8.42285  c
2.90625 8.42090 2.97461 8.41602 3.05273 8.40820  c
3.05273 9.24023 l
2.93164 9.27539 2.80566 9.30078 2.67480 9.31641  c
2.54395 9.33203 2.40234 9.33984 2.25000 9.33984  c
1.75781 9.33984 1.42383 9.21387 1.24805 8.96191  c
1.07227 8.70996 .984375 8.38281 .984375 7.98047  c
.984375 3.82617 l
.134766 3.82617 l
.134766 2.96484 l
.984375 2.96484 l
h
4.48242 3.29883 m
4.48242 2.49023 l
5.24414 2.41602 5.77539 2.29199 6.07617 2.11816  c
6.37695 1.94434 6.60156 1.53320 6.75000 .884766  c
7.58203 .884766 l
7.58203 9.24023 l
6.45703 9.24023 l
6.45703 3.29883 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
140.000 110.000 m
140.000 122.000 l
140.000 123.105 140.895 124.000 142.000 124.000  c
154.000 124.000 l
155.105 124.000 156.000 123.105 156.000 122.000  c
156.000 110.000 l
156.000 108.895 155.105 108.000 154.000 108.000  c
142.000 108.000 l
140.895 108.000 140.000 108.895 140.000 110.000  c
h
f
.525490 .525490 .525490 RG
newpath
140.000 110.000 m
140.000 122.000 l
140.000 123.105 140.895 124.000 142.000 124.000  c
154.000 124.000 l
155.105 124.000 156.000 123.105 156.000 122.000  c
156.000 110.000 l
156.000 108.895 155.105 108.000 154.000 108.000  c
142.000 108.000 l
140.895 108.000 140.000 108.895 140.000 110.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [140.0 108.0 140.0 124.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
142.500 112.500 m
142.500 121.500 l
142.500 122.605 143.395 123.500 144.500 123.500  c
153.500 123.500 l
154.605 123.500 155.500 122.605 155.500 121.500  c
155.500 112.500 l
155.500 111.395 154.605 110.500 153.500 110.500  c
144.500 110.500 l
143.395 110.500 142.500 111.395 142.500 112.500  c
h
f
0.00000 0.00000 0.00000 RG
newpath
144.000 112.000 m
144.000 120.000 l
152.000 120.000 l
h
f*
1.00000 w
newpath
144.000 112.000 m
144.000 120.000 l
152.000 120.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 112.000 84.0000 ] concat
newpath
1.28906 2.96484 m
2.96484 8.07422 l
4.71680 2.96484 l
5.87109 2.96484 l
3.50391 9.24023 l
2.37891 9.24023 l
.0644531 2.96484 l
h
6.77344 2.99414 m
7.84570 2.99414 l
7.84570 9.24023 l
6.77344 9.24023 l
h
6.77344 .632812 m
7.84570 .632812 l
7.84570 1.82812 l
6.77344 1.82812 l
h
10.0664 7.27148 m
10.0977 7.62305 10.1855 7.89258 10.3301 8.08008  c
10.5957 8.41992 11.0566 8.58984 11.7129 8.58984  c
12.1035 8.58984 12.4473 8.50488 12.7441 8.33496  c
13.0410 8.16504 13.1895 7.90234 13.1895 7.54688  c
13.1895 7.27734 13.0703 7.07227 12.8320 6.93164  c
12.6797 6.84570 12.3789 6.74609 11.9297 6.63281  c
11.0918 6.42188 l
10.5566 6.28906 10.1621 6.14062 9.90820 5.97656  c
9.45508 5.69141 9.22852 5.29688 9.22852 4.79297  c
9.22852 4.19922 9.44238 3.71875 9.87012 3.35156  c
10.2979 2.98438 10.8730 2.80078 11.5957 2.80078  c
12.5410 2.80078 13.2227 3.07812 13.6406 3.63281  c
13.9023 3.98438 14.0293 4.36328 14.0215 4.76953  c
13.0254 4.76953 l
13.0059 4.53125 12.9219 4.31445 12.7734 4.11914  c
12.5312 3.84180 12.1113 3.70312 11.5137 3.70312  c
11.1152 3.70312 10.8135 3.77930 10.6084 3.93164  c
10.4033 4.08398 10.3008 4.28516 10.3008 4.53516  c
10.3008 4.80859 10.4355 5.02734 10.7051 5.19141  c
10.8613 5.28906 11.0918 5.37500 11.3965 5.44922  c
12.0938 5.61914 l
12.8516 5.80273 13.3594 5.98047 13.6172 6.15234  c
14.0273 6.42188 14.2324 6.84570 14.2324 7.42383  c
14.2324 7.98242 14.0205 8.46484 13.5967 8.87109  c
13.1729 9.27734 12.5273 9.48047 11.6602 9.48047  c
10.7266 9.48047 10.0654 9.26855 9.67676 8.84473  c
9.28809 8.42090 9.08008 7.89648 9.05273 7.27148  c
h
15.4395 2.99414 m
16.5117 2.99414 l
16.5117 9.24023 l
15.4395 9.24023 l
h
15.4395 .632812 m
16.5117 .632812 l
16.5117 1.82812 l
15.4395 1.82812 l
h
18.3164 1.21289 m
19.3828 1.21289 l
19.3828 2.96484 l
20.3848 2.96484 l
20.3848 3.82617 l
19.3828 3.82617 l
19.3828 7.92188 l
19.3828 8.14062 19.4570 8.28711 19.6055 8.36133  c
19.6875 8.40430 19.8242 8.42578 20.0156 8.42578  c
20.0664 8.42578 20.1211 8.42480 20.1797 8.42285  c
20.2383 8.42090 20.3066 8.41602 20.3848 8.40820  c
20.3848 9.24023 l
20.2637 9.27539 20.1377 9.30078 20.0068 9.31641  c
19.8760 9.33203 19.7344 9.33984 19.5820 9.33984  c
19.0898 9.33984 18.7559 9.21387 18.5801 8.96191  c
18.4043 8.70996 18.3164 8.38281 18.3164 7.98047  c
18.3164 3.82617 l
17.4668 3.82617 l
17.4668 2.96484 l
18.3164 2.96484 l
h
24.7500 .574219 m
27.0000 .574219 l
27.0000 1.43555 l
25.7461 1.43555 l
25.7461 10.7402 l
27.0000 10.7402 l
27.0000 11.6016 l
24.7500 11.6016 l
h
32.9355 2.19141 m
33.3105 2.88281 33.4980 3.83008 33.4980 5.03320  c
33.4980 6.17383 33.3281 7.11719 32.9883 7.86328  c
32.4961 8.93359 31.6914 9.46875 30.5742 9.46875  c
29.5664 9.46875 28.8164 9.03125 28.3242 8.15625  c
27.9141 7.42578 27.7090 6.44531 27.7090 5.21484  c
27.7090 4.26172 27.8320 3.44336 28.0781 2.75977  c
28.5391 1.48633 29.3730 .849609 30.5801 .849609  c
31.6660 .849609 32.4512 1.29688 32.9355 2.19141  c
h
31.8750 7.78125 m
32.1992 7.29688 32.3613 6.39453 32.3613 5.07422  c
32.3613 4.12109 32.2441 3.33691 32.0098 2.72168  c
31.7754 2.10645 31.3203 1.79883 30.6445 1.79883  c
30.0234 1.79883 29.5693 2.09082 29.2822 2.67480  c
28.9951 3.25879 28.8516 4.11914 28.8516 5.25586  c
28.8516 6.11133 28.9434 6.79883 29.1270 7.31836  c
29.4082 8.11133 29.8887 8.50781 30.5684 8.50781  c
31.1152 8.50781 31.5508 8.26562 31.8750 7.78125  c
h
35.0332 7.96289 m
36.2578 7.96289 l
36.2578 9.24023 l
35.0332 9.24023 l
h
38.3672 7.96289 m
39.5918 7.96289 l
39.5918 9.24023 l
38.3672 9.24023 l
h
41.8242 3.29883 m
41.8242 2.49023 l
42.5859 2.41602 43.1172 2.29199 43.4180 2.11816  c
43.7188 1.94434 43.9434 1.53320 44.0918 .884766  c
44.9238 .884766 l
44.9238 9.24023 l
43.7988 9.24023 l
43.7988 3.29883 l
h
47.6250 10.7402 m
48.8730 10.7402 l
48.8730 1.43555 l
47.6250 1.43555 l
47.6250 .574219 l
49.8750 .574219 l
49.8750 11.6016 l
47.6250 11.6016 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 289.000 l
267.000 289.000 l
267.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 289.000 l
267.000 289.000 l
267.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
