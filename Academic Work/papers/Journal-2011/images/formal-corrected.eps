%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 129 219 466 572
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, July 7, 2015 5:58:58 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
336 352 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
336.000 0.00000 l
336.000 352.000 l
0.00000 352.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 360 376 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 362.000 378.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 364.000 380.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
292.000 263.000 m
292.000 287.000 l
292.000 288.657 293.343 290.000 295.000 290.000  c
356.000 290.000 l
357.657 290.000 359.000 288.657 359.000 287.000  c
359.000 263.000 l
359.000 261.343 357.657 260.000 356.000 260.000  c
295.000 260.000 l
293.343 260.000 292.000 261.343 292.000 263.000  c
h
f
1.50000 w
0 J
2 j
.576471 .576471 .643137 RG
newpath
292.000 263.000 m
292.000 287.000 l
292.000 288.657 293.343 290.000 295.000 290.000  c
356.000 290.000 l
357.657 290.000 359.000 288.657 359.000 287.000  c
359.000 263.000 l
359.000 261.343 357.657 260.000 356.000 260.000  c
295.000 260.000 l
293.343 260.000 292.000 261.343 292.000 263.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [292.0 260.0 292.0 290.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
294.500 265.500 m
294.500 286.500 l
294.500 288.157 295.843 289.500 297.500 289.500  c
355.500 289.500 l
357.157 289.500 358.500 288.157 358.500 286.500  c
358.500 265.500 l
358.500 263.843 357.157 262.500 355.500 262.500  c
297.500 262.500 l
295.843 262.500 294.500 263.843 294.500 265.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 304.000 264.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.67578 6.46289 m
1.70312 6.95117 1.81836 7.34766 2.02148 7.65234  c
2.40820 8.22266 3.08984 8.50781 4.06641 8.50781  c
4.50391 8.50781 4.90234 8.44531 5.26172 8.32031  c
5.95703 8.07812 6.30469 7.64453 6.30469 7.01953  c
6.30469 6.55078 6.15820 6.21680 5.86523 6.01758  c
5.56836 5.82227 5.10352 5.65234 4.47070 5.50781  c
3.30469 5.24414 l
2.54297 5.07227 2.00391 4.88281 1.68750 4.67578  c
1.14062 4.31641 .867188 3.77930 .867188 3.06445  c
.867188 2.29102 1.13477 1.65625 1.66992 1.16016  c
2.20508 .664062 2.96289 .416016 3.94336 .416016  c
4.84570 .416016 5.61230 .633789 6.24316 1.06934  c
6.87402 1.50488 7.18945 2.20117 7.18945 3.15820  c
6.09375 3.15820 l
6.03516 2.69727 5.91016 2.34375 5.71875 2.09766  c
5.36328 1.64844 4.75977 1.42383 3.90820 1.42383  c
3.22070 1.42383 2.72656 1.56836 2.42578 1.85742  c
2.12500 2.14648 1.97461 2.48242 1.97461 2.86523  c
1.97461 3.28711 2.15039 3.59570 2.50195 3.79102  c
2.73242 3.91602 3.25391 4.07227 4.06641 4.25977  c
5.27344 4.53516 l
5.85547 4.66797 6.30469 4.84961 6.62109 5.08008  c
7.16797 5.48242 7.44141 6.06641 7.44141 6.83203  c
7.44141 7.78516 7.09473 8.46680 6.40137 8.87695  c
5.70801 9.28711 4.90234 9.49219 3.98438 9.49219  c
2.91406 9.49219 2.07617 9.21875 1.47070 8.67188  c
.865234 8.12891 .568359 7.39258 .580078 6.46289  c
h
8.91797 .632812 m
10.0840 .632812 l
10.0840 8.21484 l
14.4434 8.21484 l
14.4434 9.24023 l
8.91797 9.24023 l
h
18.8262 4.27148 m
19.3184 4.27148 19.7012 4.20312 19.9746 4.06641  c
20.4043 3.85156 20.6191 3.46484 20.6191 2.90625  c
20.6191 2.34375 20.3906 1.96484 19.9336 1.76953  c
19.6758 1.66016 19.2930 1.60547 18.7852 1.60547  c
16.7051 1.60547 l
16.7051 4.27148 l
h
19.2188 8.24414 m
19.9336 8.24414 20.4434 8.03711 20.7480 7.62305  c
20.9395 7.36133 21.0352 7.04492 21.0352 6.67383  c
21.0352 6.04883 20.7559 5.62305 20.1973 5.39648  c
19.9004 5.27539 19.5078 5.21484 19.0195 5.21484  c
16.7051 5.21484 l
16.7051 8.24414 l
h
15.5625 .632812 m
19.2598 .632812 l
20.2676 .632812 20.9844 .933594 21.4102 1.53516  c
21.6602 1.89062 21.7852 2.30078 21.7852 2.76562  c
21.7852 3.30859 21.6309 3.75391 21.3223 4.10156  c
21.1621 4.28516 20.9316 4.45312 20.6309 4.60547  c
21.0723 4.77344 21.4023 4.96289 21.6211 5.17383  c
22.0078 5.54883 22.2012 6.06641 22.2012 6.72656  c
22.2012 7.28125 22.0273 7.78320 21.6797 8.23242  c
21.1602 8.90430 20.3340 9.24023 19.2012 9.24023  c
15.5625 9.24023 l
h
23.3730 .603516 m
24.3984 .603516 l
24.3984 3.72656 l
24.6289 3.42578 24.9043 3.19629 25.2246 3.03809  c
25.5449 2.87988 25.8926 2.80078 26.2676 2.80078  c
27.0488 2.80078 27.6826 3.06934 28.1689 3.60645  c
28.6553 4.14355 28.8984 4.93555 28.8984 5.98242  c
28.8984 6.97461 28.6582 7.79883 28.1777 8.45508  c
27.6973 9.11133 27.0312 9.43945 26.1797 9.43945  c
25.7031 9.43945 25.3008 9.32422 24.9727 9.09375  c
24.7773 8.95703 24.5684 8.73828 24.3457 8.43750  c
24.3457 9.24023 l
23.3730 9.24023 l
h
27.3955 7.82812 m
27.6787 7.37500 27.8203 6.77734 27.8203 6.03516  c
27.8203 5.37500 27.6787 4.82812 27.3955 4.39453  c
27.1123 3.96094 26.6953 3.74414 26.1445 3.74414  c
25.6641 3.74414 25.2432 3.92188 24.8818 4.27734  c
24.5205 4.63281 24.3398 5.21875 24.3398 6.03516  c
24.3398 6.62500 24.4141 7.10352 24.5625 7.47070  c
24.8398 8.16211 25.3574 8.50781 26.1152 8.50781  c
26.6855 8.50781 27.1123 8.28125 27.3955 7.82812  c
h
31.9512 2.13281 m
31.1484 2.13281 l
29.5781 .439453 l
30.8848 .439453 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
346.000 264.000 m
355.000 264.000 l
355.000 276.000 l
346.000 276.000 l
346.000 264.000 l
h
f
1.00000 w
0 j
newpath
346.000 264.000 m
355.000 264.000 l
355.000 276.000 l
346.000 276.000 l
346.000 264.000 l
h
S
newpath
343.000 266.000 m
349.000 266.000 l
349.000 269.000 l
343.000 269.000 l
343.000 266.000 l
h
f
.752941 .752941 .752941 RG
newpath
343.000 266.000 m
349.000 266.000 l
349.000 269.000 l
343.000 269.000 l
343.000 266.000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
343.000 271.000 m
349.000 271.000 l
349.000 274.000 l
343.000 274.000 l
343.000 271.000 l
h
f
.752941 .752941 .752941 RG
newpath
343.000 271.000 m
349.000 271.000 l
349.000 274.000 l
343.000 274.000 l
343.000 271.000 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
32.0000 263.000 m
32.0000 287.000 l
32.0000 288.657 33.3431 290.000 35.0000 290.000  c
96.0000 290.000 l
97.6569 290.000 99.0000 288.657 99.0000 287.000  c
99.0000 263.000 l
99.0000 261.343 97.6569 260.000 96.0000 260.000  c
35.0000 260.000 l
33.3431 260.000 32.0000 261.343 32.0000 263.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
32.0000 263.000 m
32.0000 287.000 l
32.0000 288.657 33.3431 290.000 35.0000 290.000  c
96.0000 290.000 l
97.6569 290.000 99.0000 288.657 99.0000 287.000  c
99.0000 263.000 l
99.0000 261.343 97.6569 260.000 96.0000 260.000  c
35.0000 260.000 l
33.3431 260.000 32.0000 261.343 32.0000 263.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 260.0 32.0 290.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
34.5000 265.500 m
34.5000 286.500 l
34.5000 288.157 35.8431 289.500 37.5000 289.500  c
95.5000 289.500 l
97.1569 289.500 98.5000 288.157 98.5000 286.500  c
98.5000 265.500 l
98.5000 263.843 97.1569 262.500 95.5000 262.500  c
37.5000 262.500 l
35.8431 262.500 34.5000 263.843 34.5000 265.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 44.0000 264.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.67578 6.46289 m
1.70312 6.95117 1.81836 7.34766 2.02148 7.65234  c
2.40820 8.22266 3.08984 8.50781 4.06641 8.50781  c
4.50391 8.50781 4.90234 8.44531 5.26172 8.32031  c
5.95703 8.07812 6.30469 7.64453 6.30469 7.01953  c
6.30469 6.55078 6.15820 6.21680 5.86523 6.01758  c
5.56836 5.82227 5.10352 5.65234 4.47070 5.50781  c
3.30469 5.24414 l
2.54297 5.07227 2.00391 4.88281 1.68750 4.67578  c
1.14062 4.31641 .867188 3.77930 .867188 3.06445  c
.867188 2.29102 1.13477 1.65625 1.66992 1.16016  c
2.20508 .664062 2.96289 .416016 3.94336 .416016  c
4.84570 .416016 5.61230 .633789 6.24316 1.06934  c
6.87402 1.50488 7.18945 2.20117 7.18945 3.15820  c
6.09375 3.15820 l
6.03516 2.69727 5.91016 2.34375 5.71875 2.09766  c
5.36328 1.64844 4.75977 1.42383 3.90820 1.42383  c
3.22070 1.42383 2.72656 1.56836 2.42578 1.85742  c
2.12500 2.14648 1.97461 2.48242 1.97461 2.86523  c
1.97461 3.28711 2.15039 3.59570 2.50195 3.79102  c
2.73242 3.91602 3.25391 4.07227 4.06641 4.25977  c
5.27344 4.53516 l
5.85547 4.66797 6.30469 4.84961 6.62109 5.08008  c
7.16797 5.48242 7.44141 6.06641 7.44141 6.83203  c
7.44141 7.78516 7.09473 8.46680 6.40137 8.87695  c
5.70801 9.28711 4.90234 9.49219 3.98438 9.49219  c
2.91406 9.49219 2.07617 9.21875 1.47070 8.67188  c
.865234 8.12891 .568359 7.39258 .580078 6.46289  c
h
8.91797 .632812 m
10.0840 .632812 l
10.0840 8.21484 l
14.4434 8.21484 l
14.4434 9.24023 l
8.91797 9.24023 l
h
18.8262 4.27148 m
19.3184 4.27148 19.7012 4.20312 19.9746 4.06641  c
20.4043 3.85156 20.6191 3.46484 20.6191 2.90625  c
20.6191 2.34375 20.3906 1.96484 19.9336 1.76953  c
19.6758 1.66016 19.2930 1.60547 18.7852 1.60547  c
16.7051 1.60547 l
16.7051 4.27148 l
h
19.2188 8.24414 m
19.9336 8.24414 20.4434 8.03711 20.7480 7.62305  c
20.9395 7.36133 21.0352 7.04492 21.0352 6.67383  c
21.0352 6.04883 20.7559 5.62305 20.1973 5.39648  c
19.9004 5.27539 19.5078 5.21484 19.0195 5.21484  c
16.7051 5.21484 l
16.7051 8.24414 l
h
15.5625 .632812 m
19.2598 .632812 l
20.2676 .632812 20.9844 .933594 21.4102 1.53516  c
21.6602 1.89062 21.7852 2.30078 21.7852 2.76562  c
21.7852 3.30859 21.6309 3.75391 21.3223 4.10156  c
21.1621 4.28516 20.9316 4.45312 20.6309 4.60547  c
21.0723 4.77344 21.4023 4.96289 21.6211 5.17383  c
22.0078 5.54883 22.2012 6.06641 22.2012 6.72656  c
22.2012 7.28125 22.0273 7.78320 21.6797 8.23242  c
21.1602 8.90430 20.3340 9.24023 19.2012 9.24023  c
15.5625 9.24023 l
h
24.5977 8.29102 m
24.8203 8.46680 25.0840 8.55469 25.3887 8.55469  c
25.7598 8.55469 26.1191 8.46875 26.4668 8.29688  c
27.0527 8.01172 27.3457 7.54492 27.3457 6.89648  c
27.3457 6.04688 l
27.2168 6.12891 27.0508 6.19727 26.8477 6.25195  c
26.6445 6.30664 26.4453 6.34570 26.2500 6.36914  c
25.6113 6.45117 l
25.2285 6.50195 24.9414 6.58203 24.7500 6.69141  c
24.4258 6.87500 24.2637 7.16797 24.2637 7.57031  c
24.2637 7.87500 24.3750 8.11523 24.5977 8.29102  c
h
26.8184 5.43750 m
27.0605 5.40625 27.2227 5.30469 27.3047 5.13281  c
27.3516 5.03906 27.3750 4.90430 27.3750 4.72852  c
27.3750 4.36914 27.2471 4.10840 26.9912 3.94629  c
26.7354 3.78418 26.3691 3.70312 25.8926 3.70312  c
25.3418 3.70312 24.9512 3.85156 24.7207 4.14844  c
24.5918 4.31250 24.5078 4.55664 24.4688 4.88086  c
23.4844 4.88086 l
23.5039 4.10742 23.7549 3.56934 24.2373 3.26660  c
24.7197 2.96387 25.2793 2.81250 25.9160 2.81250  c
26.6543 2.81250 27.2539 2.95312 27.7148 3.23438  c
28.1719 3.51562 28.4004 3.95312 28.4004 4.54688  c
28.4004 8.16211 l
28.4004 8.27148 28.4229 8.35938 28.4678 8.42578  c
28.5127 8.49219 28.6074 8.52539 28.7520 8.52539  c
28.7988 8.52539 28.8516 8.52246 28.9102 8.51660  c
28.9688 8.51074 29.0312 8.50195 29.0977 8.49023  c
29.0977 9.26953 l
28.9336 9.31641 28.8086 9.34570 28.7227 9.35742  c
28.6367 9.36914 28.5195 9.37500 28.3711 9.37500  c
28.0078 9.37500 27.7441 9.24609 27.5801 8.98828  c
27.4941 8.85156 27.4336 8.65820 27.3984 8.40820  c
27.1836 8.68945 26.8750 8.93359 26.4727 9.14062  c
26.0703 9.34766 25.6270 9.45117 25.1426 9.45117  c
24.5605 9.45117 24.0850 9.27441 23.7158 8.92090  c
23.3467 8.56738 23.1621 8.12500 23.1621 7.59375  c
23.1621 7.01172 23.3438 6.56055 23.7070 6.24023  c
24.0703 5.91992 24.5469 5.72266 25.1367 5.64844  c
h
31.9512 2.13281 m
31.1484 2.13281 l
29.5781 .439453 l
30.8848 .439453 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
86.0000 264.000 m
95.0000 264.000 l
95.0000 276.000 l
86.0000 276.000 l
86.0000 264.000 l
h
f
1.00000 w
0 j
newpath
86.0000 264.000 m
95.0000 264.000 l
95.0000 276.000 l
86.0000 276.000 l
86.0000 264.000 l
h
S
newpath
83.0000 266.000 m
89.0000 266.000 l
89.0000 269.000 l
83.0000 269.000 l
83.0000 266.000 l
h
f
.752941 .752941 .752941 RG
newpath
83.0000 266.000 m
89.0000 266.000 l
89.0000 269.000 l
83.0000 269.000 l
83.0000 266.000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
83.0000 271.000 m
89.0000 271.000 l
89.0000 274.000 l
83.0000 274.000 l
83.0000 271.000 l
h
f
.752941 .752941 .752941 RG
newpath
83.0000 271.000 m
89.0000 271.000 l
89.0000 274.000 l
83.0000 274.000 l
83.0000 271.000 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
168.000 343.000 m
168.000 367.000 l
168.000 368.657 169.343 370.000 171.000 370.000  c
221.000 370.000 l
222.657 370.000 224.000 368.657 224.000 367.000  c
224.000 343.000 l
224.000 341.343 222.657 340.000 221.000 340.000  c
171.000 340.000 l
169.343 340.000 168.000 341.343 168.000 343.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
168.000 343.000 m
168.000 367.000 l
168.000 368.657 169.343 370.000 171.000 370.000  c
221.000 370.000 l
222.657 370.000 224.000 368.657 224.000 367.000  c
224.000 343.000 l
224.000 341.343 222.657 340.000 221.000 340.000  c
171.000 340.000 l
169.343 340.000 168.000 341.343 168.000 343.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [168.0 340.0 168.0 370.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
170.500 345.500 m
170.500 366.500 l
170.500 368.157 171.843 369.500 173.500 369.500  c
220.500 369.500 l
222.157 369.500 223.500 368.157 223.500 366.500  c
223.500 345.500 l
223.500 343.843 222.157 342.500 220.500 342.500  c
173.500 342.500 l
171.843 342.500 170.500 343.843 170.500 345.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 180.000 344.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.67578 6.46289 m
1.70312 6.95117 1.81836 7.34766 2.02148 7.65234  c
2.40820 8.22266 3.08984 8.50781 4.06641 8.50781  c
4.50391 8.50781 4.90234 8.44531 5.26172 8.32031  c
5.95703 8.07812 6.30469 7.64453 6.30469 7.01953  c
6.30469 6.55078 6.15820 6.21680 5.86523 6.01758  c
5.56836 5.82227 5.10352 5.65234 4.47070 5.50781  c
3.30469 5.24414 l
2.54297 5.07227 2.00391 4.88281 1.68750 4.67578  c
1.14062 4.31641 .867188 3.77930 .867188 3.06445  c
.867188 2.29102 1.13477 1.65625 1.66992 1.16016  c
2.20508 .664062 2.96289 .416016 3.94336 .416016  c
4.84570 .416016 5.61230 .633789 6.24316 1.06934  c
6.87402 1.50488 7.18945 2.20117 7.18945 3.15820  c
6.09375 3.15820 l
6.03516 2.69727 5.91016 2.34375 5.71875 2.09766  c
5.36328 1.64844 4.75977 1.42383 3.90820 1.42383  c
3.22070 1.42383 2.72656 1.56836 2.42578 1.85742  c
2.12500 2.14648 1.97461 2.48242 1.97461 2.86523  c
1.97461 3.28711 2.15039 3.59570 2.50195 3.79102  c
2.73242 3.91602 3.25391 4.07227 4.06641 4.25977  c
5.27344 4.53516 l
5.85547 4.66797 6.30469 4.84961 6.62109 5.08008  c
7.16797 5.48242 7.44141 6.06641 7.44141 6.83203  c
7.44141 7.78516 7.09473 8.46680 6.40137 8.87695  c
5.70801 9.28711 4.90234 9.49219 3.98438 9.49219  c
2.91406 9.49219 2.07617 9.21875 1.47070 8.67188  c
.865234 8.12891 .568359 7.39258 .580078 6.46289  c
h
8.91797 .632812 m
10.0840 .632812 l
10.0840 8.21484 l
14.4434 8.21484 l
14.4434 9.24023 l
8.91797 9.24023 l
h
18.8262 4.27148 m
19.3184 4.27148 19.7012 4.20312 19.9746 4.06641  c
20.4043 3.85156 20.6191 3.46484 20.6191 2.90625  c
20.6191 2.34375 20.3906 1.96484 19.9336 1.76953  c
19.6758 1.66016 19.2930 1.60547 18.7852 1.60547  c
16.7051 1.60547 l
16.7051 4.27148 l
h
19.2188 8.24414 m
19.9336 8.24414 20.4434 8.03711 20.7480 7.62305  c
20.9395 7.36133 21.0352 7.04492 21.0352 6.67383  c
21.0352 6.04883 20.7559 5.62305 20.1973 5.39648  c
19.9004 5.27539 19.5078 5.21484 19.0195 5.21484  c
16.7051 5.21484 l
16.7051 8.24414 l
h
15.5625 .632812 m
19.2598 .632812 l
20.2676 .632812 20.9844 .933594 21.4102 1.53516  c
21.6602 1.89062 21.7852 2.30078 21.7852 2.76562  c
21.7852 3.30859 21.6309 3.75391 21.3223 4.10156  c
21.1621 4.28516 20.9316 4.45312 20.6309 4.60547  c
21.0723 4.77344 21.4023 4.96289 21.6211 5.17383  c
22.0078 5.54883 22.2012 6.06641 22.2012 6.72656  c
22.2012 7.28125 22.0273 7.78320 21.6797 8.23242  c
21.1602 8.90430 20.3340 9.24023 19.2012 9.24023  c
15.5625 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
211.000 344.000 m
220.000 344.000 l
220.000 356.000 l
211.000 356.000 l
211.000 344.000 l
h
f
1.00000 w
0 j
newpath
211.000 344.000 m
220.000 344.000 l
220.000 356.000 l
211.000 356.000 l
211.000 344.000 l
h
S
newpath
208.000 346.000 m
214.000 346.000 l
214.000 349.000 l
208.000 349.000 l
208.000 346.000 l
h
f
.752941 .752941 .752941 RG
newpath
208.000 346.000 m
214.000 346.000 l
214.000 349.000 l
208.000 349.000 l
208.000 346.000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
208.000 351.000 m
214.000 351.000 l
214.000 354.000 l
208.000 354.000 l
208.000 351.000 l
h
f
.752941 .752941 .752941 RG
newpath
208.000 351.000 m
214.000 351.000 l
214.000 354.000 l
208.000 354.000 l
208.000 351.000 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
156.000 115.000 m
156.000 139.000 l
156.000 140.657 157.343 142.000 159.000 142.000  c
245.000 142.000 l
246.657 142.000 248.000 140.657 248.000 139.000  c
248.000 115.000 l
248.000 113.343 246.657 112.000 245.000 112.000  c
159.000 112.000 l
157.343 112.000 156.000 113.343 156.000 115.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
156.000 115.000 m
156.000 139.000 l
156.000 140.657 157.343 142.000 159.000 142.000  c
245.000 142.000 l
246.657 142.000 248.000 140.657 248.000 139.000  c
248.000 115.000 l
248.000 113.343 246.657 112.000 245.000 112.000  c
159.000 112.000 l
157.343 112.000 156.000 113.343 156.000 115.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [156.0 112.0 156.0 142.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
158.500 117.500 m
158.500 138.500 l
158.500 140.157 159.843 141.500 161.500 141.500  c
244.500 141.500 l
246.157 141.500 247.500 140.157 247.500 138.500  c
247.500 117.500 l
247.500 115.843 246.157 114.500 244.500 114.500  c
161.500 114.500 l
159.843 114.500 158.500 115.843 158.500 117.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 168.000 116.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.884766 .632812 m
2.55469 .632812 l
5.02734 7.91016 l
7.48242 .632812 l
9.13477 .632812 l
9.13477 9.24023 l
8.02734 9.24023 l
8.02734 4.16016 l
8.02734 3.98438 8.03125 3.69336 8.03906 3.28711  c
8.04688 2.88086 8.05078 2.44531 8.05078 1.98047  c
5.59570 9.24023 l
4.44141 9.24023 l
1.96875 1.98047 l
1.96875 2.24414 l
1.96875 2.45508 1.97363 2.77637 1.98340 3.20801  c
1.99316 3.63965 1.99805 3.95703 1.99805 4.16016  c
1.99805 9.24023 l
.884766 9.24023 l
h
12.1758 .632812 m
12.1758 5.95312 l
12.1758 6.57812 12.2930 7.09766 12.5273 7.51172  c
12.8750 8.13672 13.4609 8.44922 14.2852 8.44922  c
15.2734 8.44922 15.9453 8.11133 16.3008 7.43555  c
16.4922 7.06836 16.5879 6.57422 16.5879 5.95312  c
16.5879 .632812 l
17.7715 .632812 l
17.7715 5.46680 l
17.7715 6.52539 17.6289 7.33984 17.3438 7.91016  c
16.8203 8.94922 15.8320 9.46875 14.3789 9.46875  c
12.9258 9.46875 11.9395 8.94922 11.4199 7.91016  c
11.1348 7.33984 10.9922 6.52539 10.9922 5.46680  c
10.9922 .632812 l
h
19.5762 .632812 m
20.7422 .632812 l
20.7422 8.21484 l
25.1016 8.21484 l
25.1016 9.24023 l
19.5762 9.24023 l
h
32.5137 .632812 m
32.5137 1.65820 l
29.6133 1.65820 l
29.6133 9.24023 l
28.4297 9.24023 l
28.4297 1.65820 l
25.5293 1.65820 l
25.5293 .632812 l
h
33.8438 .632812 m
35.0215 .632812 l
35.0215 9.24023 l
33.8438 9.24023 l
h
37.6758 6.46289 m
37.7031 6.95117 37.8184 7.34766 38.0215 7.65234  c
38.4082 8.22266 39.0898 8.50781 40.0664 8.50781  c
40.5039 8.50781 40.9023 8.44531 41.2617 8.32031  c
41.9570 8.07812 42.3047 7.64453 42.3047 7.01953  c
42.3047 6.55078 42.1582 6.21680 41.8652 6.01758  c
41.5684 5.82227 41.1035 5.65234 40.4707 5.50781  c
39.3047 5.24414 l
38.5430 5.07227 38.0039 4.88281 37.6875 4.67578  c
37.1406 4.31641 36.8672 3.77930 36.8672 3.06445  c
36.8672 2.29102 37.1348 1.65625 37.6699 1.16016  c
38.2051 .664062 38.9629 .416016 39.9434 .416016  c
40.8457 .416016 41.6123 .633789 42.2432 1.06934  c
42.8740 1.50488 43.1895 2.20117 43.1895 3.15820  c
42.0938 3.15820 l
42.0352 2.69727 41.9102 2.34375 41.7188 2.09766  c
41.3633 1.64844 40.7598 1.42383 39.9082 1.42383  c
39.2207 1.42383 38.7266 1.56836 38.4258 1.85742  c
38.1250 2.14648 37.9746 2.48242 37.9746 2.86523  c
37.9746 3.28711 38.1504 3.59570 38.5020 3.79102  c
38.7324 3.91602 39.2539 4.07227 40.0664 4.25977  c
41.2734 4.53516 l
41.8555 4.66797 42.3047 4.84961 42.6211 5.08008  c
43.1680 5.48242 43.4414 6.06641 43.4414 6.83203  c
43.4414 7.78516 43.0947 8.46680 42.4014 8.87695  c
41.7080 9.28711 40.9023 9.49219 39.9844 9.49219  c
38.9141 9.49219 38.0762 9.21875 37.4707 8.67188  c
36.8652 8.12891 36.5684 7.39258 36.5801 6.46289  c
h
44.9180 .632812 m
46.0840 .632812 l
46.0840 8.21484 l
50.4434 8.21484 l
50.4434 9.24023 l
44.9180 9.24023 l
h
54.8262 4.27148 m
55.3184 4.27148 55.7012 4.20312 55.9746 4.06641  c
56.4043 3.85156 56.6191 3.46484 56.6191 2.90625  c
56.6191 2.34375 56.3906 1.96484 55.9336 1.76953  c
55.6758 1.66016 55.2930 1.60547 54.7852 1.60547  c
52.7051 1.60547 l
52.7051 4.27148 l
h
55.2188 8.24414 m
55.9336 8.24414 56.4434 8.03711 56.7480 7.62305  c
56.9395 7.36133 57.0352 7.04492 57.0352 6.67383  c
57.0352 6.04883 56.7559 5.62305 56.1973 5.39648  c
55.9004 5.27539 55.5078 5.21484 55.0195 5.21484  c
52.7051 5.21484 l
52.7051 8.24414 l
h
51.5625 .632812 m
55.2598 .632812 l
56.2676 .632812 56.9844 .933594 57.4102 1.53516  c
57.6602 1.89062 57.7852 2.30078 57.7852 2.76562  c
57.7852 3.30859 57.6309 3.75391 57.3223 4.10156  c
57.1621 4.28516 56.9316 4.45312 56.6309 4.60547  c
57.0723 4.77344 57.4023 4.96289 57.6211 5.17383  c
58.0078 5.54883 58.2012 6.06641 58.2012 6.72656  c
58.2012 7.28125 58.0273 7.78320 57.6797 8.23242  c
57.1602 8.90430 56.3340 9.24023 55.2012 9.24023  c
51.5625 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
235.000 116.000 m
244.000 116.000 l
244.000 128.000 l
235.000 128.000 l
235.000 116.000 l
h
f
1.00000 w
0 j
newpath
235.000 116.000 m
244.000 116.000 l
244.000 128.000 l
235.000 128.000 l
235.000 116.000 l
h
S
newpath
232.000 118.000 m
238.000 118.000 l
238.000 121.000 l
232.000 121.000 l
232.000 118.000 l
h
f
.752941 .752941 .752941 RG
newpath
232.000 118.000 m
238.000 118.000 l
238.000 121.000 l
232.000 121.000 l
232.000 118.000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
232.000 123.000 m
238.000 123.000 l
238.000 126.000 l
232.000 126.000 l
232.000 123.000 l
h
f
.752941 .752941 .752941 RG
newpath
232.000 123.000 m
238.000 123.000 l
238.000 126.000 l
232.000 126.000 l
232.000 123.000 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
168.000 195.000 m
168.000 219.000 l
168.000 220.657 169.343 222.000 171.000 222.000  c
223.000 222.000 l
224.657 222.000 226.000 220.657 226.000 219.000  c
226.000 195.000 l
226.000 193.343 224.657 192.000 223.000 192.000  c
171.000 192.000 l
169.343 192.000 168.000 193.343 168.000 195.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
168.000 195.000 m
168.000 219.000 l
168.000 220.657 169.343 222.000 171.000 222.000  c
223.000 222.000 l
224.657 222.000 226.000 220.657 226.000 219.000  c
226.000 195.000 l
226.000 193.343 224.657 192.000 223.000 192.000  c
171.000 192.000 l
169.343 192.000 168.000 193.343 168.000 195.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [168.0 192.0 168.0 222.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
170.500 197.500 m
170.500 218.500 l
170.500 220.157 171.843 221.500 173.500 221.500  c
222.500 221.500 l
224.157 221.500 225.500 220.157 225.500 218.500  c
225.500 197.500 l
225.500 195.843 224.157 194.500 222.500 194.500  c
173.500 194.500 l
171.843 194.500 170.500 195.843 170.500 197.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 180.000 196.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.67578 6.46289 m
1.70312 6.95117 1.81836 7.34766 2.02148 7.65234  c
2.40820 8.22266 3.08984 8.50781 4.06641 8.50781  c
4.50391 8.50781 4.90234 8.44531 5.26172 8.32031  c
5.95703 8.07812 6.30469 7.64453 6.30469 7.01953  c
6.30469 6.55078 6.15820 6.21680 5.86523 6.01758  c
5.56836 5.82227 5.10352 5.65234 4.47070 5.50781  c
3.30469 5.24414 l
2.54297 5.07227 2.00391 4.88281 1.68750 4.67578  c
1.14062 4.31641 .867188 3.77930 .867188 3.06445  c
.867188 2.29102 1.13477 1.65625 1.66992 1.16016  c
2.20508 .664062 2.96289 .416016 3.94336 .416016  c
4.84570 .416016 5.61230 .633789 6.24316 1.06934  c
6.87402 1.50488 7.18945 2.20117 7.18945 3.15820  c
6.09375 3.15820 l
6.03516 2.69727 5.91016 2.34375 5.71875 2.09766  c
5.36328 1.64844 4.75977 1.42383 3.90820 1.42383  c
3.22070 1.42383 2.72656 1.56836 2.42578 1.85742  c
2.12500 2.14648 1.97461 2.48242 1.97461 2.86523  c
1.97461 3.28711 2.15039 3.59570 2.50195 3.79102  c
2.73242 3.91602 3.25391 4.07227 4.06641 4.25977  c
5.27344 4.53516 l
5.85547 4.66797 6.30469 4.84961 6.62109 5.08008  c
7.16797 5.48242 7.44141 6.06641 7.44141 6.83203  c
7.44141 7.78516 7.09473 8.46680 6.40137 8.87695  c
5.70801 9.28711 4.90234 9.49219 3.98438 9.49219  c
2.91406 9.49219 2.07617 9.21875 1.47070 8.67188  c
.865234 8.12891 .568359 7.39258 .580078 6.46289  c
h
8.91797 .632812 m
10.0840 .632812 l
10.0840 8.21484 l
14.4434 8.21484 l
14.4434 9.24023 l
8.91797 9.24023 l
h
18.8262 4.27148 m
19.3184 4.27148 19.7012 4.20312 19.9746 4.06641  c
20.4043 3.85156 20.6191 3.46484 20.6191 2.90625  c
20.6191 2.34375 20.3906 1.96484 19.9336 1.76953  c
19.6758 1.66016 19.2930 1.60547 18.7852 1.60547  c
16.7051 1.60547 l
16.7051 4.27148 l
h
19.2188 8.24414 m
19.9336 8.24414 20.4434 8.03711 20.7480 7.62305  c
20.9395 7.36133 21.0352 7.04492 21.0352 6.67383  c
21.0352 6.04883 20.7559 5.62305 20.1973 5.39648  c
19.9004 5.27539 19.5078 5.21484 19.0195 5.21484  c
16.7051 5.21484 l
16.7051 8.24414 l
h
15.5625 .632812 m
19.2598 .632812 l
20.2676 .632812 20.9844 .933594 21.4102 1.53516  c
21.6602 1.89062 21.7852 2.30078 21.7852 2.76562  c
21.7852 3.30859 21.6309 3.75391 21.3223 4.10156  c
21.1621 4.28516 20.9316 4.45312 20.6309 4.60547  c
21.0723 4.77344 21.4023 4.96289 21.6211 5.17383  c
22.0078 5.54883 22.2012 6.06641 22.2012 6.72656  c
22.2012 7.28125 22.0273 7.78320 21.6797 8.23242  c
21.1602 8.90430 20.3340 9.24023 19.2012 9.24023  c
15.5625 9.24023 l
h
24.6621 .632812 m
24.4688 4.07812 l
23.7891 4.07812 l
23.5957 .632812 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
213.000 196.000 m
222.000 196.000 l
222.000 208.000 l
213.000 208.000 l
213.000 196.000 l
h
f
1.00000 w
0 j
newpath
213.000 196.000 m
222.000 196.000 l
222.000 208.000 l
213.000 208.000 l
213.000 196.000 l
h
S
newpath
210.000 198.000 m
216.000 198.000 l
216.000 201.000 l
210.000 201.000 l
210.000 198.000 l
h
f
.752941 .752941 .752941 RG
newpath
210.000 198.000 m
216.000 198.000 l
216.000 201.000 l
210.000 201.000 l
210.000 198.000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
210.000 203.000 m
216.000 203.000 l
216.000 206.000 l
210.000 206.000 l
210.000 203.000 l
h
f
.752941 .752941 .752941 RG
newpath
210.000 203.000 m
216.000 203.000 l
216.000 206.000 l
210.000 206.000 l
210.000 203.000 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
152.000 35.0000 m
152.000 59.0000 l
152.000 60.6569 153.343 62.0000 155.000 62.0000  c
243.000 62.0000 l
244.657 62.0000 246.000 60.6569 246.000 59.0000  c
246.000 35.0000 l
246.000 33.3431 244.657 32.0000 243.000 32.0000  c
155.000 32.0000 l
153.343 32.0000 152.000 33.3431 152.000 35.0000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
152.000 35.0000 m
152.000 59.0000 l
152.000 60.6569 153.343 62.0000 155.000 62.0000  c
243.000 62.0000 l
244.657 62.0000 246.000 60.6569 246.000 59.0000  c
246.000 35.0000 l
246.000 33.3431 244.657 32.0000 243.000 32.0000  c
155.000 32.0000 l
153.343 32.0000 152.000 33.3431 152.000 35.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [152.0 32.0 152.0 62.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
154.500 37.5000 m
154.500 58.5000 l
154.500 60.1569 155.843 61.5000 157.500 61.5000  c
242.500 61.5000 l
244.157 61.5000 245.500 60.1569 245.500 58.5000  c
245.500 37.5000 l
245.500 35.8431 244.157 34.5000 242.500 34.5000  c
157.500 34.5000 l
155.843 34.5000 154.500 35.8431 154.500 37.5000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 164.000 36.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.884766 .632812 m
2.55469 .632812 l
5.02734 7.91016 l
7.48242 .632812 l
9.13477 .632812 l
9.13477 9.24023 l
8.02734 9.24023 l
8.02734 4.16016 l
8.02734 3.98438 8.03125 3.69336 8.03906 3.28711  c
8.04688 2.88086 8.05078 2.44531 8.05078 1.98047  c
5.59570 9.24023 l
4.44141 9.24023 l
1.96875 1.98047 l
1.96875 2.24414 l
1.96875 2.45508 1.97363 2.77637 1.98340 3.20801  c
1.99316 3.63965 1.99805 3.95703 1.99805 4.16016  c
1.99805 9.24023 l
.884766 9.24023 l
h
12.1758 .632812 m
12.1758 5.95312 l
12.1758 6.57812 12.2930 7.09766 12.5273 7.51172  c
12.8750 8.13672 13.4609 8.44922 14.2852 8.44922  c
15.2734 8.44922 15.9453 8.11133 16.3008 7.43555  c
16.4922 7.06836 16.5879 6.57422 16.5879 5.95312  c
16.5879 .632812 l
17.7715 .632812 l
17.7715 5.46680 l
17.7715 6.52539 17.6289 7.33984 17.3438 7.91016  c
16.8203 8.94922 15.8320 9.46875 14.3789 9.46875  c
12.9258 9.46875 11.9395 8.94922 11.4199 7.91016  c
11.1348 7.33984 10.9922 6.52539 10.9922 5.46680  c
10.9922 .632812 l
h
19.5762 .632812 m
20.7422 .632812 l
20.7422 8.21484 l
25.1016 8.21484 l
25.1016 9.24023 l
19.5762 9.24023 l
h
32.5137 .632812 m
32.5137 1.65820 l
29.6133 1.65820 l
29.6133 9.24023 l
28.4297 9.24023 l
28.4297 1.65820 l
25.5293 1.65820 l
25.5293 .632812 l
h
33.8438 .632812 m
35.0215 .632812 l
35.0215 9.24023 l
33.8438 9.24023 l
h
37.6758 6.46289 m
37.7031 6.95117 37.8184 7.34766 38.0215 7.65234  c
38.4082 8.22266 39.0898 8.50781 40.0664 8.50781  c
40.5039 8.50781 40.9023 8.44531 41.2617 8.32031  c
41.9570 8.07812 42.3047 7.64453 42.3047 7.01953  c
42.3047 6.55078 42.1582 6.21680 41.8652 6.01758  c
41.5684 5.82227 41.1035 5.65234 40.4707 5.50781  c
39.3047 5.24414 l
38.5430 5.07227 38.0039 4.88281 37.6875 4.67578  c
37.1406 4.31641 36.8672 3.77930 36.8672 3.06445  c
36.8672 2.29102 37.1348 1.65625 37.6699 1.16016  c
38.2051 .664062 38.9629 .416016 39.9434 .416016  c
40.8457 .416016 41.6123 .633789 42.2432 1.06934  c
42.8740 1.50488 43.1895 2.20117 43.1895 3.15820  c
42.0938 3.15820 l
42.0352 2.69727 41.9102 2.34375 41.7188 2.09766  c
41.3633 1.64844 40.7598 1.42383 39.9082 1.42383  c
39.2207 1.42383 38.7266 1.56836 38.4258 1.85742  c
38.1250 2.14648 37.9746 2.48242 37.9746 2.86523  c
37.9746 3.28711 38.1504 3.59570 38.5020 3.79102  c
38.7324 3.91602 39.2539 4.07227 40.0664 4.25977  c
41.2734 4.53516 l
41.8555 4.66797 42.3047 4.84961 42.6211 5.08008  c
43.1680 5.48242 43.4414 6.06641 43.4414 6.83203  c
43.4414 7.78516 43.0947 8.46680 42.4014 8.87695  c
41.7080 9.28711 40.9023 9.49219 39.9844 9.49219  c
38.9141 9.49219 38.0762 9.21875 37.4707 8.67188  c
36.8652 8.12891 36.5684 7.39258 36.5801 6.46289  c
h
44.9180 .632812 m
46.0840 .632812 l
46.0840 8.21484 l
50.4434 8.21484 l
50.4434 9.24023 l
44.9180 9.24023 l
h
54.8262 4.27148 m
55.3184 4.27148 55.7012 4.20312 55.9746 4.06641  c
56.4043 3.85156 56.6191 3.46484 56.6191 2.90625  c
56.6191 2.34375 56.3906 1.96484 55.9336 1.76953  c
55.6758 1.66016 55.2930 1.60547 54.7852 1.60547  c
52.7051 1.60547 l
52.7051 4.27148 l
h
55.2188 8.24414 m
55.9336 8.24414 56.4434 8.03711 56.7480 7.62305  c
56.9395 7.36133 57.0352 7.04492 57.0352 6.67383  c
57.0352 6.04883 56.7559 5.62305 56.1973 5.39648  c
55.9004 5.27539 55.5078 5.21484 55.0195 5.21484  c
52.7051 5.21484 l
52.7051 8.24414 l
h
51.5625 .632812 m
55.2598 .632812 l
56.2676 .632812 56.9844 .933594 57.4102 1.53516  c
57.6602 1.89062 57.7852 2.30078 57.7852 2.76562  c
57.7852 3.30859 57.6309 3.75391 57.3223 4.10156  c
57.1621 4.28516 56.9316 4.45312 56.6309 4.60547  c
57.0723 4.77344 57.4023 4.96289 57.6211 5.17383  c
58.0078 5.54883 58.2012 6.06641 58.2012 6.72656  c
58.2012 7.28125 58.0273 7.78320 57.6797 8.23242  c
57.1602 8.90430 56.3340 9.24023 55.2012 9.24023  c
51.5625 9.24023 l
h
60.6621 .632812 m
60.4688 4.07812 l
59.7891 4.07812 l
59.5957 .632812 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
233.000 36.0000 m
242.000 36.0000 l
242.000 48.0000 l
233.000 48.0000 l
233.000 36.0000 l
h
f
1.00000 w
0 j
newpath
233.000 36.0000 m
242.000 36.0000 l
242.000 48.0000 l
233.000 48.0000 l
233.000 36.0000 l
h
S
newpath
230.000 38.0000 m
236.000 38.0000 l
236.000 41.0000 l
230.000 41.0000 l
230.000 38.0000 l
h
f
.752941 .752941 .752941 RG
newpath
230.000 38.0000 m
236.000 38.0000 l
236.000 41.0000 l
230.000 41.0000 l
230.000 38.0000 l
h
S
0.00000 0.00000 0.00000 RG
newpath
230.000 43.0000 m
236.000 43.0000 l
236.000 46.0000 l
230.000 46.0000 l
230.000 43.0000 l
h
f
.752941 .752941 .752941 RG
newpath
230.000 43.0000 m
236.000 43.0000 l
236.000 46.0000 l
230.000 46.0000 l
230.000 43.0000 l
h
S
0.00000 0.00000 0.00000 RG
2 j
0.00000 0.00000 0.00000 RG
newpath
167.878 222.059 m
94.4595 260.025 l
S
[ .459331 .888265 -.888265 .459331 282.042 56.6823 ] concat
newpath
94.4595 260.025 m
86.4595 240.025 l
102.459 240.025 l
94.4595 260.025 l
94.4595 260.025 l
h
f*
newpath
94.4595 260.025 m
86.4595 240.025 l
102.459 240.025 l
94.4595 260.025 l
94.4595 260.025 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
227.036 222.895 m
297.269 260.061 l
S
[ .467730 -.883872 .883872 .467730 -71.6327 401.170 ] concat
newpath
297.269 260.061 m
289.269 240.061 l
305.269 240.061 l
297.269 260.061 l
297.269 260.061 l
h
f*
newpath
297.269 260.061 m
289.269 240.061 l
305.269 240.061 l
297.269 260.061 l
297.269 260.061 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
196.000 142.000 m
196.000 192.000 l
S
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
newpath
196.000 192.000 m
188.000 172.000 l
204.000 172.000 l
196.000 192.000 l
196.000 192.000 l
h
f*
newpath
196.000 192.000 m
188.000 172.000 l
204.000 172.000 l
196.000 192.000 l
196.000 192.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
196.000 62.0000 m
196.000 112.000 l
S
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
newpath
196.000 112.000 m
188.000 92.0000 l
204.000 92.0000 l
196.000 112.000 l
196.000 112.000 l
h
f*
newpath
196.000 112.000 m
188.000 92.0000 l
204.000 92.0000 l
196.000 112.000 l
196.000 112.000 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
299.735 290.917 m
220.264 340.011 l
S
[ .525563 .850755 -.850755 .525563 393.767 -26.0769 ] concat
newpath
220.264 340.011 m
212.264 320.011 l
228.264 320.011 l
220.264 340.011 l
220.264 340.011 l
h
f*
newpath
220.264 340.011 m
212.264 320.011 l
228.264 320.011 l
220.264 340.011 l
220.264 340.011 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
91.6021 291.001 m
171.435 339.941 l
S
[ .522639 -.852554 .852554 .522639 -207.982 308.433 ] concat
newpath
171.435 339.941 m
163.435 319.941 l
179.435 319.941 l
171.435 339.941 l
171.435 339.941 l
h
f*
newpath
171.435 339.941 m
163.435 319.941 l
179.435 319.941 l
171.435 339.941 l
171.435 339.941 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 376.000 l
360.000 376.000 l
360.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 376.000 l
360.000 376.000 l
360.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
