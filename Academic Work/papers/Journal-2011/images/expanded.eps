%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 159 267 436 524
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, 2 April 2012 22:51:53 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
277 257 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
277.000 0.00000 l
277.000 257.000 l
0.00000 257.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 301 281 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 303.000 283.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 305.000 285.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
228.000 131.000 m
228.000 185.000 l
228.000 186.657 229.343 188.000 231.000 188.000  c
297.000 188.000 l
298.657 188.000 300.000 186.657 300.000 185.000  c
300.000 131.000 l
300.000 129.343 298.657 128.000 297.000 128.000  c
231.000 128.000 l
229.343 128.000 228.000 129.343 228.000 131.000  c
h
f
1.50000 w
0 J
2 j
.576471 .576471 .643137 RG
newpath
228.000 131.000 m
228.000 185.000 l
228.000 186.657 229.343 188.000 231.000 188.000  c
297.000 188.000 l
298.657 188.000 300.000 186.657 300.000 185.000  c
300.000 131.000 l
300.000 129.343 298.657 128.000 297.000 128.000  c
231.000 128.000 l
229.343 128.000 228.000 129.343 228.000 131.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [228.0 128.0 228.0 188.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
230.500 133.500 m
230.500 184.500 l
230.500 186.157 231.843 187.500 233.500 187.500  c
296.500 187.500 l
298.157 187.500 299.500 186.157 299.500 184.500  c
299.500 133.500 l
299.500 131.843 298.157 130.500 296.500 130.500  c
233.500 130.500 l
231.843 130.500 230.500 131.843 230.500 133.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 241.998 132.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.875000 12.0645 m
.875000 3.47070 l
2.01562 3.47070 l
2.01562 11.0488 l
6.25000 11.0488 l
6.25000 12.0645 l
.875000 12.0645 l
h
9.78320 12.0645 m
9.78320 4.48633 l
6.95508 4.48633 l
6.95508 3.47070 l
13.7676 3.47070 l
13.7676 4.48633 l
10.9238 4.48633 l
10.9238 12.0645 l
9.78320 12.0645 l
h
14.5508 9.29883 m
15.6133 9.20508 l
15.6654 9.64258 15.7852 9.99674 15.9727 10.2676  c
16.1602 10.5384 16.4492 10.7598 16.8398 10.9316  c
17.2305 11.1035 17.6706 11.1895 18.1602 11.1895  c
18.5872 11.1895 18.9674 11.1243 19.3008 10.9941  c
19.6341 10.8639 19.8815 10.6868 20.0430 10.4629  c
20.2044 10.2389 20.2852 9.99674 20.2852 9.73633  c
20.2852 9.46549 20.2070 9.22852 20.0508 9.02539  c
19.8945 8.82227 19.6393 8.65299 19.2852 8.51758  c
19.0456 8.42383 18.5326 8.28320 17.7461 8.09570  c
16.9596 7.90820 16.4102 7.73112 16.0977 7.56445  c
15.6810 7.34570 15.3737 7.07747 15.1758 6.75977  c
14.9779 6.44206 14.8789 6.08529 14.8789 5.68945  c
14.8789 5.26237 15.0013 4.85872 15.2461 4.47852  c
15.4909 4.09831 15.8503 3.81185 16.3242 3.61914  c
16.7982 3.42643 17.3216 3.33008 17.8945 3.33008  c
18.5299 3.33008 19.0924 3.43164 19.5820 3.63477  c
20.0716 3.83789 20.4466 4.13997 20.7070 4.54102  c
20.9674 4.94206 21.1081 5.39258 21.1289 5.89258  c
20.0352 5.97070 l
19.9727 5.42904 19.7721 5.02018 19.4336 4.74414  c
19.0951 4.46810 18.5977 4.33008 17.9414 4.33008  c
17.2539 4.33008 16.7539 4.45508 16.4414 4.70508  c
16.1289 4.95508 15.9727 5.25716 15.9727 5.61133  c
15.9727 5.92383 16.0820 6.17904 16.3008 6.37695  c
16.5195 6.57487 17.0898 6.77799 18.0117 6.98633  c
18.9336 7.19466 19.5664 7.37695 19.9102 7.53320  c
20.4102 7.77279 20.7799 8.06706 21.0195 8.41602  c
21.2591 8.76497 21.3789 9.17383 21.3789 9.64258  c
21.3789 10.1009 21.2487 10.5306 20.9883 10.9316  c
20.7279 11.3327 20.3529 11.6452 19.8633 11.8691  c
19.3737 12.0931 18.8216 12.2051 18.2070 12.2051  c
17.4258 12.2051 16.7721 12.0931 16.2461 11.8691  c
15.7201 11.6452 15.3086 11.3040 15.0117 10.8457  c
14.7148 10.3874 14.5612 9.87174 14.5508 9.29883  c
h
21.9922 12.0645 m
25.2891 3.47070 l
26.5078 3.47070 l
30.0234 12.0645 l
28.7422 12.0645 l
27.7266 9.45508 l
24.1484 9.45508 l
23.1953 12.0645 l
21.9922 12.0645 l
h
24.4766 8.53320 m
27.3828 8.53320 l
26.4922 6.15820 l
26.2109 5.43945 26.0078 4.84570 25.8828 4.37695  c
25.7682 4.92904 25.6120 5.47591 25.4141 6.01758  c
24.4766 8.53320 l
h
30.8086 6.51758 m
30.5430 4.90820 l
30.5430 3.47070 l
31.7461 3.47070 l
31.7461 4.90820 l
31.4648 6.51758 l
30.8086 6.51758 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 240.000 148.701 ] concat
.250980 .250980 .250980 RG
newpath
2.34375 12.1631 m
1.85417 11.5485 1.44271 10.8298 1.10938 10.0068  c
.776042 9.18392 .609375 8.33496 .609375 7.45996  c
.609375 6.68913 .734375 5.94954 .984375 5.24121  c
1.27604 4.40788 1.72917 3.58496 2.34375 2.77246  c
2.96875 2.77246 l
2.57292 3.44954 2.31250 3.93392 2.18750 4.22559  c
1.98958 4.67350 1.83333 5.14225 1.71875 5.63184  c
1.58333 6.23600 1.51562 6.84538 1.51562 7.45996  c
1.51562 9.03288 2.00000 10.6006 2.96875 12.1631  c
2.34375 12.1631 l
h
4.20508 10.0537 m
4.20508 5.55371 l
3.42383 5.55371 l
3.42383 4.86621 l
4.20508 4.86621 l
4.20508 4.31934 l
4.20508 3.96517 4.23633 3.70475 4.29883 3.53809  c
4.38216 3.30892 4.53060 3.12402 4.74414 2.98340  c
4.95768 2.84277 5.25716 2.77246 5.64258 2.77246  c
5.88216 2.77246 6.15299 2.80371 6.45508 2.86621  c
6.33008 3.63184 l
6.14258 3.60059 5.96549 3.58496 5.79883 3.58496  c
5.53841 3.58496 5.35352 3.63965 5.24414 3.74902  c
5.13477 3.85840 5.08008 4.06934 5.08008 4.38184  c
5.08008 4.86621 l
6.08008 4.86621 l
6.08008 5.55371 l
5.08008 5.55371 l
5.08008 10.0537 l
4.20508 10.0537 l
h
6.76465 10.0537 m
6.76465 4.86621 l
7.54590 4.86621 l
7.54590 5.64746 l
7.75423 5.28288 7.94173 5.04329 8.10840 4.92871  c
8.27507 4.81413 8.46257 4.75684 8.67090 4.75684  c
8.97298 4.75684 9.27507 4.85059 9.57715 5.03809  c
9.28027 5.85059 l
9.06152 5.72559 8.84277 5.66309 8.62402 5.66309  c
8.43652 5.66309 8.26465 5.72038 8.10840 5.83496  c
7.95215 5.94954 7.84277 6.11100 7.78027 6.31934  c
7.68652 6.63184 7.63965 6.97038 7.63965 7.33496  c
7.63965 10.0537 l
6.76465 10.0537 l
h
9.76660 7.45996 m
9.76660 6.50163 10.0374 5.78809 10.5791 5.31934  c
11.0166 4.94434 11.5583 4.75684 12.2041 4.75684  c
12.9124 4.75684 13.4932 4.98861 13.9463 5.45215  c
14.3994 5.91569 14.6260 6.55892 14.6260 7.38184  c
14.6260 8.04850 14.5270 8.57454 14.3291 8.95996  c
14.1312 9.34538 13.8395 9.64486 13.4541 9.85840  c
13.0687 10.0719 12.6520 10.1787 12.2041 10.1787  c
11.4749 10.1787 10.8864 9.94434 10.4385 9.47559  c
9.99056 9.00684 9.76660 8.33496 9.76660 7.45996  c
h
10.6729 7.45996 m
10.6729 8.12663 10.8187 8.62402 11.1104 8.95215  c
11.4020 9.28027 11.7666 9.44434 12.2041 9.44434  c
12.6416 9.44434 13.0036 9.27767 13.2900 8.94434  c
13.5765 8.61100 13.7197 8.10579 13.7197 7.42871  c
13.7197 6.79329 13.5739 6.30892 13.2822 5.97559  c
12.9906 5.64225 12.6312 5.47559 12.2041 5.47559  c
11.7666 5.47559 11.4020 5.63965 11.1104 5.96777  c
10.8187 6.29590 10.6729 6.79329 10.6729 7.45996  c
h
15.6562 10.0537 m
15.6562 4.86621 l
16.4531 4.86621 l
16.4531 5.60059 l
16.6094 5.34017 16.8229 5.13444 17.0938 4.98340  c
17.3646 4.83236 17.6719 4.75684 18.0156 4.75684  c
18.4010 4.75684 18.7161 4.83496 18.9609 4.99121  c
19.2057 5.14746 19.3802 5.37142 19.4844 5.66309  c
19.8906 5.05892 20.4219 4.75684 21.0781 4.75684  c
21.5990 4.75684 21.9974 4.89746 22.2734 5.17871  c
22.5495 5.45996 22.6875 5.89746 22.6875 6.49121  c
22.6875 10.0537 l
21.8125 10.0537 l
21.8125 6.78809 l
21.8125 6.43392 21.7839 6.17871 21.7266 6.02246  c
21.6693 5.86621 21.5651 5.74121 21.4141 5.64746  c
21.2630 5.55371 21.0885 5.50684 20.8906 5.50684  c
20.5260 5.50684 20.2240 5.62923 19.9844 5.87402  c
19.7448 6.11882 19.6250 6.50684 19.6250 7.03809  c
19.6250 10.0537 l
18.7344 10.0537 l
18.7344 6.67871 l
18.7344 6.29329 18.6641 6.00163 18.5234 5.80371  c
18.3828 5.60579 18.1510 5.50684 17.8281 5.50684  c
17.5781 5.50684 17.3490 5.57194 17.1406 5.70215  c
16.9323 5.83236 16.7786 6.02246 16.6797 6.27246  c
16.5807 6.52246 16.5312 6.88704 16.5312 7.36621  c
16.5312 10.0537 l
15.6562 10.0537 l
h
26.0928 10.0537 m
28.8428 2.89746 l
29.8584 2.89746 l
32.7959 10.0537 l
31.7178 10.0537 l
30.8740 7.88184 l
27.8896 7.88184 l
27.0928 10.0537 l
26.0928 10.0537 l
h
28.1553 7.11621 m
30.5928 7.11621 l
29.8428 5.13184 l
29.6136 4.52767 29.4417 4.03288 29.3271 3.64746  c
29.2438 4.10579 29.1188 4.55892 28.9521 5.00684  c
28.1553 7.11621 l
h
33.4346 10.0537 m
33.4346 4.86621 l
34.2314 4.86621 l
34.2314 5.60059 l
34.3877 5.34017 34.6012 5.13444 34.8721 4.98340  c
35.1429 4.83236 35.4502 4.75684 35.7939 4.75684  c
36.1794 4.75684 36.4945 4.83496 36.7393 4.99121  c
36.9840 5.14746 37.1585 5.37142 37.2627 5.66309  c
37.6689 5.05892 38.2002 4.75684 38.8564 4.75684  c
39.3773 4.75684 39.7757 4.89746 40.0518 5.17871  c
40.3278 5.45996 40.4658 5.89746 40.4658 6.49121  c
40.4658 10.0537 l
39.5908 10.0537 l
39.5908 6.78809 l
39.5908 6.43392 39.5622 6.17871 39.5049 6.02246  c
39.4476 5.86621 39.3434 5.74121 39.1924 5.64746  c
39.0413 5.55371 38.8669 5.50684 38.6689 5.50684  c
38.3044 5.50684 38.0023 5.62923 37.7627 5.87402  c
37.5231 6.11882 37.4033 6.50684 37.4033 7.03809  c
37.4033 10.0537 l
36.5127 10.0537 l
36.5127 6.67871 l
36.5127 6.29329 36.4424 6.00163 36.3018 5.80371  c
36.1611 5.60579 35.9294 5.50684 35.6064 5.50684  c
35.3564 5.50684 35.1273 5.57194 34.9189 5.70215  c
34.7106 5.83236 34.5570 6.02246 34.4580 6.27246  c
34.3590 6.52246 34.3096 6.88704 34.3096 7.36621  c
34.3096 10.0537 l
33.4346 10.0537 l
h
45.3115 8.38184 m
46.2334 8.49121 l
46.0876 9.02246 45.8193 9.43652 45.4287 9.73340  c
45.0381 10.0303 44.5459 10.1787 43.9521 10.1787  c
43.1917 10.1787 42.5876 9.94434 42.1396 9.47559  c
41.6917 9.00684 41.4678 8.35059 41.4678 7.50684  c
41.4678 6.63184 41.6943 5.95475 42.1475 5.47559  c
42.6006 4.99642 43.1813 4.75684 43.8896 4.75684  c
44.5876 4.75684 45.1553 4.99121 45.5928 5.45996  c
46.0303 5.92871 46.2490 6.59017 46.2490 7.44434  c
46.2490 7.49642 46.2490 7.57454 46.2490 7.67871  c
42.3896 7.67871 l
42.4209 8.25163 42.5798 8.68913 42.8662 8.99121  c
43.1527 9.29329 43.5146 9.44434 43.9521 9.44434  c
44.2751 9.44434 44.5511 9.36100 44.7803 9.19434  c
45.0094 9.02767 45.1865 8.75684 45.3115 8.38184  c
h
42.4365 6.95996 m
45.3271 6.95996 l
45.2855 6.52246 45.1761 6.19434 44.9990 5.97559  c
44.7178 5.64225 44.3532 5.47559 43.9053 5.47559  c
43.4990 5.47559 43.1605 5.61100 42.8896 5.88184  c
42.6188 6.15267 42.4678 6.51204 42.4365 6.95996  c
h
46.9824 8.50684 m
47.8418 8.36621 l
47.8939 8.72038 48.0319 8.98861 48.2559 9.17090  c
48.4798 9.35319 48.7897 9.44434 49.1855 9.44434  c
49.5918 9.44434 49.8939 9.36361 50.0918 9.20215  c
50.2897 9.04069 50.3887 8.84538 50.3887 8.61621  c
50.3887 8.41829 50.3001 8.26204 50.1230 8.14746  c
49.9980 8.07454 49.6960 7.97559 49.2168 7.85059  c
48.5814 7.69434 48.1387 7.55632 47.8887 7.43652  c
47.6387 7.31673 47.4486 7.15267 47.3184 6.94434  c
47.1882 6.73600 47.1230 6.50163 47.1230 6.24121  c
47.1230 6.01204 47.1751 5.79850 47.2793 5.60059  c
47.3835 5.40267 47.5293 5.24121 47.7168 5.11621  c
47.8522 5.01204 48.0371 4.92611 48.2715 4.85840  c
48.5059 4.79069 48.7585 4.75684 49.0293 4.75684  c
49.4355 4.75684 49.7923 4.81413 50.0996 4.92871  c
50.4069 5.04329 50.6361 5.20215 50.7871 5.40527  c
50.9382 5.60840 51.0397 5.87663 51.0918 6.20996  c
50.2324 6.31934 l
50.1908 6.05892 50.0762 5.85319 49.8887 5.70215  c
49.7012 5.55111 49.4355 5.47559 49.0918 5.47559  c
48.6960 5.47559 48.4095 5.54069 48.2324 5.67090  c
48.0553 5.80111 47.9668 5.95996 47.9668 6.14746  c
47.9668 6.26204 48.0033 6.36100 48.0762 6.44434  c
48.1491 6.53809 48.2637 6.61621 48.4199 6.67871  c
48.5033 6.70996 48.7637 6.78809 49.2012 6.91309  c
49.8158 7.07975 50.2454 7.21517 50.4902 7.31934  c
50.7350 7.42350 50.9277 7.57715 51.0684 7.78027  c
51.2090 7.98340 51.2793 8.23079 51.2793 8.52246  c
51.2793 8.82454 51.1960 9.10319 51.0293 9.35840  c
50.8626 9.61361 50.6178 9.81413 50.2949 9.95996  c
49.9720 10.1058 49.6074 10.1787 49.2012 10.1787  c
48.5241 10.1787 48.0085 10.0381 47.6543 9.75684  c
47.3001 9.47559 47.0762 9.05892 46.9824 8.50684  c
h
52.9043 12.1631 m
52.2793 12.1631 l
53.2480 10.6006 53.7324 9.03288 53.7324 7.45996  c
53.7324 6.85579 53.6647 6.25163 53.5293 5.64746  c
53.4147 5.15788 53.2585 4.68913 53.0605 4.24121  c
52.9355 3.94954 52.6751 3.45996 52.2793 2.77246  c
52.9043 2.77246 l
53.5189 3.58496 53.9720 4.40788 54.2637 5.24121  c
54.5137 5.94954 54.6387 6.68913 54.6387 7.45996  c
54.6387 8.33496 54.4694 9.18392 54.1309 10.0068  c
53.7923 10.8298 53.3835 11.5485 52.9043 12.1631  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
newpath
284.799 132.000 m
296.000 132.000 l
296.000 146.701 l
284.799 146.701 l
284.799 132.000 l
h
f
1.00000 w
0 j
newpath
284.799 132.000 m
296.000 132.000 l
296.000 146.701 l
284.799 146.701 l
284.799 132.000 l
h
S
newpath
281.299 135.351 m
288.299 135.351 l
288.299 138.351 l
281.299 138.351 l
281.299 135.351 l
h
f
.752941 .752941 .752941 RG
newpath
281.299 135.351 m
288.299 135.351 l
288.299 138.351 l
281.299 138.351 l
281.299 135.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
281.299 140.351 m
288.299 140.351 l
288.299 143.351 l
281.299 143.351 l
281.299 140.351 l
h
f
.752941 .752941 .752941 RG
newpath
281.299 140.351 m
288.299 140.351 l
288.299 143.351 l
281.299 143.351 l
281.299 140.351 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
128.000 231.000 m
128.000 270.000 l
128.000 271.657 129.343 273.000 131.000 273.000  c
198.000 273.000 l
199.657 273.000 201.000 271.657 201.000 270.000  c
201.000 231.000 l
201.000 229.343 199.657 228.000 198.000 228.000  c
131.000 228.000 l
129.343 228.000 128.000 229.343 128.000 231.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
128.000 231.000 m
128.000 270.000 l
128.000 271.657 129.343 273.000 131.000 273.000  c
198.000 273.000 l
199.657 273.000 201.000 271.657 201.000 270.000  c
201.000 231.000 l
201.000 229.343 199.657 228.000 198.000 228.000  c
131.000 228.000 l
129.343 228.000 128.000 229.343 128.000 231.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [128.0 228.0 128.0 273.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
130.500 233.500 m
130.500 269.500 l
130.500 271.157 131.843 272.500 133.500 272.500  c
197.500 272.500 l
199.157 272.500 200.500 271.157 200.500 269.500  c
200.500 233.500 l
200.500 231.843 199.157 230.500 197.500 230.500  c
133.500 230.500 l
131.843 230.500 130.500 231.843 130.500 233.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 143.644 232.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.875000 12.0645 m
.875000 3.47070 l
2.01562 3.47070 l
2.01562 11.0488 l
6.25000 11.0488 l
6.25000 12.0645 l
.875000 12.0645 l
h
9.78320 12.0645 m
9.78320 4.48633 l
6.95508 4.48633 l
6.95508 3.47070 l
13.7676 3.47070 l
13.7676 4.48633 l
10.9238 4.48633 l
10.9238 12.0645 l
9.78320 12.0645 l
h
14.5508 9.29883 m
15.6133 9.20508 l
15.6654 9.64258 15.7852 9.99674 15.9727 10.2676  c
16.1602 10.5384 16.4492 10.7598 16.8398 10.9316  c
17.2305 11.1035 17.6706 11.1895 18.1602 11.1895  c
18.5872 11.1895 18.9674 11.1243 19.3008 10.9941  c
19.6341 10.8639 19.8815 10.6868 20.0430 10.4629  c
20.2044 10.2389 20.2852 9.99674 20.2852 9.73633  c
20.2852 9.46549 20.2070 9.22852 20.0508 9.02539  c
19.8945 8.82227 19.6393 8.65299 19.2852 8.51758  c
19.0456 8.42383 18.5326 8.28320 17.7461 8.09570  c
16.9596 7.90820 16.4102 7.73112 16.0977 7.56445  c
15.6810 7.34570 15.3737 7.07747 15.1758 6.75977  c
14.9779 6.44206 14.8789 6.08529 14.8789 5.68945  c
14.8789 5.26237 15.0013 4.85872 15.2461 4.47852  c
15.4909 4.09831 15.8503 3.81185 16.3242 3.61914  c
16.7982 3.42643 17.3216 3.33008 17.8945 3.33008  c
18.5299 3.33008 19.0924 3.43164 19.5820 3.63477  c
20.0716 3.83789 20.4466 4.13997 20.7070 4.54102  c
20.9674 4.94206 21.1081 5.39258 21.1289 5.89258  c
20.0352 5.97070 l
19.9727 5.42904 19.7721 5.02018 19.4336 4.74414  c
19.0951 4.46810 18.5977 4.33008 17.9414 4.33008  c
17.2539 4.33008 16.7539 4.45508 16.4414 4.70508  c
16.1289 4.95508 15.9727 5.25716 15.9727 5.61133  c
15.9727 5.92383 16.0820 6.17904 16.3008 6.37695  c
16.5195 6.57487 17.0898 6.77799 18.0117 6.98633  c
18.9336 7.19466 19.5664 7.37695 19.9102 7.53320  c
20.4102 7.77279 20.7799 8.06706 21.0195 8.41602  c
21.2591 8.76497 21.3789 9.17383 21.3789 9.64258  c
21.3789 10.1009 21.2487 10.5306 20.9883 10.9316  c
20.7279 11.3327 20.3529 11.6452 19.8633 11.8691  c
19.3737 12.0931 18.8216 12.2051 18.2070 12.2051  c
17.4258 12.2051 16.7721 12.0931 16.2461 11.8691  c
15.7201 11.6452 15.3086 11.3040 15.0117 10.8457  c
14.7148 10.3874 14.5612 9.87174 14.5508 9.29883  c
h
21.9922 12.0645 m
25.2891 3.47070 l
26.5078 3.47070 l
30.0234 12.0645 l
28.7422 12.0645 l
27.7266 9.45508 l
24.1484 9.45508 l
23.1953 12.0645 l
21.9922 12.0645 l
h
24.4766 8.53320 m
27.3828 8.53320 l
26.4922 6.15820 l
26.2109 5.43945 26.0078 4.84570 25.8828 4.37695  c
25.7682 4.92904 25.6120 5.47591 25.4141 6.01758  c
24.4766 8.53320 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 140.000 248.701 ] concat
.250980 .250980 .250980 RG
newpath
2.34375 12.1631 m
1.85417 11.5485 1.44271 10.8298 1.10938 10.0068  c
.776042 9.18392 .609375 8.33496 .609375 7.45996  c
.609375 6.68913 .734375 5.94954 .984375 5.24121  c
1.27604 4.40788 1.72917 3.58496 2.34375 2.77246  c
2.96875 2.77246 l
2.57292 3.44954 2.31250 3.93392 2.18750 4.22559  c
1.98958 4.67350 1.83333 5.14225 1.71875 5.63184  c
1.58333 6.23600 1.51562 6.84538 1.51562 7.45996  c
1.51562 9.03288 2.00000 10.6006 2.96875 12.1631  c
2.34375 12.1631 l
h
4.20508 10.0537 m
4.20508 5.55371 l
3.42383 5.55371 l
3.42383 4.86621 l
4.20508 4.86621 l
4.20508 4.31934 l
4.20508 3.96517 4.23633 3.70475 4.29883 3.53809  c
4.38216 3.30892 4.53060 3.12402 4.74414 2.98340  c
4.95768 2.84277 5.25716 2.77246 5.64258 2.77246  c
5.88216 2.77246 6.15299 2.80371 6.45508 2.86621  c
6.33008 3.63184 l
6.14258 3.60059 5.96549 3.58496 5.79883 3.58496  c
5.53841 3.58496 5.35352 3.63965 5.24414 3.74902  c
5.13477 3.85840 5.08008 4.06934 5.08008 4.38184  c
5.08008 4.86621 l
6.08008 4.86621 l
6.08008 5.55371 l
5.08008 5.55371 l
5.08008 10.0537 l
4.20508 10.0537 l
h
6.76465 10.0537 m
6.76465 4.86621 l
7.54590 4.86621 l
7.54590 5.64746 l
7.75423 5.28288 7.94173 5.04329 8.10840 4.92871  c
8.27507 4.81413 8.46257 4.75684 8.67090 4.75684  c
8.97298 4.75684 9.27507 4.85059 9.57715 5.03809  c
9.28027 5.85059 l
9.06152 5.72559 8.84277 5.66309 8.62402 5.66309  c
8.43652 5.66309 8.26465 5.72038 8.10840 5.83496  c
7.95215 5.94954 7.84277 6.11100 7.78027 6.31934  c
7.68652 6.63184 7.63965 6.97038 7.63965 7.33496  c
7.63965 10.0537 l
6.76465 10.0537 l
h
9.76660 7.45996 m
9.76660 6.50163 10.0374 5.78809 10.5791 5.31934  c
11.0166 4.94434 11.5583 4.75684 12.2041 4.75684  c
12.9124 4.75684 13.4932 4.98861 13.9463 5.45215  c
14.3994 5.91569 14.6260 6.55892 14.6260 7.38184  c
14.6260 8.04850 14.5270 8.57454 14.3291 8.95996  c
14.1312 9.34538 13.8395 9.64486 13.4541 9.85840  c
13.0687 10.0719 12.6520 10.1787 12.2041 10.1787  c
11.4749 10.1787 10.8864 9.94434 10.4385 9.47559  c
9.99056 9.00684 9.76660 8.33496 9.76660 7.45996  c
h
10.6729 7.45996 m
10.6729 8.12663 10.8187 8.62402 11.1104 8.95215  c
11.4020 9.28027 11.7666 9.44434 12.2041 9.44434  c
12.6416 9.44434 13.0036 9.27767 13.2900 8.94434  c
13.5765 8.61100 13.7197 8.10579 13.7197 7.42871  c
13.7197 6.79329 13.5739 6.30892 13.2822 5.97559  c
12.9906 5.64225 12.6312 5.47559 12.2041 5.47559  c
11.7666 5.47559 11.4020 5.63965 11.1104 5.96777  c
10.8187 6.29590 10.6729 6.79329 10.6729 7.45996  c
h
15.6562 10.0537 m
15.6562 4.86621 l
16.4531 4.86621 l
16.4531 5.60059 l
16.6094 5.34017 16.8229 5.13444 17.0938 4.98340  c
17.3646 4.83236 17.6719 4.75684 18.0156 4.75684  c
18.4010 4.75684 18.7161 4.83496 18.9609 4.99121  c
19.2057 5.14746 19.3802 5.37142 19.4844 5.66309  c
19.8906 5.05892 20.4219 4.75684 21.0781 4.75684  c
21.5990 4.75684 21.9974 4.89746 22.2734 5.17871  c
22.5495 5.45996 22.6875 5.89746 22.6875 6.49121  c
22.6875 10.0537 l
21.8125 10.0537 l
21.8125 6.78809 l
21.8125 6.43392 21.7839 6.17871 21.7266 6.02246  c
21.6693 5.86621 21.5651 5.74121 21.4141 5.64746  c
21.2630 5.55371 21.0885 5.50684 20.8906 5.50684  c
20.5260 5.50684 20.2240 5.62923 19.9844 5.87402  c
19.7448 6.11882 19.6250 6.50684 19.6250 7.03809  c
19.6250 10.0537 l
18.7344 10.0537 l
18.7344 6.67871 l
18.7344 6.29329 18.6641 6.00163 18.5234 5.80371  c
18.3828 5.60579 18.1510 5.50684 17.8281 5.50684  c
17.5781 5.50684 17.3490 5.57194 17.1406 5.70215  c
16.9323 5.83236 16.7786 6.02246 16.6797 6.27246  c
16.5807 6.52246 16.5312 6.88704 16.5312 7.36621  c
16.5312 10.0537 l
15.6562 10.0537 l
h
26.8428 10.0537 m
26.8428 2.89746 l
27.7959 2.89746 l
27.7959 9.20996 l
31.3115 9.20996 l
31.3115 10.0537 l
26.8428 10.0537 l
h
34.2637 10.0537 m
34.2637 3.74121 l
31.9043 3.74121 l
31.9043 2.89746 l
37.5762 2.89746 l
37.5762 3.74121 l
35.2168 3.74121 l
35.2168 10.0537 l
34.2637 10.0537 l
h
38.2314 7.75684 m
39.1221 7.67871 l
39.1637 8.03288 39.2627 8.32454 39.4189 8.55371  c
39.5752 8.78288 39.8148 8.96777 40.1377 9.10840  c
40.4606 9.24902 40.8252 9.31934 41.2314 9.31934  c
41.5960 9.31934 41.9163 9.26725 42.1924 9.16309  c
42.4684 9.05892 42.6742 8.91309 42.8096 8.72559  c
42.9450 8.53809 43.0127 8.33496 43.0127 8.11621  c
43.0127 7.88704 42.9476 7.68913 42.8174 7.52246  c
42.6872 7.35579 42.4710 7.21517 42.1689 7.10059  c
41.9814 7.02767 41.5596 6.91048 40.9033 6.74902  c
40.2471 6.58757 39.7835 6.43913 39.5127 6.30371  c
39.1689 6.12663 38.9137 5.90527 38.7471 5.63965  c
38.5804 5.37402 38.4971 5.07454 38.4971 4.74121  c
38.4971 4.38704 38.6012 4.05111 38.8096 3.73340  c
39.0179 3.41569 39.3174 3.17611 39.7080 3.01465  c
40.0986 2.85319 40.5387 2.77246 41.0283 2.77246  c
41.5492 2.77246 42.0127 2.85840 42.4189 3.03027  c
42.8252 3.20215 43.1377 3.45475 43.3564 3.78809  c
43.5752 4.12142 43.6950 4.49642 43.7158 4.91309  c
42.8096 4.97559 l
42.7575 4.52767 42.5908 4.18652 42.3096 3.95215  c
42.0283 3.71777 41.6117 3.60059 41.0596 3.60059  c
40.4867 3.60059 40.0700 3.70736 39.8096 3.92090  c
39.5492 4.13444 39.4189 4.38704 39.4189 4.67871  c
39.4189 4.93913 39.5127 5.15267 39.7002 5.31934  c
39.8773 5.48600 40.3512 5.65527 41.1221 5.82715  c
41.8929 5.99902 42.4189 6.15267 42.7002 6.28809  c
43.1169 6.47559 43.4242 6.71777 43.6221 7.01465  c
43.8200 7.31152 43.9189 7.65267 43.9189 8.03809  c
43.9189 8.41309 43.8122 8.76986 43.5986 9.10840  c
43.3851 9.44694 43.0726 9.70996 42.6611 9.89746  c
42.2497 10.0850 41.7887 10.1787 41.2783 10.1787  c
40.6325 10.1787 40.0908 10.0850 39.6533 9.89746  c
39.2158 9.70996 38.8721 9.42611 38.6221 9.04590  c
38.3721 8.66569 38.2419 8.23600 38.2314 7.75684  c
h
44.4326 10.0537 m
47.1826 2.89746 l
48.1982 2.89746 l
51.1357 10.0537 l
50.0576 10.0537 l
49.2139 7.88184 l
46.2295 7.88184 l
45.4326 10.0537 l
44.4326 10.0537 l
h
46.4951 7.11621 m
48.9326 7.11621 l
48.1826 5.13184 l
47.9535 4.52767 47.7816 4.03288 47.6670 3.64746  c
47.5837 4.10579 47.4587 4.55892 47.2920 5.00684  c
46.4951 7.11621 l
h
52.3525 12.1631 m
51.7275 12.1631 l
52.6963 10.6006 53.1807 9.03288 53.1807 7.45996  c
53.1807 6.85579 53.1130 6.25163 52.9775 5.64746  c
52.8630 5.15788 52.7067 4.68913 52.5088 4.24121  c
52.3838 3.94954 52.1234 3.45996 51.7275 2.77246  c
52.3525 2.77246 l
52.9671 3.58496 53.4202 4.40788 53.7119 5.24121  c
53.9619 5.94954 54.0869 6.68913 54.0869 7.45996  c
54.0869 8.33496 53.9176 9.18392 53.5791 10.0068  c
53.2406 10.8298 52.8317 11.5485 52.3525 12.1631  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
newpath
185.799 232.000 m
197.000 232.000 l
197.000 246.701 l
185.799 246.701 l
185.799 232.000 l
h
f
1.00000 w
0 j
newpath
185.799 232.000 m
197.000 232.000 l
197.000 246.701 l
185.799 246.701 l
185.799 232.000 l
h
S
newpath
182.299 235.351 m
189.299 235.351 l
189.299 238.351 l
182.299 238.351 l
182.299 235.351 l
h
f
.752941 .752941 .752941 RG
newpath
182.299 235.351 m
189.299 235.351 l
189.299 238.351 l
182.299 238.351 l
182.299 235.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
182.299 240.351 m
189.299 240.351 l
189.299 243.351 l
182.299 243.351 l
182.299 240.351 l
h
f
.752941 .752941 .752941 RG
newpath
182.299 240.351 m
189.299 240.351 l
189.299 243.351 l
182.299 243.351 l
182.299 240.351 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
32.0000 131.000 m
32.0000 182.530 l
32.0000 184.187 33.3431 185.530 35.0000 185.530  c
97.0039 185.530 l
98.6608 185.530 100.004 184.187 100.004 182.530  c
100.004 131.000 l
100.004 129.343 98.6608 128.000 97.0039 128.000  c
35.0000 128.000 l
33.3431 128.000 32.0000 129.343 32.0000 131.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
32.0000 131.000 m
32.0000 182.530 l
32.0000 184.187 33.3431 185.530 35.0000 185.530  c
97.0039 185.530 l
98.6608 185.530 100.004 184.187 100.004 182.530  c
100.004 131.000 l
100.004 129.343 98.6608 128.000 97.0039 128.000  c
35.0000 128.000 l
33.3431 128.000 32.0000 129.343 32.0000 131.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 128.0 32.0 185.5302734375]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
34.5000 133.500 m
34.5000 182.030 l
34.5000 183.687 35.8431 185.030 37.5000 185.030  c
96.5039 185.030 l
98.1608 185.030 99.5039 183.687 99.5039 182.030  c
99.5039 133.500 l
99.5039 131.843 98.1608 130.500 96.5039 130.500  c
37.5000 130.500 l
35.8431 130.500 34.5000 131.843 34.5000 133.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 44.0000 132.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.875000 12.0645 m
.875000 3.47070 l
2.01562 3.47070 l
2.01562 11.0488 l
6.25000 11.0488 l
6.25000 12.0645 l
.875000 12.0645 l
h
9.78320 12.0645 m
9.78320 4.48633 l
6.95508 4.48633 l
6.95508 3.47070 l
13.7676 3.47070 l
13.7676 4.48633 l
10.9238 4.48633 l
10.9238 12.0645 l
9.78320 12.0645 l
h
14.5508 9.29883 m
15.6133 9.20508 l
15.6654 9.64258 15.7852 9.99674 15.9727 10.2676  c
16.1602 10.5384 16.4492 10.7598 16.8398 10.9316  c
17.2305 11.1035 17.6706 11.1895 18.1602 11.1895  c
18.5872 11.1895 18.9674 11.1243 19.3008 10.9941  c
19.6341 10.8639 19.8815 10.6868 20.0430 10.4629  c
20.2044 10.2389 20.2852 9.99674 20.2852 9.73633  c
20.2852 9.46549 20.2070 9.22852 20.0508 9.02539  c
19.8945 8.82227 19.6393 8.65299 19.2852 8.51758  c
19.0456 8.42383 18.5326 8.28320 17.7461 8.09570  c
16.9596 7.90820 16.4102 7.73112 16.0977 7.56445  c
15.6810 7.34570 15.3737 7.07747 15.1758 6.75977  c
14.9779 6.44206 14.8789 6.08529 14.8789 5.68945  c
14.8789 5.26237 15.0013 4.85872 15.2461 4.47852  c
15.4909 4.09831 15.8503 3.81185 16.3242 3.61914  c
16.7982 3.42643 17.3216 3.33008 17.8945 3.33008  c
18.5299 3.33008 19.0924 3.43164 19.5820 3.63477  c
20.0716 3.83789 20.4466 4.13997 20.7070 4.54102  c
20.9674 4.94206 21.1081 5.39258 21.1289 5.89258  c
20.0352 5.97070 l
19.9727 5.42904 19.7721 5.02018 19.4336 4.74414  c
19.0951 4.46810 18.5977 4.33008 17.9414 4.33008  c
17.2539 4.33008 16.7539 4.45508 16.4414 4.70508  c
16.1289 4.95508 15.9727 5.25716 15.9727 5.61133  c
15.9727 5.92383 16.0820 6.17904 16.3008 6.37695  c
16.5195 6.57487 17.0898 6.77799 18.0117 6.98633  c
18.9336 7.19466 19.5664 7.37695 19.9102 7.53320  c
20.4102 7.77279 20.7799 8.06706 21.0195 8.41602  c
21.2591 8.76497 21.3789 9.17383 21.3789 9.64258  c
21.3789 10.1009 21.2487 10.5306 20.9883 10.9316  c
20.7279 11.3327 20.3529 11.6452 19.8633 11.8691  c
19.3737 12.0931 18.8216 12.2051 18.2070 12.2051  c
17.4258 12.2051 16.7721 12.0931 16.2461 11.8691  c
15.7201 11.6452 15.3086 11.3040 15.0117 10.8457  c
14.7148 10.3874 14.5612 9.87174 14.5508 9.29883  c
h
21.9922 12.0645 m
25.2891 3.47070 l
26.5078 3.47070 l
30.0234 12.0645 l
28.7422 12.0645 l
27.7266 9.45508 l
24.1484 9.45508 l
23.1953 12.0645 l
21.9922 12.0645 l
h
24.4766 8.53320 m
27.3828 8.53320 l
26.4922 6.15820 l
26.2109 5.43945 26.0078 4.84570 25.8828 4.37695  c
25.7682 4.92904 25.6120 5.47591 25.4141 6.01758  c
24.4766 8.53320 l
h
30.8086 6.51758 m
30.5430 4.90820 l
30.5430 3.47070 l
31.7461 3.47070 l
31.7461 4.90820 l
31.4648 6.51758 l
30.8086 6.51758 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 46.0020 148.701 ] concat
.250980 .250980 .250980 RG
newpath
2.34375 12.1631 m
1.85417 11.5485 1.44271 10.8298 1.10938 10.0068  c
.776042 9.18392 .609375 8.33496 .609375 7.45996  c
.609375 6.68913 .734375 5.94954 .984375 5.24121  c
1.27604 4.40788 1.72917 3.58496 2.34375 2.77246  c
2.96875 2.77246 l
2.57292 3.44954 2.31250 3.93392 2.18750 4.22559  c
1.98958 4.67350 1.83333 5.14225 1.71875 5.63184  c
1.58333 6.23600 1.51562 6.84538 1.51562 7.45996  c
1.51562 9.03288 2.00000 10.6006 2.96875 12.1631  c
2.34375 12.1631 l
h
4.20508 10.0537 m
4.20508 5.55371 l
3.42383 5.55371 l
3.42383 4.86621 l
4.20508 4.86621 l
4.20508 4.31934 l
4.20508 3.96517 4.23633 3.70475 4.29883 3.53809  c
4.38216 3.30892 4.53060 3.12402 4.74414 2.98340  c
4.95768 2.84277 5.25716 2.77246 5.64258 2.77246  c
5.88216 2.77246 6.15299 2.80371 6.45508 2.86621  c
6.33008 3.63184 l
6.14258 3.60059 5.96549 3.58496 5.79883 3.58496  c
5.53841 3.58496 5.35352 3.63965 5.24414 3.74902  c
5.13477 3.85840 5.08008 4.06934 5.08008 4.38184  c
5.08008 4.86621 l
6.08008 4.86621 l
6.08008 5.55371 l
5.08008 5.55371 l
5.08008 10.0537 l
4.20508 10.0537 l
h
6.76465 10.0537 m
6.76465 4.86621 l
7.54590 4.86621 l
7.54590 5.64746 l
7.75423 5.28288 7.94173 5.04329 8.10840 4.92871  c
8.27507 4.81413 8.46257 4.75684 8.67090 4.75684  c
8.97298 4.75684 9.27507 4.85059 9.57715 5.03809  c
9.28027 5.85059 l
9.06152 5.72559 8.84277 5.66309 8.62402 5.66309  c
8.43652 5.66309 8.26465 5.72038 8.10840 5.83496  c
7.95215 5.94954 7.84277 6.11100 7.78027 6.31934  c
7.68652 6.63184 7.63965 6.97038 7.63965 7.33496  c
7.63965 10.0537 l
6.76465 10.0537 l
h
9.76660 7.45996 m
9.76660 6.50163 10.0374 5.78809 10.5791 5.31934  c
11.0166 4.94434 11.5583 4.75684 12.2041 4.75684  c
12.9124 4.75684 13.4932 4.98861 13.9463 5.45215  c
14.3994 5.91569 14.6260 6.55892 14.6260 7.38184  c
14.6260 8.04850 14.5270 8.57454 14.3291 8.95996  c
14.1312 9.34538 13.8395 9.64486 13.4541 9.85840  c
13.0687 10.0719 12.6520 10.1787 12.2041 10.1787  c
11.4749 10.1787 10.8864 9.94434 10.4385 9.47559  c
9.99056 9.00684 9.76660 8.33496 9.76660 7.45996  c
h
10.6729 7.45996 m
10.6729 8.12663 10.8187 8.62402 11.1104 8.95215  c
11.4020 9.28027 11.7666 9.44434 12.2041 9.44434  c
12.6416 9.44434 13.0036 9.27767 13.2900 8.94434  c
13.5765 8.61100 13.7197 8.10579 13.7197 7.42871  c
13.7197 6.79329 13.5739 6.30892 13.2822 5.97559  c
12.9906 5.64225 12.6312 5.47559 12.2041 5.47559  c
11.7666 5.47559 11.4020 5.63965 11.1104 5.96777  c
10.8187 6.29590 10.6729 6.79329 10.6729 7.45996  c
h
15.6562 10.0537 m
15.6562 4.86621 l
16.4531 4.86621 l
16.4531 5.60059 l
16.6094 5.34017 16.8229 5.13444 17.0938 4.98340  c
17.3646 4.83236 17.6719 4.75684 18.0156 4.75684  c
18.4010 4.75684 18.7161 4.83496 18.9609 4.99121  c
19.2057 5.14746 19.3802 5.37142 19.4844 5.66309  c
19.8906 5.05892 20.4219 4.75684 21.0781 4.75684  c
21.5990 4.75684 21.9974 4.89746 22.2734 5.17871  c
22.5495 5.45996 22.6875 5.89746 22.6875 6.49121  c
22.6875 10.0537 l
21.8125 10.0537 l
21.8125 6.78809 l
21.8125 6.43392 21.7839 6.17871 21.7266 6.02246  c
21.6693 5.86621 21.5651 5.74121 21.4141 5.64746  c
21.2630 5.55371 21.0885 5.50684 20.8906 5.50684  c
20.5260 5.50684 20.2240 5.62923 19.9844 5.87402  c
19.7448 6.11882 19.6250 6.50684 19.6250 7.03809  c
19.6250 10.0537 l
18.7344 10.0537 l
18.7344 6.67871 l
18.7344 6.29329 18.6641 6.00163 18.5234 5.80371  c
18.3828 5.60579 18.1510 5.50684 17.8281 5.50684  c
17.5781 5.50684 17.3490 5.57194 17.1406 5.70215  c
16.9323 5.83236 16.7786 6.02246 16.6797 6.27246  c
16.5807 6.52246 16.5312 6.88704 16.5312 7.36621  c
16.5312 10.0537 l
15.6562 10.0537 l
h
30.1396 10.0537 m
30.1396 9.39746 l
29.8063 9.91829 29.3219 10.1787 28.6865 10.1787  c
28.2699 10.1787 27.8870 10.0641 27.5381 9.83496  c
27.1891 9.60579 26.9209 9.28548 26.7334 8.87402  c
26.5459 8.46257 26.4521 7.99121 26.4521 7.45996  c
26.4521 6.94954 26.5381 6.48340 26.7100 6.06152  c
26.8818 5.63965 27.1396 5.31673 27.4834 5.09277  c
27.8271 4.86882 28.2126 4.75684 28.6396 4.75684  c
28.9521 4.75684 29.2308 4.82194 29.4756 4.95215  c
29.7204 5.08236 29.9209 5.25163 30.0771 5.45996  c
30.0771 2.89746 l
30.9521 2.89746 l
30.9521 10.0537 l
30.1396 10.0537 l
h
27.3584 7.45996 m
27.3584 8.12663 27.4964 8.62402 27.7725 8.95215  c
28.0485 9.28027 28.3792 9.44434 28.7646 9.44434  c
29.1501 9.44434 29.4756 9.28809 29.7412 8.97559  c
30.0068 8.66309 30.1396 8.18392 30.1396 7.53809  c
30.1396 6.82975 30.0042 6.30892 29.7334 5.97559  c
29.4626 5.64225 29.1292 5.47559 28.7334 5.47559  c
28.3376 5.47559 28.0094 5.63444 27.7490 5.95215  c
27.4886 6.26986 27.3584 6.77246 27.3584 7.45996  c
h
35.7324 10.0537 m
35.7324 9.28809 l
35.3262 9.88184 34.7741 10.1787 34.0762 10.1787  c
33.7741 10.1787 33.4902 10.1188 33.2246 9.99902  c
32.9590 9.87923 32.7611 9.73079 32.6309 9.55371  c
32.5007 9.37663 32.4095 9.15788 32.3574 8.89746  c
32.3262 8.73079 32.3105 8.45996 32.3105 8.08496  c
32.3105 4.86621 l
33.1855 4.86621 l
33.1855 7.74121 l
33.1855 8.19954 33.2064 8.51204 33.2480 8.67871  c
33.3001 8.90788 33.4147 9.08757 33.5918 9.21777  c
33.7689 9.34798 33.9928 9.41309 34.2637 9.41309  c
34.5241 9.41309 34.7689 9.34538 34.9980 9.20996  c
35.2272 9.07454 35.3913 8.88965 35.4902 8.65527  c
35.5892 8.42090 35.6387 8.08496 35.6387 7.64746  c
35.6387 4.86621 l
36.5137 4.86621 l
36.5137 10.0537 l
35.7324 10.0537 l
h
41.2783 9.41309 m
40.9554 9.69434 40.6429 9.89225 40.3408 10.0068  c
40.0387 10.1214 39.7158 10.1787 39.3721 10.1787  c
38.7992 10.1787 38.3590 10.0381 38.0518 9.75684  c
37.7445 9.47559 37.5908 9.11621 37.5908 8.67871  c
37.5908 8.42871 37.6481 8.19954 37.7627 7.99121  c
37.8773 7.78288 38.0283 7.61361 38.2158 7.48340  c
38.4033 7.35319 38.6169 7.25684 38.8564 7.19434  c
39.0231 7.15267 39.2835 7.11100 39.6377 7.06934  c
40.3460 6.98600 40.8669 6.88184 41.2002 6.75684  c
41.2002 6.64225 41.2002 6.56934 41.2002 6.53809  c
41.2002 6.17350 41.1169 5.91829 40.9502 5.77246  c
40.7314 5.57454 40.3981 5.47559 39.9502 5.47559  c
39.5439 5.47559 39.2419 5.54850 39.0439 5.69434  c
38.8460 5.84017 38.7002 6.09538 38.6064 6.45996  c
37.7471 6.35059 l
37.8200 5.97559 37.9476 5.67611 38.1299 5.45215  c
38.3122 5.22819 38.5726 5.05632 38.9111 4.93652  c
39.2497 4.81673 39.6429 4.75684 40.0908 4.75684  c
40.5283 4.75684 40.8851 4.80892 41.1611 4.91309  c
41.4372 5.01725 41.6403 5.14746 41.7705 5.30371  c
41.9007 5.45996 41.9919 5.65788 42.0439 5.89746  c
42.0752 6.04329 42.0908 6.31413 42.0908 6.70996  c
42.0908 7.88184 l
42.0908 8.69434 42.1090 9.20996 42.1455 9.42871  c
42.1820 9.64746 42.2575 9.85579 42.3721 10.0537  c
41.4502 10.0537 l
41.3564 9.86621 41.2992 9.65267 41.2783 9.41309  c
h
41.2002 7.44434 m
40.8773 7.57975 40.3981 7.69434 39.7627 7.78809  c
39.4085 7.84017 39.1559 7.89746 39.0049 7.95996  c
38.8538 8.02246 38.7367 8.11621 38.6533 8.24121  c
38.5700 8.36621 38.5283 8.50684 38.5283 8.66309  c
38.5283 8.89225 38.6169 9.08496 38.7939 9.24121  c
38.9710 9.39746 39.2314 9.47559 39.5752 9.47559  c
39.9189 9.47559 40.2210 9.40267 40.4814 9.25684  c
40.7419 9.11100 40.9346 8.90788 41.0596 8.64746  c
41.1533 8.44954 41.2002 8.15788 41.2002 7.77246  c
41.2002 7.44434 l
h
43.4336 10.0537 m
43.4336 2.89746 l
44.3086 2.89746 l
44.3086 10.0537 l
43.4336 10.0537 l
h
f
newpath
1.60938 22.6318 m
.0312500 17.4443 l
.937500 17.4443 l
1.76562 20.4443 l
2.07812 21.5537 l
2.08854 21.5016 2.17708 21.1423 2.34375 20.4756  c
3.17188 17.4443 l
4.06250 17.4443 l
4.84375 20.4600 l
5.10938 21.4443 l
5.40625 20.4443 l
6.29688 17.4443 l
7.14062 17.4443 l
5.51562 22.6318 l
4.60938 22.6318 l
3.78125 19.5225 l
3.57812 18.6475 l
2.53125 22.6318 l
1.60938 22.6318 l
h
7.89355 16.4912 m
7.89355 15.4756 l
8.76855 15.4756 l
8.76855 16.4912 l
7.89355 16.4912 l
h
7.89355 22.6318 m
7.89355 17.4443 l
8.76855 17.4443 l
8.76855 22.6318 l
7.89355 22.6318 l
h
10.0996 22.6318 m
10.0996 17.4443 l
10.8965 17.4443 l
10.8965 18.1787 l
11.2715 17.6162 11.8184 17.3350 12.5371 17.3350  c
12.8496 17.3350 13.1387 17.3896 13.4043 17.4990  c
13.6699 17.6084 13.8678 17.7542 13.9980 17.9365  c
14.1283 18.1188 14.2194 18.3350 14.2715 18.5850  c
14.3027 18.7516 14.3184 19.0381 14.3184 19.4443  c
14.3184 22.6318 l
13.4434 22.6318 l
13.4434 19.4756 l
13.4434 19.1214 13.4095 18.8558 13.3418 18.6787  c
13.2741 18.5016 13.1517 18.3584 12.9746 18.2490  c
12.7975 18.1396 12.5944 18.0850 12.3652 18.0850  c
11.9902 18.0850 11.6647 18.2048 11.3887 18.4443  c
11.1126 18.6839 10.9746 19.1370 10.9746 19.8037  c
10.9746 22.6318 l
10.0996 22.6318 l
h
19.0361 22.6318 m
19.0361 21.9756 l
18.7028 22.4964 18.2184 22.7568 17.5830 22.7568  c
17.1663 22.7568 16.7835 22.6423 16.4346 22.4131  c
16.0856 22.1839 15.8174 21.8636 15.6299 21.4521  c
15.4424 21.0407 15.3486 20.5693 15.3486 20.0381  c
15.3486 19.5277 15.4346 19.0615 15.6064 18.6396  c
15.7783 18.2178 16.0361 17.8949 16.3799 17.6709  c
16.7236 17.4469 17.1090 17.3350 17.5361 17.3350  c
17.8486 17.3350 18.1273 17.4001 18.3721 17.5303  c
18.6169 17.6605 18.8174 17.8298 18.9736 18.0381  c
18.9736 15.4756 l
19.8486 15.4756 l
19.8486 22.6318 l
19.0361 22.6318 l
h
16.2549 20.0381 m
16.2549 20.7048 16.3929 21.2021 16.6689 21.5303  c
16.9450 21.8584 17.2757 22.0225 17.6611 22.0225  c
18.0465 22.0225 18.3721 21.8662 18.6377 21.5537  c
18.9033 21.2412 19.0361 20.7620 19.0361 20.1162  c
19.0361 19.4079 18.9007 18.8870 18.6299 18.5537  c
18.3590 18.2204 18.0257 18.0537 17.6299 18.0537  c
17.2340 18.0537 16.9059 18.2126 16.6455 18.5303  c
16.3851 18.8480 16.2549 19.3506 16.2549 20.0381  c
h
20.8945 20.0381 m
20.8945 19.0798 21.1654 18.3662 21.7070 17.8975  c
22.1445 17.5225 22.6862 17.3350 23.3320 17.3350  c
24.0404 17.3350 24.6211 17.5667 25.0742 18.0303  c
25.5273 18.4938 25.7539 19.1370 25.7539 19.9600  c
25.7539 20.6266 25.6549 21.1527 25.4570 21.5381  c
25.2591 21.9235 24.9674 22.2230 24.5820 22.4365  c
24.1966 22.6501 23.7799 22.7568 23.3320 22.7568  c
22.6029 22.7568 22.0143 22.5225 21.5664 22.0537  c
21.1185 21.5850 20.8945 20.9131 20.8945 20.0381  c
h
21.8008 20.0381 m
21.8008 20.7048 21.9466 21.2021 22.2383 21.5303  c
22.5299 21.8584 22.8945 22.0225 23.3320 22.0225  c
23.7695 22.0225 24.1315 21.8558 24.4180 21.5225  c
24.7044 21.1891 24.8477 20.6839 24.8477 20.0068  c
24.8477 19.3714 24.7018 18.8870 24.4102 18.5537  c
24.1185 18.2204 23.7591 18.0537 23.3320 18.0537  c
22.8945 18.0537 22.5299 18.2178 22.2383 18.5459  c
21.9466 18.8740 21.8008 19.3714 21.8008 20.0381  c
h
27.7373 22.6318 m
26.1592 17.4443 l
27.0654 17.4443 l
27.8936 20.4443 l
28.2061 21.5537 l
28.2165 21.5016 28.3050 21.1423 28.4717 20.4756  c
29.2998 17.4443 l
30.1904 17.4443 l
30.9717 20.4600 l
31.2373 21.4443 l
31.5342 20.4443 l
32.4248 17.4443 l
33.2686 17.4443 l
31.6436 22.6318 l
30.7373 22.6318 l
29.9092 19.5225 l
29.7061 18.6475 l
28.6592 22.6318 l
27.7373 22.6318 l
h
34.5840 24.7412 m
33.9590 24.7412 l
34.9277 23.1787 35.4121 21.6110 35.4121 20.0381  c
35.4121 19.4339 35.3444 18.8298 35.2090 18.2256  c
35.0944 17.7360 34.9382 17.2673 34.7402 16.8193  c
34.6152 16.5277 34.3548 16.0381 33.9590 15.3506  c
34.5840 15.3506 l
35.1986 16.1631 35.6517 16.9860 35.9434 17.8193  c
36.1934 18.5277 36.3184 19.2673 36.3184 20.0381  c
36.3184 20.9131 36.1491 21.7620 35.8105 22.5850  c
35.4720 23.4079 35.0632 24.1266 34.5840 24.7412  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
newpath
84.8027 132.000 m
96.0039 132.000 l
96.0039 146.701 l
84.8027 146.701 l
84.8027 132.000 l
h
f
1.00000 w
0 j
newpath
84.8027 132.000 m
96.0039 132.000 l
96.0039 146.701 l
84.8027 146.701 l
84.8027 132.000 l
h
S
newpath
81.3027 135.351 m
88.3027 135.351 l
88.3027 138.351 l
81.3027 138.351 l
81.3027 135.351 l
h
f
.752941 .752941 .752941 RG
newpath
81.3027 135.351 m
88.3027 135.351 l
88.3027 138.351 l
81.3027 138.351 l
81.3027 135.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
81.3027 140.351 m
88.3027 140.351 l
88.3027 143.351 l
81.3027 143.351 l
81.3027 140.351 l
h
f
.752941 .752941 .752941 RG
newpath
81.3027 140.351 m
88.3027 140.351 l
88.3027 143.351 l
81.3027 143.351 l
81.3027 140.351 l
h
S
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
120.000 35.0000 m
120.000 74.0000 l
120.000 75.6569 121.343 77.0000 123.000 77.0000  c
211.000 77.0000 l
212.657 77.0000 214.000 75.6569 214.000 74.0000  c
214.000 35.0000 l
214.000 33.3431 212.657 32.0000 211.000 32.0000  c
123.000 32.0000 l
121.343 32.0000 120.000 33.3431 120.000 35.0000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
120.000 35.0000 m
120.000 74.0000 l
120.000 75.6569 121.343 77.0000 123.000 77.0000  c
211.000 77.0000 l
212.657 77.0000 214.000 75.6569 214.000 74.0000  c
214.000 35.0000 l
214.000 33.3431 212.657 32.0000 211.000 32.0000  c
123.000 32.0000 l
121.343 32.0000 120.000 33.3431 120.000 35.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [120.0 32.0 120.0 77.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
122.500 37.5000 m
122.500 73.5000 l
122.500 75.1569 123.843 76.5000 125.500 76.5000  c
210.500 76.5000 l
212.157 76.5000 213.500 75.1569 213.500 73.5000  c
213.500 37.5000 l
213.500 35.8431 212.157 34.5000 210.500 34.5000  c
125.500 34.5000 l
123.843 34.5000 122.500 35.8431 122.500 37.5000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 144.998 36.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.875000 12.0645 m
.875000 3.47070 l
2.01562 3.47070 l
2.01562 11.0488 l
6.25000 11.0488 l
6.25000 12.0645 l
.875000 12.0645 l
h
9.78320 12.0645 m
9.78320 4.48633 l
6.95508 4.48633 l
6.95508 3.47070 l
13.7676 3.47070 l
13.7676 4.48633 l
10.9238 4.48633 l
10.9238 12.0645 l
9.78320 12.0645 l
h
14.5508 9.29883 m
15.6133 9.20508 l
15.6654 9.64258 15.7852 9.99674 15.9727 10.2676  c
16.1602 10.5384 16.4492 10.7598 16.8398 10.9316  c
17.2305 11.1035 17.6706 11.1895 18.1602 11.1895  c
18.5872 11.1895 18.9674 11.1243 19.3008 10.9941  c
19.6341 10.8639 19.8815 10.6868 20.0430 10.4629  c
20.2044 10.2389 20.2852 9.99674 20.2852 9.73633  c
20.2852 9.46549 20.2070 9.22852 20.0508 9.02539  c
19.8945 8.82227 19.6393 8.65299 19.2852 8.51758  c
19.0456 8.42383 18.5326 8.28320 17.7461 8.09570  c
16.9596 7.90820 16.4102 7.73112 16.0977 7.56445  c
15.6810 7.34570 15.3737 7.07747 15.1758 6.75977  c
14.9779 6.44206 14.8789 6.08529 14.8789 5.68945  c
14.8789 5.26237 15.0013 4.85872 15.2461 4.47852  c
15.4909 4.09831 15.8503 3.81185 16.3242 3.61914  c
16.7982 3.42643 17.3216 3.33008 17.8945 3.33008  c
18.5299 3.33008 19.0924 3.43164 19.5820 3.63477  c
20.0716 3.83789 20.4466 4.13997 20.7070 4.54102  c
20.9674 4.94206 21.1081 5.39258 21.1289 5.89258  c
20.0352 5.97070 l
19.9727 5.42904 19.7721 5.02018 19.4336 4.74414  c
19.0951 4.46810 18.5977 4.33008 17.9414 4.33008  c
17.2539 4.33008 16.7539 4.45508 16.4414 4.70508  c
16.1289 4.95508 15.9727 5.25716 15.9727 5.61133  c
15.9727 5.92383 16.0820 6.17904 16.3008 6.37695  c
16.5195 6.57487 17.0898 6.77799 18.0117 6.98633  c
18.9336 7.19466 19.5664 7.37695 19.9102 7.53320  c
20.4102 7.77279 20.7799 8.06706 21.0195 8.41602  c
21.2591 8.76497 21.3789 9.17383 21.3789 9.64258  c
21.3789 10.1009 21.2487 10.5306 20.9883 10.9316  c
20.7279 11.3327 20.3529 11.6452 19.8633 11.8691  c
19.3737 12.0931 18.8216 12.2051 18.2070 12.2051  c
17.4258 12.2051 16.7721 12.0931 16.2461 11.8691  c
15.7201 11.6452 15.3086 11.3040 15.0117 10.8457  c
14.7148 10.3874 14.5612 9.87174 14.5508 9.29883  c
h
21.9922 12.0645 m
25.2891 3.47070 l
26.5078 3.47070 l
30.0234 12.0645 l
28.7422 12.0645 l
27.7266 9.45508 l
24.1484 9.45508 l
23.1953 12.0645 l
21.9922 12.0645 l
h
24.4766 8.53320 m
27.3828 8.53320 l
26.4922 6.15820 l
26.2109 5.43945 26.0078 4.84570 25.8828 4.37695  c
25.7682 4.92904 25.6120 5.47591 25.4141 6.01758  c
24.4766 8.53320 l
h
30.8086 6.51758 m
30.5430 4.90820 l
30.5430 3.47070 l
31.7461 3.47070 l
31.7461 4.90820 l
31.4648 6.51758 l
30.8086 6.51758 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 132.000 52.7012 ] concat
.250980 .250980 .250980 RG
newpath
2.34375 12.1631 m
1.85417 11.5485 1.44271 10.8298 1.10938 10.0068  c
.776042 9.18392 .609375 8.33496 .609375 7.45996  c
.609375 6.68913 .734375 5.94954 .984375 5.24121  c
1.27604 4.40788 1.72917 3.58496 2.34375 2.77246  c
2.96875 2.77246 l
2.57292 3.44954 2.31250 3.93392 2.18750 4.22559  c
1.98958 4.67350 1.83333 5.14225 1.71875 5.63184  c
1.58333 6.23600 1.51562 6.84538 1.51562 7.45996  c
1.51562 9.03288 2.00000 10.6006 2.96875 12.1631  c
2.34375 12.1631 l
h
4.20508 10.0537 m
4.20508 5.55371 l
3.42383 5.55371 l
3.42383 4.86621 l
4.20508 4.86621 l
4.20508 4.31934 l
4.20508 3.96517 4.23633 3.70475 4.29883 3.53809  c
4.38216 3.30892 4.53060 3.12402 4.74414 2.98340  c
4.95768 2.84277 5.25716 2.77246 5.64258 2.77246  c
5.88216 2.77246 6.15299 2.80371 6.45508 2.86621  c
6.33008 3.63184 l
6.14258 3.60059 5.96549 3.58496 5.79883 3.58496  c
5.53841 3.58496 5.35352 3.63965 5.24414 3.74902  c
5.13477 3.85840 5.08008 4.06934 5.08008 4.38184  c
5.08008 4.86621 l
6.08008 4.86621 l
6.08008 5.55371 l
5.08008 5.55371 l
5.08008 10.0537 l
4.20508 10.0537 l
h
6.76465 10.0537 m
6.76465 4.86621 l
7.54590 4.86621 l
7.54590 5.64746 l
7.75423 5.28288 7.94173 5.04329 8.10840 4.92871  c
8.27507 4.81413 8.46257 4.75684 8.67090 4.75684  c
8.97298 4.75684 9.27507 4.85059 9.57715 5.03809  c
9.28027 5.85059 l
9.06152 5.72559 8.84277 5.66309 8.62402 5.66309  c
8.43652 5.66309 8.26465 5.72038 8.10840 5.83496  c
7.95215 5.94954 7.84277 6.11100 7.78027 6.31934  c
7.68652 6.63184 7.63965 6.97038 7.63965 7.33496  c
7.63965 10.0537 l
6.76465 10.0537 l
h
9.76660 7.45996 m
9.76660 6.50163 10.0374 5.78809 10.5791 5.31934  c
11.0166 4.94434 11.5583 4.75684 12.2041 4.75684  c
12.9124 4.75684 13.4932 4.98861 13.9463 5.45215  c
14.3994 5.91569 14.6260 6.55892 14.6260 7.38184  c
14.6260 8.04850 14.5270 8.57454 14.3291 8.95996  c
14.1312 9.34538 13.8395 9.64486 13.4541 9.85840  c
13.0687 10.0719 12.6520 10.1787 12.2041 10.1787  c
11.4749 10.1787 10.8864 9.94434 10.4385 9.47559  c
9.99056 9.00684 9.76660 8.33496 9.76660 7.45996  c
h
10.6729 7.45996 m
10.6729 8.12663 10.8187 8.62402 11.1104 8.95215  c
11.4020 9.28027 11.7666 9.44434 12.2041 9.44434  c
12.6416 9.44434 13.0036 9.27767 13.2900 8.94434  c
13.5765 8.61100 13.7197 8.10579 13.7197 7.42871  c
13.7197 6.79329 13.5739 6.30892 13.2822 5.97559  c
12.9906 5.64225 12.6312 5.47559 12.2041 5.47559  c
11.7666 5.47559 11.4020 5.63965 11.1104 5.96777  c
10.8187 6.29590 10.6729 6.79329 10.6729 7.45996  c
h
15.6562 10.0537 m
15.6562 4.86621 l
16.4531 4.86621 l
16.4531 5.60059 l
16.6094 5.34017 16.8229 5.13444 17.0938 4.98340  c
17.3646 4.83236 17.6719 4.75684 18.0156 4.75684  c
18.4010 4.75684 18.7161 4.83496 18.9609 4.99121  c
19.2057 5.14746 19.3802 5.37142 19.4844 5.66309  c
19.8906 5.05892 20.4219 4.75684 21.0781 4.75684  c
21.5990 4.75684 21.9974 4.89746 22.2734 5.17871  c
22.5495 5.45996 22.6875 5.89746 22.6875 6.49121  c
22.6875 10.0537 l
21.8125 10.0537 l
21.8125 6.78809 l
21.8125 6.43392 21.7839 6.17871 21.7266 6.02246  c
21.6693 5.86621 21.5651 5.74121 21.4141 5.64746  c
21.2630 5.55371 21.0885 5.50684 20.8906 5.50684  c
20.5260 5.50684 20.2240 5.62923 19.9844 5.87402  c
19.7448 6.11882 19.6250 6.50684 19.6250 7.03809  c
19.6250 10.0537 l
18.7344 10.0537 l
18.7344 6.67871 l
18.7344 6.29329 18.6641 6.00163 18.5234 5.80371  c
18.3828 5.60579 18.1510 5.50684 17.8281 5.50684  c
17.5781 5.50684 17.3490 5.57194 17.1406 5.70215  c
16.9323 5.83236 16.7786 6.02246 16.6797 6.27246  c
16.5807 6.52246 16.5312 6.88704 16.5312 7.36621  c
16.5312 10.0537 l
15.6562 10.0537 l
h
30.1553 8.14746 m
31.0146 8.27246 l
30.9209 8.86621 30.6787 9.33236 30.2881 9.67090  c
29.8975 10.0094 29.4209 10.1787 28.8584 10.1787  c
28.1501 10.1787 27.5798 9.94434 27.1475 9.47559  c
26.7152 9.00684 26.4990 8.34017 26.4990 7.47559  c
26.4990 6.92350 26.5928 6.43652 26.7803 6.01465  c
26.9678 5.59277 27.2490 5.27767 27.6240 5.06934  c
27.9990 4.86100 28.4105 4.75684 28.8584 4.75684  c
29.4209 4.75684 29.8818 4.89746 30.2412 5.17871  c
30.6006 5.45996 30.8324 5.86621 30.9365 6.39746  c
30.0771 6.52246 l
29.9938 6.17871 29.8506 5.91829 29.6475 5.74121  c
29.4443 5.56413 29.1917 5.47559 28.8896 5.47559  c
28.4521 5.47559 28.0954 5.63444 27.8193 5.95215  c
27.5433 6.26986 27.4053 6.77246 27.4053 7.45996  c
27.4053 8.15788 27.5381 8.66309 27.8037 8.97559  c
28.0693 9.28809 28.4157 9.44434 28.8428 9.44434  c
29.1865 9.44434 29.4756 9.34017 29.7100 9.13184  c
29.9443 8.92350 30.0928 8.59538 30.1553 8.14746  c
h
31.4365 7.45996 m
31.4365 6.50163 31.7074 5.78809 32.2490 5.31934  c
32.6865 4.94434 33.2282 4.75684 33.8740 4.75684  c
34.5824 4.75684 35.1631 4.98861 35.6162 5.45215  c
36.0693 5.91569 36.2959 6.55892 36.2959 7.38184  c
36.2959 8.04850 36.1969 8.57454 35.9990 8.95996  c
35.8011 9.34538 35.5094 9.64486 35.1240 9.85840  c
34.7386 10.0719 34.3219 10.1787 33.8740 10.1787  c
33.1449 10.1787 32.5563 9.94434 32.1084 9.47559  c
31.6605 9.00684 31.4365 8.33496 31.4365 7.45996  c
h
32.3428 7.45996 m
32.3428 8.12663 32.4886 8.62402 32.7803 8.95215  c
33.0719 9.28027 33.4365 9.44434 33.8740 9.44434  c
34.3115 9.44434 34.6735 9.27767 34.9600 8.94434  c
35.2464 8.61100 35.3896 8.10579 35.3896 7.42871  c
35.3896 6.79329 35.2438 6.30892 34.9521 5.97559  c
34.6605 5.64225 34.3011 5.47559 33.8740 5.47559  c
33.4365 5.47559 33.0719 5.63965 32.7803 5.96777  c
32.4886 6.29590 32.3428 6.79329 32.3428 7.45996  c
h
37.3262 10.0537 m
37.3262 4.86621 l
38.1230 4.86621 l
38.1230 5.60059 l
38.2793 5.34017 38.4928 5.13444 38.7637 4.98340  c
39.0345 4.83236 39.3418 4.75684 39.6855 4.75684  c
40.0710 4.75684 40.3861 4.83496 40.6309 4.99121  c
40.8757 5.14746 41.0501 5.37142 41.1543 5.66309  c
41.5605 5.05892 42.0918 4.75684 42.7480 4.75684  c
43.2689 4.75684 43.6673 4.89746 43.9434 5.17871  c
44.2194 5.45996 44.3574 5.89746 44.3574 6.49121  c
44.3574 10.0537 l
43.4824 10.0537 l
43.4824 6.78809 l
43.4824 6.43392 43.4538 6.17871 43.3965 6.02246  c
43.3392 5.86621 43.2350 5.74121 43.0840 5.64746  c
42.9329 5.55371 42.7585 5.50684 42.5605 5.50684  c
42.1960 5.50684 41.8939 5.62923 41.6543 5.87402  c
41.4147 6.11882 41.2949 6.50684 41.2949 7.03809  c
41.2949 10.0537 l
40.4043 10.0537 l
40.4043 6.67871 l
40.4043 6.29329 40.3340 6.00163 40.1934 5.80371  c
40.0527 5.60579 39.8210 5.50684 39.4980 5.50684  c
39.2480 5.50684 39.0189 5.57194 38.8105 5.70215  c
38.6022 5.83236 38.4486 6.02246 38.3496 6.27246  c
38.2507 6.52246 38.2012 6.88704 38.2012 7.36621  c
38.2012 10.0537 l
37.3262 10.0537 l
h
46.4688 10.0537 m
45.6562 10.0537 l
45.6562 2.89746 l
46.5312 2.89746 l
46.5312 5.44434 l
46.9062 4.98600 47.3802 4.75684 47.9531 4.75684  c
48.2760 4.75684 48.5781 4.81934 48.8594 4.94434  c
49.1406 5.06934 49.3750 5.24902 49.5625 5.48340  c
49.7500 5.71777 49.8958 5.99902 50.0000 6.32715  c
50.1042 6.65527 50.1562 7.00684 50.1562 7.38184  c
50.1562 8.26725 49.9349 8.95475 49.4922 9.44434  c
49.0495 9.93392 48.5208 10.1787 47.9062 10.1787  c
47.3021 10.1787 46.8229 9.91829 46.4688 9.39746  c
46.4688 10.0537 l
h
46.4531 7.42871 m
46.4531 8.04329 46.5417 8.49121 46.7188 8.77246  c
46.9896 9.22038 47.3646 9.44434 47.8438 9.44434  c
48.2188 9.44434 48.5469 9.27767 48.8281 8.94434  c
49.1094 8.61100 49.2500 8.11621 49.2500 7.45996  c
49.2500 6.78288 49.1172 6.28288 48.8516 5.95996  c
48.5859 5.63704 48.2604 5.47559 47.8750 5.47559  c
47.4896 5.47559 47.1562 5.64225 46.8750 5.97559  c
46.5938 6.30892 46.4531 6.79329 46.4531 7.42871  c
h
51.2334 3.91309 m
51.2334 2.89746 l
52.1084 2.89746 l
52.1084 3.91309 l
51.2334 3.91309 l
h
51.2334 10.0537 m
51.2334 4.86621 l
52.1084 4.86621 l
52.1084 10.0537 l
51.2334 10.0537 l
h
53.4395 10.0537 m
53.4395 4.86621 l
54.2363 4.86621 l
54.2363 5.60059 l
54.6113 5.03809 55.1582 4.75684 55.8770 4.75684  c
56.1895 4.75684 56.4785 4.81152 56.7441 4.92090  c
57.0098 5.03027 57.2077 5.17611 57.3379 5.35840  c
57.4681 5.54069 57.5592 5.75684 57.6113 6.00684  c
57.6426 6.17350 57.6582 6.45996 57.6582 6.86621  c
57.6582 10.0537 l
56.7832 10.0537 l
56.7832 6.89746 l
56.7832 6.54329 56.7493 6.27767 56.6816 6.10059  c
56.6139 5.92350 56.4915 5.78027 56.3145 5.67090  c
56.1374 5.56152 55.9342 5.50684 55.7051 5.50684  c
55.3301 5.50684 55.0046 5.62663 54.7285 5.86621  c
54.4525 6.10579 54.3145 6.55892 54.3145 7.22559  c
54.3145 10.0537 l
53.4395 10.0537 l
h
62.5479 8.38184 m
63.4697 8.49121 l
63.3239 9.02246 63.0557 9.43652 62.6650 9.73340  c
62.2744 10.0303 61.7822 10.1787 61.1885 10.1787  c
60.4281 10.1787 59.8239 9.94434 59.3760 9.47559  c
58.9281 9.00684 58.7041 8.35059 58.7041 7.50684  c
58.7041 6.63184 58.9307 5.95475 59.3838 5.47559  c
59.8369 4.99642 60.4176 4.75684 61.1260 4.75684  c
61.8239 4.75684 62.3916 4.99121 62.8291 5.45996  c
63.2666 5.92871 63.4854 6.59017 63.4854 7.44434  c
63.4854 7.49642 63.4854 7.57454 63.4854 7.67871  c
59.6260 7.67871 l
59.6572 8.25163 59.8161 8.68913 60.1025 8.99121  c
60.3890 9.29329 60.7510 9.44434 61.1885 9.44434  c
61.5114 9.44434 61.7874 9.36100 62.0166 9.19434  c
62.2458 9.02767 62.4229 8.75684 62.5479 8.38184  c
h
59.6729 6.95996 m
62.5635 6.95996 l
62.5218 6.52246 62.4124 6.19434 62.2354 5.97559  c
61.9541 5.64225 61.5895 5.47559 61.1416 5.47559  c
60.7354 5.47559 60.3968 5.61100 60.1260 5.88184  c
59.8551 6.15267 59.7041 6.51204 59.6729 6.95996  c
h
67.9375 10.0537 m
67.9375 9.39746 l
67.6042 9.91829 67.1198 10.1787 66.4844 10.1787  c
66.0677 10.1787 65.6849 10.0641 65.3359 9.83496  c
64.9870 9.60579 64.7188 9.28548 64.5312 8.87402  c
64.3438 8.46257 64.2500 7.99121 64.2500 7.45996  c
64.2500 6.94954 64.3359 6.48340 64.5078 6.06152  c
64.6797 5.63965 64.9375 5.31673 65.2812 5.09277  c
65.6250 4.86882 66.0104 4.75684 66.4375 4.75684  c
66.7500 4.75684 67.0286 4.82194 67.2734 4.95215  c
67.5182 5.08236 67.7188 5.25163 67.8750 5.45996  c
67.8750 2.89746 l
68.7500 2.89746 l
68.7500 10.0537 l
67.9375 10.0537 l
h
65.1562 7.45996 m
65.1562 8.12663 65.2943 8.62402 65.5703 8.95215  c
65.8464 9.28027 66.1771 9.44434 66.5625 9.44434  c
66.9479 9.44434 67.2734 9.28809 67.5391 8.97559  c
67.8047 8.66309 67.9375 8.18392 67.9375 7.53809  c
67.9375 6.82975 67.8021 6.30892 67.5312 5.97559  c
67.2604 5.64225 66.9271 5.47559 66.5312 5.47559  c
66.1354 5.47559 65.8073 5.63444 65.5469 5.95215  c
65.2865 6.26986 65.1562 6.77246 65.1562 7.45996  c
h
70.7021 12.1631 m
70.0771 12.1631 l
71.0459 10.6006 71.5303 9.03288 71.5303 7.45996  c
71.5303 6.85579 71.4626 6.25163 71.3271 5.64746  c
71.2126 5.15788 71.0563 4.68913 70.8584 4.24121  c
70.7334 3.94954 70.4730 3.45996 70.0771 2.77246  c
70.7021 2.77246 l
71.3167 3.58496 71.7699 4.40788 72.0615 5.24121  c
72.3115 5.94954 72.4365 6.68913 72.4365 7.45996  c
72.4365 8.33496 72.2673 9.18392 71.9287 10.0068  c
71.5902 10.8298 71.1813 11.5485 70.7021 12.1631  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
newpath
198.799 36.0000 m
210.000 36.0000 l
210.000 50.7012 l
198.799 50.7012 l
198.799 36.0000 l
h
f
1.00000 w
0 j
newpath
198.799 36.0000 m
210.000 36.0000 l
210.000 50.7012 l
198.799 50.7012 l
198.799 36.0000 l
h
S
newpath
195.299 39.3506 m
202.299 39.3506 l
202.299 42.3506 l
195.299 42.3506 l
195.299 39.3506 l
h
f
.752941 .752941 .752941 RG
newpath
195.299 39.3506 m
202.299 39.3506 l
202.299 42.3506 l
195.299 42.3506 l
195.299 39.3506 l
h
S
0.00000 0.00000 0.00000 RG
newpath
195.299 44.3506 m
202.299 44.3506 l
202.299 47.3506 l
195.299 47.3506 l
195.299 44.3506 l
h
f
.752941 .752941 .752941 RG
newpath
195.299 44.3506 m
202.299 44.3506 l
202.299 47.3506 l
195.299 47.3506 l
195.299 44.3506 l
h
S
0.00000 0.00000 0.00000 RG
2 j
0.00000 0.00000 0.00000 RG
newpath
97.1261 186.375 m
140.727 227.873 l
S
[ .689426 -.724356 .724356 .689426 -121.355 172.708 ] concat
newpath
140.727 227.873 m
132.727 207.873 l
148.727 207.873 l
140.727 227.873 l
140.727 227.873 l
h
f*
newpath
140.727 227.873 m
132.727 207.873 l
148.727 207.873 l
140.727 227.873 l
140.727 227.873 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
230.689 188.967 m
188.815 227.895 l
S
[ .680874 .732400 -.732400 .680874 227.166 -65.5611 ] concat
newpath
188.815 227.895 m
180.815 207.895 l
196.815 207.895 l
188.815 227.895 l
188.815 227.895 l
h
f*
newpath
188.815 227.895 m
180.815 207.895 l
196.815 207.895 l
188.815 227.895 l
188.815 227.895 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
188.992 77.9656 m
235.847 127.961 l
S
[ .729647 -.683824 .683824 .729647 -23.7406 195.872 ] concat
newpath
235.847 127.961 m
227.847 107.961 l
243.847 107.961 l
235.847 127.961 l
235.847 127.961 l
h
f*
newpath
235.847 127.961 m
227.847 107.961 l
243.847 107.961 l
235.847 127.961 l
235.847 127.961 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
143.765 78.0223 m
94.2670 128.133 l
S
[ .711442 .702745 -.702745 .711442 117.246 -29.2718 ] concat
newpath
94.2670 128.133 m
86.2670 108.133 l
102.267 108.133 l
94.2670 128.133 l
94.2670 128.133 l
h
f*
newpath
94.2670 128.133 m
86.2670 108.133 l
102.267 108.133 l
94.2670 128.133 l
94.2670 128.133 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 281.000 l
301.000 281.000 l
301.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 281.000 l
301.000 281.000 l
301.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
