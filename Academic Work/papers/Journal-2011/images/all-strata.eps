%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 97 187 498 604
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, July 7, 2015 5:58:57 AM PDT
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
400 416 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
400.000 0.00000 l
400.000 416.000 l
0.00000 416.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 424 440 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 426.000 442.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 428.000 444.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
180.000 35.0000 m
180.000 54.0000 l
180.000 55.6569 181.343 57.0000 183.000 57.0000  c
215.062 57.0000 l
216.719 57.0000 218.062 55.6569 218.062 54.0000  c
218.062 35.0000 l
218.062 33.3431 216.719 32.0000 215.062 32.0000  c
183.000 32.0000 l
181.343 32.0000 180.000 33.3431 180.000 35.0000  c
h
f
0 J
2 j
.611765 .564706 .564706 RG
newpath
180.000 35.0000 m
180.000 54.0000 l
180.000 55.6569 181.343 57.0000 183.000 57.0000  c
215.062 57.0000 l
216.719 57.0000 218.062 55.6569 218.062 54.0000  c
218.062 35.0000 l
218.062 33.3431 216.719 32.0000 215.062 32.0000  c
183.000 32.0000 l
181.343 32.0000 180.000 33.3431 180.000 35.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [180.0 32.0 180.0 57.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
183.000 38.0000 m
183.000 53.5000 l
183.000 55.1569 184.343 56.5000 186.000 56.5000  c
214.562 56.5000 l
216.219 56.5000 217.562 55.1569 217.562 53.5000  c
217.562 38.0000 l
217.562 36.3431 216.219 35.0000 214.562 35.0000  c
186.000 35.0000 l
184.343 35.0000 183.000 36.3431 183.000 38.0000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
180.000 50.0000 m
180.000 104.000 l
180.000 105.657 181.343 107.000 183.000 107.000  c
264.000 107.000 l
265.657 107.000 267.000 105.657 267.000 104.000  c
267.000 50.0000 l
267.000 48.3431 265.657 47.0000 264.000 47.0000  c
183.000 47.0000 l
181.343 47.0000 180.000 48.3431 180.000 50.0000  c
h
f
.611765 .564706 .564706 RG
newpath
180.000 50.0000 m
180.000 104.000 l
180.000 105.657 181.343 107.000 183.000 107.000  c
264.000 107.000 l
265.657 107.000 267.000 105.657 267.000 104.000  c
267.000 50.0000 l
267.000 48.3431 265.657 47.0000 264.000 47.0000  c
183.000 47.0000 l
181.343 47.0000 180.000 48.3431 180.000 50.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [180.0 47.0 180.0 107.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
183.000 53.0000 m
183.000 103.500 l
183.000 105.157 184.343 106.500 186.000 106.500  c
263.500 106.500 l
265.157 106.500 266.500 105.157 266.500 103.500  c
266.500 53.0000 l
266.500 51.3431 265.157 50.0000 263.500 50.0000  c
186.000 50.0000 l
184.343 50.0000 183.000 51.3431 183.000 53.0000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 190.000 69.2500 ] concat
[ 1.00000 0.00000 0.00000 1.00000 8.50000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.02539 .632812 m
6.99609 .632812 l
6.99609 1.68750 l
2.19141 1.68750 l
2.19141 4.30078 l
6.41602 4.30078 l
6.41602 5.32617 l
2.19141 5.32617 l
2.19141 9.24023 l
1.02539 9.24023 l
h
9.24609 8.29102 m
9.46875 8.46680 9.73242 8.55469 10.0371 8.55469  c
10.4082 8.55469 10.7676 8.46875 11.1152 8.29688  c
11.7012 8.01172 11.9941 7.54492 11.9941 6.89648  c
11.9941 6.04688 l
11.8652 6.12891 11.6992 6.19727 11.4961 6.25195  c
11.2930 6.30664 11.0938 6.34570 10.8984 6.36914  c
10.2598 6.45117 l
9.87695 6.50195 9.58984 6.58203 9.39844 6.69141  c
9.07422 6.87500 8.91211 7.16797 8.91211 7.57031  c
8.91211 7.87500 9.02344 8.11523 9.24609 8.29102  c
h
11.4668 5.43750 m
11.7090 5.40625 11.8711 5.30469 11.9531 5.13281  c
12.0000 5.03906 12.0234 4.90430 12.0234 4.72852  c
12.0234 4.36914 11.8955 4.10840 11.6396 3.94629  c
11.3838 3.78418 11.0176 3.70312 10.5410 3.70312  c
9.99023 3.70312 9.59961 3.85156 9.36914 4.14844  c
9.24023 4.31250 9.15625 4.55664 9.11719 4.88086  c
8.13281 4.88086 l
8.15234 4.10742 8.40332 3.56934 8.88574 3.26660  c
9.36816 2.96387 9.92773 2.81250 10.5645 2.81250  c
11.3027 2.81250 11.9023 2.95312 12.3633 3.23438  c
12.8203 3.51562 13.0488 3.95312 13.0488 4.54688  c
13.0488 8.16211 l
13.0488 8.27148 13.0713 8.35938 13.1162 8.42578  c
13.1611 8.49219 13.2559 8.52539 13.4004 8.52539  c
13.4473 8.52539 13.5000 8.52246 13.5586 8.51660  c
13.6172 8.51074 13.6797 8.50195 13.7461 8.49023  c
13.7461 9.26953 l
13.5820 9.31641 13.4570 9.34570 13.3711 9.35742  c
13.2852 9.36914 13.1680 9.37500 13.0195 9.37500  c
12.6562 9.37500 12.3926 9.24609 12.2285 8.98828  c
12.1426 8.85156 12.0820 8.65820 12.0469 8.40820  c
11.8320 8.68945 11.5234 8.93359 11.1211 9.14062  c
10.7188 9.34766 10.2754 9.45117 9.79102 9.45117  c
9.20898 9.45117 8.73340 9.27441 8.36426 8.92090  c
7.99512 8.56738 7.81055 8.12500 7.81055 7.59375  c
7.81055 7.01172 7.99219 6.56055 8.35547 6.24023  c
8.71875 5.91992 9.19531 5.72266 9.78516 5.64844  c
h
14.7773 2.99414 m
15.8496 2.99414 l
15.8496 9.24023 l
14.7773 9.24023 l
h
14.7773 .632812 m
15.8496 .632812 l
15.8496 1.82812 l
14.7773 1.82812 l
h
17.4727 2.96484 m
18.4746 2.96484 l
18.4746 4.04883 l
18.5566 3.83789 18.7578 3.58105 19.0781 3.27832  c
19.3984 2.97559 19.7676 2.82422 20.1855 2.82422  c
20.2051 2.82422 20.2383 2.82617 20.2852 2.83008  c
20.3320 2.83398 20.4121 2.84180 20.5254 2.85352  c
20.5254 3.96680 l
20.4629 3.95508 20.4053 3.94727 20.3525 3.94336  c
20.2998 3.93945 20.2422 3.93750 20.1797 3.93750  c
19.6484 3.93750 19.2402 4.10840 18.9551 4.45020  c
18.6699 4.79199 18.5273 5.18555 18.5273 5.63086  c
18.5273 9.24023 l
17.4727 9.24023 l
h
24.8848 .632812 m
26.5547 .632812 l
29.0273 7.91016 l
31.4824 .632812 l
33.1348 .632812 l
33.1348 9.24023 l
32.0273 9.24023 l
32.0273 4.16016 l
32.0273 3.98438 32.0312 3.69336 32.0391 3.28711  c
32.0469 2.88086 32.0508 2.44531 32.0508 1.98047  c
29.5957 9.24023 l
28.4414 9.24023 l
25.9688 1.98047 l
25.9688 2.24414 l
25.9688 2.45508 25.9736 2.77637 25.9834 3.20801  c
25.9932 3.63965 25.9980 3.95703 25.9980 4.16016  c
25.9980 9.24023 l
24.8848 9.24023 l
h
35.8242 2.96484 m
35.8242 7.13086 l
35.8242 7.45117 35.8750 7.71289 35.9766 7.91602  c
36.1641 8.29102 36.5137 8.47852 37.0254 8.47852  c
37.7598 8.47852 38.2598 8.15039 38.5254 7.49414  c
38.6699 7.14258 38.7422 6.66016 38.7422 6.04688  c
38.7422 2.96484 l
39.7969 2.96484 l
39.7969 9.24023 l
38.8008 9.24023 l
38.8125 8.31445 l
38.6758 8.55273 38.5059 8.75391 38.3027 8.91797  c
37.9004 9.24609 37.4121 9.41016 36.8379 9.41016  c
35.9434 9.41016 35.3340 9.11133 35.0098 8.51367  c
34.8340 8.19336 34.7461 7.76562 34.7461 7.23047  c
34.7461 2.96484 l
h
41.4727 .632812 m
42.5273 .632812 l
42.5273 9.24023 l
41.4727 9.24023 l
h
44.3203 1.21289 m
45.3867 1.21289 l
45.3867 2.96484 l
46.3887 2.96484 l
46.3887 3.82617 l
45.3867 3.82617 l
45.3867 7.92188 l
45.3867 8.14062 45.4609 8.28711 45.6094 8.36133  c
45.6914 8.40430 45.8281 8.42578 46.0195 8.42578  c
46.0703 8.42578 46.1250 8.42480 46.1836 8.42285  c
46.2422 8.42090 46.3105 8.41602 46.3887 8.40820  c
46.3887 9.24023 l
46.2676 9.27539 46.1416 9.30078 46.0107 9.31641  c
45.8799 9.33203 45.7383 9.33984 45.5859 9.33984  c
45.0938 9.33984 44.7598 9.21387 44.5840 8.96191  c
44.4082 8.70996 44.3203 8.38281 44.3203 7.98047  c
44.3203 3.82617 l
43.4707 3.82617 l
43.4707 2.96484 l
44.3203 2.96484 l
h
47.4434 2.99414 m
48.5156 2.99414 l
48.5156 9.24023 l
47.4434 9.24023 l
h
47.4434 .632812 m
48.5156 .632812 l
48.5156 1.82812 l
47.4434 1.82812 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 162.000 41.2500 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 14.0000 ] concat
newpath
.914062 .632812 m
2.08008 .632812 l
2.08008 8.21484 l
6.43945 8.21484 l
6.43945 9.24023 l
.914062 9.24023 l
h
8.58984 8.29102 m
8.81250 8.46680 9.07617 8.55469 9.38086 8.55469  c
9.75195 8.55469 10.1113 8.46875 10.4590 8.29688  c
11.0449 8.01172 11.3379 7.54492 11.3379 6.89648  c
11.3379 6.04688 l
11.2090 6.12891 11.0430 6.19727 10.8398 6.25195  c
10.6367 6.30664 10.4375 6.34570 10.2422 6.36914  c
9.60352 6.45117 l
9.22070 6.50195 8.93359 6.58203 8.74219 6.69141  c
8.41797 6.87500 8.25586 7.16797 8.25586 7.57031  c
8.25586 7.87500 8.36719 8.11523 8.58984 8.29102  c
h
10.8105 5.43750 m
11.0527 5.40625 11.2148 5.30469 11.2969 5.13281  c
11.3438 5.03906 11.3672 4.90430 11.3672 4.72852  c
11.3672 4.36914 11.2393 4.10840 10.9834 3.94629  c
10.7275 3.78418 10.3613 3.70312 9.88477 3.70312  c
9.33398 3.70312 8.94336 3.85156 8.71289 4.14844  c
8.58398 4.31250 8.50000 4.55664 8.46094 4.88086  c
7.47656 4.88086 l
7.49609 4.10742 7.74707 3.56934 8.22949 3.26660  c
8.71191 2.96387 9.27148 2.81250 9.90820 2.81250  c
10.6465 2.81250 11.2461 2.95312 11.7070 3.23438  c
12.1641 3.51562 12.3926 3.95312 12.3926 4.54688  c
12.3926 8.16211 l
12.3926 8.27148 12.4150 8.35938 12.4600 8.42578  c
12.5049 8.49219 12.5996 8.52539 12.7441 8.52539  c
12.7910 8.52539 12.8438 8.52246 12.9023 8.51660  c
12.9609 8.51074 13.0234 8.50195 13.0898 8.49023  c
13.0898 9.26953 l
12.9258 9.31641 12.8008 9.34570 12.7148 9.35742  c
12.6289 9.36914 12.5117 9.37500 12.3633 9.37500  c
12.0000 9.37500 11.7363 9.24609 11.5723 8.98828  c
11.4863 8.85156 11.4258 8.65820 11.3906 8.40820  c
11.1758 8.68945 10.8672 8.93359 10.4648 9.14062  c
10.0625 9.34766 9.61914 9.45117 9.13477 9.45117  c
8.55273 9.45117 8.07715 9.27441 7.70801 8.92090  c
7.33887 8.56738 7.15430 8.12500 7.15430 7.59375  c
7.15430 7.01172 7.33594 6.56055 7.69922 6.24023  c
8.06250 5.91992 8.53906 5.72266 9.12891 5.64844  c
h
14.1211 2.96484 m
15.1230 2.96484 l
15.1230 3.85547 l
15.4199 3.48828 15.7344 3.22461 16.0664 3.06445  c
16.3984 2.90430 16.7676 2.82422 17.1738 2.82422  c
18.0645 2.82422 18.6660 3.13477 18.9785 3.75586  c
19.1504 4.09570 19.2363 4.58203 19.2363 5.21484  c
19.2363 9.24023 l
18.1641 9.24023 l
18.1641 5.28516 l
18.1641 4.90234 18.1074 4.59375 17.9941 4.35938  c
17.8066 3.96875 17.4668 3.77344 16.9746 3.77344  c
16.7246 3.77344 16.5195 3.79883 16.3594 3.84961  c
16.0703 3.93555 15.8164 4.10742 15.5977 4.36523  c
15.4219 4.57227 15.3076 4.78613 15.2549 5.00684  c
15.2021 5.22754 15.1758 5.54297 15.1758 5.95312  c
15.1758 9.24023 l
14.1211 9.24023 l
h
24.7031 3.13770 m
25.1211 3.34668 25.4395 3.61719 25.6582 3.94922  c
25.8691 4.26562 26.0098 4.63477 26.0801 5.05664  c
26.1426 5.34570 26.1738 5.80664 26.1738 6.43945  c
21.5742 6.43945 l
21.5938 7.07617 21.7441 7.58691 22.0254 7.97168  c
22.3066 8.35645 22.7422 8.54883 23.3320 8.54883  c
23.8828 8.54883 24.3223 8.36719 24.6504 8.00391  c
24.8379 7.79297 24.9707 7.54883 25.0488 7.27148  c
26.0859 7.27148 l
26.0586 7.50195 25.9678 7.75879 25.8135 8.04199  c
25.6592 8.32520 25.4863 8.55664 25.2949 8.73633  c
24.9746 9.04883 24.5781 9.25977 24.1055 9.36914  c
23.8516 9.43164 23.5645 9.46289 23.2441 9.46289  c
22.4629 9.46289 21.8008 9.17871 21.2578 8.61035  c
20.7148 8.04199 20.4434 7.24609 20.4434 6.22266  c
20.4434 5.21484 20.7168 4.39648 21.2637 3.76758  c
21.8105 3.13867 22.5254 2.82422 23.4082 2.82422  c
23.8535 2.82422 24.2852 2.92871 24.7031 3.13770  c
h
25.0898 5.60156 m
25.0469 5.14453 24.9473 4.77930 24.7910 4.50586  c
24.5020 3.99805 24.0195 3.74414 23.3438 3.74414  c
22.8594 3.74414 22.4531 3.91895 22.1250 4.26855  c
21.7969 4.61816 21.6230 5.06250 21.6035 5.60156  c
h
34.1777 4.27148 m
34.6699 4.27148 35.0527 4.20312 35.3262 4.06641  c
35.7559 3.85156 35.9707 3.46484 35.9707 2.90625  c
35.9707 2.34375 35.7422 1.96484 35.2852 1.76953  c
35.0273 1.66016 34.6445 1.60547 34.1367 1.60547  c
32.0566 1.60547 l
32.0566 4.27148 l
h
34.5703 8.24414 m
35.2852 8.24414 35.7949 8.03711 36.0996 7.62305  c
36.2910 7.36133 36.3867 7.04492 36.3867 6.67383  c
36.3867 6.04883 36.1074 5.62305 35.5488 5.39648  c
35.2520 5.27539 34.8594 5.21484 34.3711 5.21484  c
32.0566 5.21484 l
32.0566 8.24414 l
h
30.9141 .632812 m
34.6113 .632812 l
35.6191 .632812 36.3359 .933594 36.7617 1.53516  c
37.0117 1.89062 37.1367 2.30078 37.1367 2.76562  c
37.1367 3.30859 36.9824 3.75391 36.6738 4.10156  c
36.5137 4.28516 36.2832 4.45312 35.9824 4.60547  c
36.4238 4.77344 36.7539 4.96289 36.9727 5.17383  c
37.3594 5.54883 37.5527 6.06641 37.5527 6.72656  c
37.5527 7.28125 37.3789 7.78320 37.0312 8.23242  c
36.5117 8.90430 35.6855 9.24023 34.5527 9.24023  c
30.9141 9.24023 l
h
38.8359 2.96484 m
39.8379 2.96484 l
39.8379 4.04883 l
39.9199 3.83789 40.1211 3.58105 40.4414 3.27832  c
40.7617 2.97559 41.1309 2.82422 41.5488 2.82422  c
41.5684 2.82422 41.6016 2.82617 41.6484 2.83008  c
41.6953 2.83398 41.7754 2.84180 41.8887 2.85352  c
41.8887 3.96680 l
41.8262 3.95508 41.7686 3.94727 41.7158 3.94336  c
41.6631 3.93945 41.6055 3.93750 41.5430 3.93750  c
41.0117 3.93750 40.6035 4.10840 40.3184 4.45020  c
40.0332 4.79199 39.8906 5.18555 39.8906 5.63086  c
39.8906 9.24023 l
38.8359 9.24023 l
h
42.8027 2.99414 m
43.8750 2.99414 l
43.8750 9.24023 l
42.8027 9.24023 l
h
42.8027 .632812 m
43.8750 .632812 l
43.8750 1.82812 l
42.8027 1.82812 l
h
46.5645 7.86328 m
46.8496 8.31641 47.3066 8.54297 47.9355 8.54297  c
48.4238 8.54297 48.8252 8.33301 49.1396 7.91309  c
49.4541 7.49316 49.6113 6.89062 49.6113 6.10547  c
49.6113 5.31250 49.4492 4.72559 49.1250 4.34473  c
48.8008 3.96387 48.4004 3.77344 47.9238 3.77344  c
47.3926 3.77344 46.9619 3.97656 46.6318 4.38281  c
46.3018 4.78906 46.1367 5.38672 46.1367 6.17578  c
46.1367 6.84766 46.2793 7.41016 46.5645 7.86328  c
h
48.9316 3.15820 m
49.1191 3.27539 49.3320 3.48047 49.5703 3.77344  c
49.5703 .603516 l
50.5840 .603516 l
50.5840 9.24023 l
49.6348 9.24023 l
49.6348 8.36719 l
49.3887 8.75391 49.0977 9.03320 48.7617 9.20508  c
48.4258 9.37695 48.0410 9.46289 47.6074 9.46289  c
46.9082 9.46289 46.3027 9.16895 45.7910 8.58105  c
45.2793 7.99316 45.0234 7.21094 45.0234 6.23438  c
45.0234 5.32031 45.2568 4.52832 45.7236 3.85840  c
46.1904 3.18848 46.8574 2.85352 47.7246 2.85352  c
48.2051 2.85352 48.6074 2.95508 48.9316 3.15820  c
h
55.6465 3.21680 m
55.8457 3.35352 56.0488 3.55273 56.2559 3.81445  c
56.2559 3.02344 l
57.2285 3.02344 l
57.2285 8.73047 l
57.2285 9.52734 57.1113 10.1562 56.8770 10.6172  c
56.4395 11.4688 55.6133 11.8945 54.3984 11.8945  c
53.7227 11.8945 53.1543 11.7432 52.6934 11.4404  c
52.2324 11.1377 51.9746 10.6641 51.9199 10.0195  c
52.9922 10.0195 l
53.0430 10.3008 53.1445 10.5176 53.2969 10.6699  c
53.5352 10.9043 53.9102 11.0215 54.4219 11.0215  c
55.2305 11.0215 55.7598 10.7363 56.0098 10.1660  c
56.1582 9.83008 56.2266 9.23047 56.2148 8.36719  c
56.0039 8.68750 55.7500 8.92578 55.4531 9.08203  c
55.1562 9.23828 54.7637 9.31641 54.2754 9.31641  c
53.5957 9.31641 53.0010 9.07520 52.4912 8.59277  c
51.9814 8.11035 51.7266 7.31250 51.7266 6.19922  c
51.7266 5.14844 51.9834 4.32812 52.4971 3.73828  c
53.0107 3.14844 53.6309 2.85352 54.3574 2.85352  c
54.8496 2.85352 55.2793 2.97461 55.6465 3.21680  c
h
55.7754 4.34766 m
55.4551 3.97266 55.0469 3.78516 54.5508 3.78516  c
53.8086 3.78516 53.3008 4.13281 53.0273 4.82812  c
52.8828 5.19922 52.8105 5.68555 52.8105 6.28711  c
52.8105 6.99414 52.9541 7.53223 53.2412 7.90137  c
53.5283 8.27051 53.9141 8.45508 54.3984 8.45508  c
55.1562 8.45508 55.6895 8.11328 55.9980 7.42969  c
56.1699 7.04297 56.2559 6.59180 56.2559 6.07617  c
56.2559 5.29883 56.0957 4.72266 55.7754 4.34766  c
h
62.7246 3.13770 m
63.1426 3.34668 63.4609 3.61719 63.6797 3.94922  c
63.8906 4.26562 64.0312 4.63477 64.1016 5.05664  c
64.1641 5.34570 64.1953 5.80664 64.1953 6.43945  c
59.5957 6.43945 l
59.6152 7.07617 59.7656 7.58691 60.0469 7.97168  c
60.3281 8.35645 60.7637 8.54883 61.3535 8.54883  c
61.9043 8.54883 62.3438 8.36719 62.6719 8.00391  c
62.8594 7.79297 62.9922 7.54883 63.0703 7.27148  c
64.1074 7.27148 l
64.0801 7.50195 63.9893 7.75879 63.8350 8.04199  c
63.6807 8.32520 63.5078 8.55664 63.3164 8.73633  c
62.9961 9.04883 62.5996 9.25977 62.1270 9.36914  c
61.8730 9.43164 61.5859 9.46289 61.2656 9.46289  c
60.4844 9.46289 59.8223 9.17871 59.2793 8.61035  c
58.7363 8.04199 58.4648 7.24609 58.4648 6.22266  c
58.4648 5.21484 58.7383 4.39648 59.2852 3.76758  c
59.8320 3.13867 60.5469 2.82422 61.4297 2.82422  c
61.8750 2.82422 62.3066 2.92871 62.7246 3.13770  c
h
63.1113 5.60156 m
63.0684 5.14453 62.9688 4.77930 62.8125 4.50586  c
62.5234 3.99805 62.0410 3.74414 61.3652 3.74414  c
60.8809 3.74414 60.4746 3.91895 60.1465 4.26855  c
59.8184 4.61816 59.6445 5.06250 59.6250 5.60156  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 162.000 41.2500 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
249.000 51.0000 m
261.000 51.0000 l
261.000 63.0000 l
249.000 63.0000 l
249.000 51.0000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
249.000 51.0000 m
261.000 51.0000 l
261.000 63.0000 l
249.000 63.0000 l
249.000 51.0000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
249.000 51.0000 m
261.000 51.0000 l
261.000 55.0000 l
255.000 55.0000 l
255.000 59.0000 l
249.000 59.0000 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
249.000 51.0000 m
261.000 51.0000 l
261.000 55.0000 l
255.000 55.0000 l
255.000 59.0000 l
249.000 59.0000 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
336.000 199.000 m
336.000 218.000 l
336.000 219.657 337.343 221.000 339.000 221.000  c
371.062 221.000 l
372.719 221.000 374.062 219.657 374.062 218.000  c
374.062 199.000 l
374.062 197.343 372.719 196.000 371.062 196.000  c
339.000 196.000 l
337.343 196.000 336.000 197.343 336.000 199.000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
336.000 199.000 m
336.000 218.000 l
336.000 219.657 337.343 221.000 339.000 221.000  c
371.062 221.000 l
372.719 221.000 374.062 219.657 374.062 218.000  c
374.062 199.000 l
374.062 197.343 372.719 196.000 371.062 196.000  c
339.000 196.000 l
337.343 196.000 336.000 197.343 336.000 199.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [336.0 196.0 336.0 221.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
339.000 202.000 m
339.000 217.500 l
339.000 219.157 340.343 220.500 342.000 220.500  c
370.562 220.500 l
372.219 220.500 373.562 219.157 373.562 217.500  c
373.562 202.000 l
373.562 200.343 372.219 199.000 370.562 199.000  c
342.000 199.000 l
340.343 199.000 339.000 200.343 339.000 202.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
336.000 214.000 m
336.000 268.000 l
336.000 269.657 337.343 271.000 339.000 271.000  c
420.000 271.000 l
421.657 271.000 423.000 269.657 423.000 268.000  c
423.000 214.000 l
423.000 212.343 421.657 211.000 420.000 211.000  c
339.000 211.000 l
337.343 211.000 336.000 212.343 336.000 214.000  c
h
f
.611765 .564706 .564706 RG
newpath
336.000 214.000 m
336.000 268.000 l
336.000 269.657 337.343 271.000 339.000 271.000  c
420.000 271.000 l
421.657 271.000 423.000 269.657 423.000 268.000  c
423.000 214.000 l
423.000 212.343 421.657 211.000 420.000 211.000  c
339.000 211.000 l
337.343 211.000 336.000 212.343 336.000 214.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [336.0 211.0 336.0 271.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
339.000 217.000 m
339.000 267.500 l
339.000 269.157 340.343 270.500 342.000 270.500  c
419.500 270.500 l
421.157 270.500 422.500 269.157 422.500 267.500  c
422.500 217.000 l
422.500 215.343 421.157 214.000 419.500 214.000  c
342.000 214.000 l
340.343 214.000 339.000 215.343 339.000 217.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 361.500 233.250 ] concat
[ 1.00000 0.00000 0.00000 1.00000 7.50000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.02539 .632812 m
6.99609 .632812 l
6.99609 1.68750 l
2.19141 1.68750 l
2.19141 4.30078 l
6.41602 4.30078 l
6.41602 5.32617 l
2.19141 5.32617 l
2.19141 9.24023 l
1.02539 9.24023 l
h
9.24609 8.29102 m
9.46875 8.46680 9.73242 8.55469 10.0371 8.55469  c
10.4082 8.55469 10.7676 8.46875 11.1152 8.29688  c
11.7012 8.01172 11.9941 7.54492 11.9941 6.89648  c
11.9941 6.04688 l
11.8652 6.12891 11.6992 6.19727 11.4961 6.25195  c
11.2930 6.30664 11.0938 6.34570 10.8984 6.36914  c
10.2598 6.45117 l
9.87695 6.50195 9.58984 6.58203 9.39844 6.69141  c
9.07422 6.87500 8.91211 7.16797 8.91211 7.57031  c
8.91211 7.87500 9.02344 8.11523 9.24609 8.29102  c
h
11.4668 5.43750 m
11.7090 5.40625 11.8711 5.30469 11.9531 5.13281  c
12.0000 5.03906 12.0234 4.90430 12.0234 4.72852  c
12.0234 4.36914 11.8955 4.10840 11.6396 3.94629  c
11.3838 3.78418 11.0176 3.70312 10.5410 3.70312  c
9.99023 3.70312 9.59961 3.85156 9.36914 4.14844  c
9.24023 4.31250 9.15625 4.55664 9.11719 4.88086  c
8.13281 4.88086 l
8.15234 4.10742 8.40332 3.56934 8.88574 3.26660  c
9.36816 2.96387 9.92773 2.81250 10.5645 2.81250  c
11.3027 2.81250 11.9023 2.95312 12.3633 3.23438  c
12.8203 3.51562 13.0488 3.95312 13.0488 4.54688  c
13.0488 8.16211 l
13.0488 8.27148 13.0713 8.35938 13.1162 8.42578  c
13.1611 8.49219 13.2559 8.52539 13.4004 8.52539  c
13.4473 8.52539 13.5000 8.52246 13.5586 8.51660  c
13.6172 8.51074 13.6797 8.50195 13.7461 8.49023  c
13.7461 9.26953 l
13.5820 9.31641 13.4570 9.34570 13.3711 9.35742  c
13.2852 9.36914 13.1680 9.37500 13.0195 9.37500  c
12.6562 9.37500 12.3926 9.24609 12.2285 8.98828  c
12.1426 8.85156 12.0820 8.65820 12.0469 8.40820  c
11.8320 8.68945 11.5234 8.93359 11.1211 9.14062  c
10.7188 9.34766 10.2754 9.45117 9.79102 9.45117  c
9.20898 9.45117 8.73340 9.27441 8.36426 8.92090  c
7.99512 8.56738 7.81055 8.12500 7.81055 7.59375  c
7.81055 7.01172 7.99219 6.56055 8.35547 6.24023  c
8.71875 5.91992 9.19531 5.72266 9.78516 5.64844  c
h
14.7773 2.99414 m
15.8496 2.99414 l
15.8496 9.24023 l
14.7773 9.24023 l
h
14.7773 .632812 m
15.8496 .632812 l
15.8496 1.82812 l
14.7773 1.82812 l
h
17.4727 2.96484 m
18.4746 2.96484 l
18.4746 4.04883 l
18.5566 3.83789 18.7578 3.58105 19.0781 3.27832  c
19.3984 2.97559 19.7676 2.82422 20.1855 2.82422  c
20.2051 2.82422 20.2383 2.82617 20.2852 2.83008  c
20.3320 2.83398 20.4121 2.84180 20.5254 2.85352  c
20.5254 3.96680 l
20.4629 3.95508 20.4053 3.94727 20.3525 3.94336  c
20.2998 3.93945 20.2422 3.93750 20.1797 3.93750  c
19.6484 3.93750 19.2402 4.10840 18.9551 4.45020  c
18.6699 4.79199 18.5273 5.18555 18.5273 5.63086  c
18.5273 9.24023 l
17.4727 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 333.500 205.250 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 14.0000 ] concat
newpath
4.14844 4.27148 m
4.64062 4.27148 5.02344 4.20312 5.29688 4.06641  c
5.72656 3.85156 5.94141 3.46484 5.94141 2.90625  c
5.94141 2.34375 5.71289 1.96484 5.25586 1.76953  c
4.99805 1.66016 4.61523 1.60547 4.10742 1.60547  c
2.02734 1.60547 l
2.02734 4.27148 l
h
4.54102 8.24414 m
5.25586 8.24414 5.76562 8.03711 6.07031 7.62305  c
6.26172 7.36133 6.35742 7.04492 6.35742 6.67383  c
6.35742 6.04883 6.07812 5.62305 5.51953 5.39648  c
5.22266 5.27539 4.83008 5.21484 4.34180 5.21484  c
2.02734 5.21484 l
2.02734 8.24414 l
h
.884766 .632812 m
4.58203 .632812 l
5.58984 .632812 6.30664 .933594 6.73242 1.53516  c
6.98242 1.89062 7.10742 2.30078 7.10742 2.76562  c
7.10742 3.30859 6.95312 3.75391 6.64453 4.10156  c
6.48438 4.28516 6.25391 4.45312 5.95312 4.60547  c
6.39453 4.77344 6.72461 4.96289 6.94336 5.17383  c
7.33008 5.54883 7.52344 6.06641 7.52344 6.72656  c
7.52344 7.28125 7.34961 7.78320 7.00195 8.23242  c
6.48242 8.90430 5.65625 9.24023 4.52344 9.24023  c
.884766 9.24023 l
h
8.80664 2.96484 m
9.80859 2.96484 l
9.80859 4.04883 l
9.89062 3.83789 10.0918 3.58105 10.4121 3.27832  c
10.7324 2.97559 11.1016 2.82422 11.5195 2.82422  c
11.5391 2.82422 11.5723 2.82617 11.6191 2.83008  c
11.6660 2.83398 11.7461 2.84180 11.8594 2.85352  c
11.8594 3.96680 l
11.7969 3.95508 11.7393 3.94727 11.6865 3.94336  c
11.6338 3.93945 11.5762 3.93750 11.5137 3.93750  c
10.9824 3.93750 10.5742 4.10840 10.2891 4.45020  c
10.0039 4.79199 9.86133 5.18555 9.86133 5.63086  c
9.86133 9.24023 l
8.80664 9.24023 l
h
12.7734 2.99414 m
13.8457 2.99414 l
13.8457 9.24023 l
12.7734 9.24023 l
h
12.7734 .632812 m
13.8457 .632812 l
13.8457 1.82812 l
12.7734 1.82812 l
h
16.5352 7.86328 m
16.8203 8.31641 17.2773 8.54297 17.9062 8.54297  c
18.3945 8.54297 18.7959 8.33301 19.1104 7.91309  c
19.4248 7.49316 19.5820 6.89062 19.5820 6.10547  c
19.5820 5.31250 19.4199 4.72559 19.0957 4.34473  c
18.7715 3.96387 18.3711 3.77344 17.8945 3.77344  c
17.3633 3.77344 16.9326 3.97656 16.6025 4.38281  c
16.2725 4.78906 16.1074 5.38672 16.1074 6.17578  c
16.1074 6.84766 16.2500 7.41016 16.5352 7.86328  c
h
18.9023 3.15820 m
19.0898 3.27539 19.3027 3.48047 19.5410 3.77344  c
19.5410 .603516 l
20.5547 .603516 l
20.5547 9.24023 l
19.6055 9.24023 l
19.6055 8.36719 l
19.3594 8.75391 19.0684 9.03320 18.7324 9.20508  c
18.3965 9.37695 18.0117 9.46289 17.5781 9.46289  c
16.8789 9.46289 16.2734 9.16895 15.7617 8.58105  c
15.2500 7.99316 14.9941 7.21094 14.9941 6.23438  c
14.9941 5.32031 15.2275 4.52832 15.6943 3.85840  c
16.1611 3.18848 16.8281 2.85352 17.6953 2.85352  c
18.1758 2.85352 18.5781 2.95508 18.9023 3.15820  c
h
25.6172 3.21680 m
25.8164 3.35352 26.0195 3.55273 26.2266 3.81445  c
26.2266 3.02344 l
27.1992 3.02344 l
27.1992 8.73047 l
27.1992 9.52734 27.0820 10.1562 26.8477 10.6172  c
26.4102 11.4688 25.5840 11.8945 24.3691 11.8945  c
23.6934 11.8945 23.1250 11.7432 22.6641 11.4404  c
22.2031 11.1377 21.9453 10.6641 21.8906 10.0195  c
22.9629 10.0195 l
23.0137 10.3008 23.1152 10.5176 23.2676 10.6699  c
23.5059 10.9043 23.8809 11.0215 24.3926 11.0215  c
25.2012 11.0215 25.7305 10.7363 25.9805 10.1660  c
26.1289 9.83008 26.1973 9.23047 26.1855 8.36719  c
25.9746 8.68750 25.7207 8.92578 25.4238 9.08203  c
25.1270 9.23828 24.7344 9.31641 24.2461 9.31641  c
23.5664 9.31641 22.9717 9.07520 22.4619 8.59277  c
21.9521 8.11035 21.6973 7.31250 21.6973 6.19922  c
21.6973 5.14844 21.9541 4.32812 22.4678 3.73828  c
22.9814 3.14844 23.6016 2.85352 24.3281 2.85352  c
24.8203 2.85352 25.2500 2.97461 25.6172 3.21680  c
h
25.7461 4.34766 m
25.4258 3.97266 25.0176 3.78516 24.5215 3.78516  c
23.7793 3.78516 23.2715 4.13281 22.9980 4.82812  c
22.8535 5.19922 22.7812 5.68555 22.7812 6.28711  c
22.7812 6.99414 22.9248 7.53223 23.2119 7.90137  c
23.4990 8.27051 23.8848 8.45508 24.3691 8.45508  c
25.1270 8.45508 25.6602 8.11328 25.9688 7.42969  c
26.1406 7.04297 26.2266 6.59180 26.2266 6.07617  c
26.2266 5.29883 26.0664 4.72266 25.7461 4.34766  c
h
32.6953 3.13770 m
33.1133 3.34668 33.4316 3.61719 33.6504 3.94922  c
33.8613 4.26562 34.0020 4.63477 34.0723 5.05664  c
34.1348 5.34570 34.1660 5.80664 34.1660 6.43945  c
29.5664 6.43945 l
29.5859 7.07617 29.7363 7.58691 30.0176 7.97168  c
30.2988 8.35645 30.7344 8.54883 31.3242 8.54883  c
31.8750 8.54883 32.3145 8.36719 32.6426 8.00391  c
32.8301 7.79297 32.9629 7.54883 33.0410 7.27148  c
34.0781 7.27148 l
34.0508 7.50195 33.9600 7.75879 33.8057 8.04199  c
33.6514 8.32520 33.4785 8.55664 33.2871 8.73633  c
32.9668 9.04883 32.5703 9.25977 32.0977 9.36914  c
31.8438 9.43164 31.5566 9.46289 31.2363 9.46289  c
30.4551 9.46289 29.7930 9.17871 29.2500 8.61035  c
28.7070 8.04199 28.4355 7.24609 28.4355 6.22266  c
28.4355 5.21484 28.7090 4.39648 29.2559 3.76758  c
29.8027 3.13867 30.5176 2.82422 31.4004 2.82422  c
31.8457 2.82422 32.2773 2.92871 32.6953 3.13770  c
h
33.0820 5.60156 m
33.0391 5.14453 32.9395 4.77930 32.7832 4.50586  c
32.4941 3.99805 32.0117 3.74414 31.3359 3.74414  c
30.8516 3.74414 30.4453 3.91895 30.1172 4.26855  c
29.7891 4.61816 29.6152 5.06250 29.5957 5.60156  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 333.500 205.250 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
405.000 215.000 m
417.000 215.000 l
417.000 227.000 l
405.000 227.000 l
405.000 215.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
405.000 215.000 m
417.000 215.000 l
417.000 227.000 l
405.000 227.000 l
405.000 215.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
405.000 215.000 m
417.000 215.000 l
417.000 219.000 l
411.000 219.000 l
411.000 223.000 l
405.000 223.000 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
405.000 215.000 m
417.000 215.000 l
417.000 219.000 l
411.000 219.000 l
411.000 223.000 l
405.000 223.000 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
180.000 367.000 m
180.000 386.000 l
180.000 387.657 181.343 389.000 183.000 389.000  c
215.062 389.000 l
216.719 389.000 218.062 387.657 218.062 386.000  c
218.062 367.000 l
218.062 365.343 216.719 364.000 215.062 364.000  c
183.000 364.000 l
181.343 364.000 180.000 365.343 180.000 367.000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
180.000 367.000 m
180.000 386.000 l
180.000 387.657 181.343 389.000 183.000 389.000  c
215.062 389.000 l
216.719 389.000 218.062 387.657 218.062 386.000  c
218.062 367.000 l
218.062 365.343 216.719 364.000 215.062 364.000  c
183.000 364.000 l
181.343 364.000 180.000 365.343 180.000 367.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [180.0 364.0 180.0 389.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
183.000 370.000 m
183.000 385.500 l
183.000 387.157 184.343 388.500 186.000 388.500  c
214.562 388.500 l
216.219 388.500 217.562 387.157 217.562 385.500  c
217.562 370.000 l
217.562 368.343 216.219 367.000 214.562 367.000  c
186.000 367.000 l
184.343 367.000 183.000 368.343 183.000 370.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
180.000 382.000 m
180.000 436.000 l
180.000 437.657 181.343 439.000 183.000 439.000  c
264.000 439.000 l
265.657 439.000 267.000 437.657 267.000 436.000  c
267.000 382.000 l
267.000 380.343 265.657 379.000 264.000 379.000  c
183.000 379.000 l
181.343 379.000 180.000 380.343 180.000 382.000  c
h
f
.611765 .564706 .564706 RG
newpath
180.000 382.000 m
180.000 436.000 l
180.000 437.657 181.343 439.000 183.000 439.000  c
264.000 439.000 l
265.657 439.000 267.000 437.657 267.000 436.000  c
267.000 382.000 l
267.000 380.343 265.657 379.000 264.000 379.000  c
183.000 379.000 l
181.343 379.000 180.000 380.343 180.000 382.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [180.0 379.0 180.0 439.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
183.000 385.000 m
183.000 435.500 l
183.000 437.157 184.343 438.500 186.000 438.500  c
263.500 438.500 l
265.157 438.500 266.500 437.157 266.500 435.500  c
266.500 385.000 l
266.500 383.343 265.157 382.000 263.500 382.000  c
186.000 382.000 l
184.343 382.000 183.000 383.343 183.000 385.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 190.500 401.250 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.67578 6.46289 m
1.70312 6.95117 1.81836 7.34766 2.02148 7.65234  c
2.40820 8.22266 3.08984 8.50781 4.06641 8.50781  c
4.50391 8.50781 4.90234 8.44531 5.26172 8.32031  c
5.95703 8.07812 6.30469 7.64453 6.30469 7.01953  c
6.30469 6.55078 6.15820 6.21680 5.86523 6.01758  c
5.56836 5.82227 5.10352 5.65234 4.47070 5.50781  c
3.30469 5.24414 l
2.54297 5.07227 2.00391 4.88281 1.68750 4.67578  c
1.14062 4.31641 .867188 3.77930 .867188 3.06445  c
.867188 2.29102 1.13477 1.65625 1.66992 1.16016  c
2.20508 .664062 2.96289 .416016 3.94336 .416016  c
4.84570 .416016 5.61230 .633789 6.24316 1.06934  c
6.87402 1.50488 7.18945 2.20117 7.18945 3.15820  c
6.09375 3.15820 l
6.03516 2.69727 5.91016 2.34375 5.71875 2.09766  c
5.36328 1.64844 4.75977 1.42383 3.90820 1.42383  c
3.22070 1.42383 2.72656 1.56836 2.42578 1.85742  c
2.12500 2.14648 1.97461 2.48242 1.97461 2.86523  c
1.97461 3.28711 2.15039 3.59570 2.50195 3.79102  c
2.73242 3.91602 3.25391 4.07227 4.06641 4.25977  c
5.27344 4.53516 l
5.85547 4.66797 6.30469 4.84961 6.62109 5.08008  c
7.16797 5.48242 7.44141 6.06641 7.44141 6.83203  c
7.44141 7.78516 7.09473 8.46680 6.40137 8.87695  c
5.70801 9.28711 4.90234 9.49219 3.98438 9.49219  c
2.91406 9.49219 2.07617 9.21875 1.47070 8.67188  c
.865234 8.12891 .568359 7.39258 .580078 6.46289  c
h
8.77734 2.99414 m
9.84961 2.99414 l
9.84961 9.24023 l
8.77734 9.24023 l
h
8.77734 .632812 m
9.84961 .632812 l
9.84961 1.82812 l
8.77734 1.82812 l
h
11.4434 2.96484 m
12.4453 2.96484 l
12.4453 3.85547 l
12.7422 3.48828 13.0566 3.22461 13.3887 3.06445  c
13.7207 2.90430 14.0898 2.82422 14.4961 2.82422  c
15.3867 2.82422 15.9883 3.13477 16.3008 3.75586  c
16.4727 4.09570 16.5586 4.58203 16.5586 5.21484  c
16.5586 9.24023 l
15.4863 9.24023 l
15.4863 5.28516 l
15.4863 4.90234 15.4297 4.59375 15.3164 4.35938  c
15.1289 3.96875 14.7891 3.77344 14.2969 3.77344  c
14.0469 3.77344 13.8418 3.79883 13.6816 3.84961  c
13.3926 3.93555 13.1387 4.10742 12.9199 4.36523  c
12.7441 4.57227 12.6299 4.78613 12.5771 5.00684  c
12.5244 5.22754 12.4980 5.54297 12.4980 5.95312  c
12.4980 9.24023 l
11.4434 9.24023 l
h
21.6211 3.21680 m
21.8203 3.35352 22.0234 3.55273 22.2305 3.81445  c
22.2305 3.02344 l
23.2031 3.02344 l
23.2031 8.73047 l
23.2031 9.52734 23.0859 10.1562 22.8516 10.6172  c
22.4141 11.4688 21.5879 11.8945 20.3730 11.8945  c
19.6973 11.8945 19.1289 11.7432 18.6680 11.4404  c
18.2070 11.1377 17.9492 10.6641 17.8945 10.0195  c
18.9668 10.0195 l
19.0176 10.3008 19.1191 10.5176 19.2715 10.6699  c
19.5098 10.9043 19.8848 11.0215 20.3965 11.0215  c
21.2051 11.0215 21.7344 10.7363 21.9844 10.1660  c
22.1328 9.83008 22.2012 9.23047 22.1895 8.36719  c
21.9785 8.68750 21.7246 8.92578 21.4277 9.08203  c
21.1309 9.23828 20.7383 9.31641 20.2500 9.31641  c
19.5703 9.31641 18.9756 9.07520 18.4658 8.59277  c
17.9561 8.11035 17.7012 7.31250 17.7012 6.19922  c
17.7012 5.14844 17.9580 4.32812 18.4717 3.73828  c
18.9854 3.14844 19.6055 2.85352 20.3320 2.85352  c
20.8242 2.85352 21.2539 2.97461 21.6211 3.21680  c
h
21.7500 4.34766 m
21.4297 3.97266 21.0215 3.78516 20.5254 3.78516  c
19.7832 3.78516 19.2754 4.13281 19.0020 4.82812  c
18.8574 5.19922 18.7852 5.68555 18.7852 6.28711  c
18.7852 6.99414 18.9287 7.53223 19.2158 7.90137  c
19.5029 8.27051 19.8887 8.45508 20.3730 8.45508  c
21.1309 8.45508 21.6641 8.11328 21.9727 7.42969  c
22.1445 7.04297 22.2305 6.59180 22.2305 6.07617  c
22.2305 5.29883 22.0703 4.72266 21.7500 4.34766  c
h
24.8203 .632812 m
25.8750 .632812 l
25.8750 9.24023 l
24.8203 9.24023 l
h
31.3652 3.13770 m
31.7832 3.34668 32.1016 3.61719 32.3203 3.94922  c
32.5312 4.26562 32.6719 4.63477 32.7422 5.05664  c
32.8047 5.34570 32.8359 5.80664 32.8359 6.43945  c
28.2363 6.43945 l
28.2559 7.07617 28.4062 7.58691 28.6875 7.97168  c
28.9688 8.35645 29.4043 8.54883 29.9941 8.54883  c
30.5449 8.54883 30.9844 8.36719 31.3125 8.00391  c
31.5000 7.79297 31.6328 7.54883 31.7109 7.27148  c
32.7480 7.27148 l
32.7207 7.50195 32.6299 7.75879 32.4756 8.04199  c
32.3213 8.32520 32.1484 8.55664 31.9570 8.73633  c
31.6367 9.04883 31.2402 9.25977 30.7676 9.36914  c
30.5137 9.43164 30.2266 9.46289 29.9062 9.46289  c
29.1250 9.46289 28.4629 9.17871 27.9199 8.61035  c
27.3770 8.04199 27.1055 7.24609 27.1055 6.22266  c
27.1055 5.21484 27.3789 4.39648 27.9258 3.76758  c
28.4727 3.13867 29.1875 2.82422 30.0703 2.82422  c
30.5156 2.82422 30.9473 2.92871 31.3652 3.13770  c
h
31.7520 5.60156 m
31.7090 5.14453 31.6094 4.77930 31.4531 4.50586  c
31.1641 3.99805 30.6816 3.74414 30.0059 3.74414  c
29.5215 3.74414 29.1152 3.91895 28.7871 4.26855  c
28.4590 4.61816 28.2852 5.06250 28.2656 5.60156  c
h
37.6055 .632812 m
38.7715 .632812 l
38.7715 8.21484 l
43.1309 8.21484 l
43.1309 9.24023 l
37.6055 9.24023 l
h
45.2812 8.29102 m
45.5039 8.46680 45.7676 8.55469 46.0723 8.55469  c
46.4434 8.55469 46.8027 8.46875 47.1504 8.29688  c
47.7363 8.01172 48.0293 7.54492 48.0293 6.89648  c
48.0293 6.04688 l
47.9004 6.12891 47.7344 6.19727 47.5312 6.25195  c
47.3281 6.30664 47.1289 6.34570 46.9336 6.36914  c
46.2949 6.45117 l
45.9121 6.50195 45.6250 6.58203 45.4336 6.69141  c
45.1094 6.87500 44.9473 7.16797 44.9473 7.57031  c
44.9473 7.87500 45.0586 8.11523 45.2812 8.29102  c
h
47.5020 5.43750 m
47.7441 5.40625 47.9062 5.30469 47.9883 5.13281  c
48.0352 5.03906 48.0586 4.90430 48.0586 4.72852  c
48.0586 4.36914 47.9307 4.10840 47.6748 3.94629  c
47.4189 3.78418 47.0527 3.70312 46.5762 3.70312  c
46.0254 3.70312 45.6348 3.85156 45.4043 4.14844  c
45.2754 4.31250 45.1914 4.55664 45.1523 4.88086  c
44.1680 4.88086 l
44.1875 4.10742 44.4385 3.56934 44.9209 3.26660  c
45.4033 2.96387 45.9629 2.81250 46.5996 2.81250  c
47.3379 2.81250 47.9375 2.95312 48.3984 3.23438  c
48.8555 3.51562 49.0840 3.95312 49.0840 4.54688  c
49.0840 8.16211 l
49.0840 8.27148 49.1064 8.35938 49.1514 8.42578  c
49.1963 8.49219 49.2910 8.52539 49.4355 8.52539  c
49.4824 8.52539 49.5352 8.52246 49.5938 8.51660  c
49.6523 8.51074 49.7148 8.50195 49.7812 8.49023  c
49.7812 9.26953 l
49.6172 9.31641 49.4922 9.34570 49.4062 9.35742  c
49.3203 9.36914 49.2031 9.37500 49.0547 9.37500  c
48.6914 9.37500 48.4277 9.24609 48.2637 8.98828  c
48.1777 8.85156 48.1172 8.65820 48.0820 8.40820  c
47.8672 8.68945 47.5586 8.93359 47.1562 9.14062  c
46.7539 9.34766 46.3105 9.45117 45.8262 9.45117  c
45.2441 9.45117 44.7686 9.27441 44.3994 8.92090  c
44.0303 8.56738 43.8457 8.12500 43.8457 7.59375  c
43.8457 7.01172 44.0273 6.56055 44.3906 6.24023  c
44.7539 5.91992 45.2305 5.72266 45.8203 5.64844  c
h
50.8125 2.96484 m
51.8145 2.96484 l
51.8145 3.85547 l
52.1113 3.48828 52.4258 3.22461 52.7578 3.06445  c
53.0898 2.90430 53.4590 2.82422 53.8652 2.82422  c
54.7559 2.82422 55.3574 3.13477 55.6699 3.75586  c
55.8418 4.09570 55.9277 4.58203 55.9277 5.21484  c
55.9277 9.24023 l
54.8555 9.24023 l
54.8555 5.28516 l
54.8555 4.90234 54.7988 4.59375 54.6855 4.35938  c
54.4980 3.96875 54.1582 3.77344 53.6660 3.77344  c
53.4160 3.77344 53.2109 3.79883 53.0508 3.84961  c
52.7617 3.93555 52.5078 4.10742 52.2891 4.36523  c
52.1133 4.57227 51.9990 4.78613 51.9463 5.00684  c
51.8936 5.22754 51.8672 5.54297 51.8672 5.95312  c
51.8672 9.24023 l
50.8125 9.24023 l
h
61.3945 3.13770 m
61.8125 3.34668 62.1309 3.61719 62.3496 3.94922  c
62.5605 4.26562 62.7012 4.63477 62.7715 5.05664  c
62.8340 5.34570 62.8652 5.80664 62.8652 6.43945  c
58.2656 6.43945 l
58.2852 7.07617 58.4355 7.58691 58.7168 7.97168  c
58.9980 8.35645 59.4336 8.54883 60.0234 8.54883  c
60.5742 8.54883 61.0137 8.36719 61.3418 8.00391  c
61.5293 7.79297 61.6621 7.54883 61.7402 7.27148  c
62.7773 7.27148 l
62.7500 7.50195 62.6592 7.75879 62.5049 8.04199  c
62.3506 8.32520 62.1777 8.55664 61.9863 8.73633  c
61.6660 9.04883 61.2695 9.25977 60.7969 9.36914  c
60.5430 9.43164 60.2559 9.46289 59.9355 9.46289  c
59.1543 9.46289 58.4922 9.17871 57.9492 8.61035  c
57.4062 8.04199 57.1348 7.24609 57.1348 6.22266  c
57.1348 5.21484 57.4082 4.39648 57.9551 3.76758  c
58.5020 3.13867 59.2168 2.82422 60.0996 2.82422  c
60.5449 2.82422 60.9766 2.92871 61.3945 3.13770  c
h
61.7812 5.60156 m
61.7383 5.14453 61.6387 4.77930 61.4824 4.50586  c
61.1934 3.99805 60.7109 3.74414 60.0352 3.74414  c
59.5508 3.74414 59.1445 3.91895 58.8164 4.26855  c
58.4883 4.61816 58.3145 5.06250 58.2949 5.60156  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 162.500 373.250 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 15.0000 14.0000 ] concat
newpath
4.14844 4.27148 m
4.64062 4.27148 5.02344 4.20312 5.29688 4.06641  c
5.72656 3.85156 5.94141 3.46484 5.94141 2.90625  c
5.94141 2.34375 5.71289 1.96484 5.25586 1.76953  c
4.99805 1.66016 4.61523 1.60547 4.10742 1.60547  c
2.02734 1.60547 l
2.02734 4.27148 l
h
4.54102 8.24414 m
5.25586 8.24414 5.76562 8.03711 6.07031 7.62305  c
6.26172 7.36133 6.35742 7.04492 6.35742 6.67383  c
6.35742 6.04883 6.07812 5.62305 5.51953 5.39648  c
5.22266 5.27539 4.83008 5.21484 4.34180 5.21484  c
2.02734 5.21484 l
2.02734 8.24414 l
h
.884766 .632812 m
4.58203 .632812 l
5.58984 .632812 6.30664 .933594 6.73242 1.53516  c
6.98242 1.89062 7.10742 2.30078 7.10742 2.76562  c
7.10742 3.30859 6.95312 3.75391 6.64453 4.10156  c
6.48438 4.28516 6.25391 4.45312 5.95312 4.60547  c
6.39453 4.77344 6.72461 4.96289 6.94336 5.17383  c
7.33008 5.54883 7.52344 6.06641 7.52344 6.72656  c
7.52344 7.28125 7.34961 7.78320 7.00195 8.23242  c
6.48242 8.90430 5.65625 9.24023 4.52344 9.24023  c
.884766 9.24023 l
h
8.80664 2.96484 m
9.80859 2.96484 l
9.80859 4.04883 l
9.89062 3.83789 10.0918 3.58105 10.4121 3.27832  c
10.7324 2.97559 11.1016 2.82422 11.5195 2.82422  c
11.5391 2.82422 11.5723 2.82617 11.6191 2.83008  c
11.6660 2.83398 11.7461 2.84180 11.8594 2.85352  c
11.8594 3.96680 l
11.7969 3.95508 11.7393 3.94727 11.6865 3.94336  c
11.6338 3.93945 11.5762 3.93750 11.5137 3.93750  c
10.9824 3.93750 10.5742 4.10840 10.2891 4.45020  c
10.0039 4.79199 9.86133 5.18555 9.86133 5.63086  c
9.86133 9.24023 l
8.80664 9.24023 l
h
12.7734 2.99414 m
13.8457 2.99414 l
13.8457 9.24023 l
12.7734 9.24023 l
h
12.7734 .632812 m
13.8457 .632812 l
13.8457 1.82812 l
12.7734 1.82812 l
h
16.5352 7.86328 m
16.8203 8.31641 17.2773 8.54297 17.9062 8.54297  c
18.3945 8.54297 18.7959 8.33301 19.1104 7.91309  c
19.4248 7.49316 19.5820 6.89062 19.5820 6.10547  c
19.5820 5.31250 19.4199 4.72559 19.0957 4.34473  c
18.7715 3.96387 18.3711 3.77344 17.8945 3.77344  c
17.3633 3.77344 16.9326 3.97656 16.6025 4.38281  c
16.2725 4.78906 16.1074 5.38672 16.1074 6.17578  c
16.1074 6.84766 16.2500 7.41016 16.5352 7.86328  c
h
18.9023 3.15820 m
19.0898 3.27539 19.3027 3.48047 19.5410 3.77344  c
19.5410 .603516 l
20.5547 .603516 l
20.5547 9.24023 l
19.6055 9.24023 l
19.6055 8.36719 l
19.3594 8.75391 19.0684 9.03320 18.7324 9.20508  c
18.3965 9.37695 18.0117 9.46289 17.5781 9.46289  c
16.8789 9.46289 16.2734 9.16895 15.7617 8.58105  c
15.2500 7.99316 14.9941 7.21094 14.9941 6.23438  c
14.9941 5.32031 15.2275 4.52832 15.6943 3.85840  c
16.1611 3.18848 16.8281 2.85352 17.6953 2.85352  c
18.1758 2.85352 18.5781 2.95508 18.9023 3.15820  c
h
25.6172 3.21680 m
25.8164 3.35352 26.0195 3.55273 26.2266 3.81445  c
26.2266 3.02344 l
27.1992 3.02344 l
27.1992 8.73047 l
27.1992 9.52734 27.0820 10.1562 26.8477 10.6172  c
26.4102 11.4688 25.5840 11.8945 24.3691 11.8945  c
23.6934 11.8945 23.1250 11.7432 22.6641 11.4404  c
22.2031 11.1377 21.9453 10.6641 21.8906 10.0195  c
22.9629 10.0195 l
23.0137 10.3008 23.1152 10.5176 23.2676 10.6699  c
23.5059 10.9043 23.8809 11.0215 24.3926 11.0215  c
25.2012 11.0215 25.7305 10.7363 25.9805 10.1660  c
26.1289 9.83008 26.1973 9.23047 26.1855 8.36719  c
25.9746 8.68750 25.7207 8.92578 25.4238 9.08203  c
25.1270 9.23828 24.7344 9.31641 24.2461 9.31641  c
23.5664 9.31641 22.9717 9.07520 22.4619 8.59277  c
21.9521 8.11035 21.6973 7.31250 21.6973 6.19922  c
21.6973 5.14844 21.9541 4.32812 22.4678 3.73828  c
22.9814 3.14844 23.6016 2.85352 24.3281 2.85352  c
24.8203 2.85352 25.2500 2.97461 25.6172 3.21680  c
h
25.7461 4.34766 m
25.4258 3.97266 25.0176 3.78516 24.5215 3.78516  c
23.7793 3.78516 23.2715 4.13281 22.9980 4.82812  c
22.8535 5.19922 22.7812 5.68555 22.7812 6.28711  c
22.7812 6.99414 22.9248 7.53223 23.2119 7.90137  c
23.4990 8.27051 23.8848 8.45508 24.3691 8.45508  c
25.1270 8.45508 25.6602 8.11328 25.9688 7.42969  c
26.1406 7.04297 26.2266 6.59180 26.2266 6.07617  c
26.2266 5.29883 26.0664 4.72266 25.7461 4.34766  c
h
32.6953 3.13770 m
33.1133 3.34668 33.4316 3.61719 33.6504 3.94922  c
33.8613 4.26562 34.0020 4.63477 34.0723 5.05664  c
34.1348 5.34570 34.1660 5.80664 34.1660 6.43945  c
29.5664 6.43945 l
29.5859 7.07617 29.7363 7.58691 30.0176 7.97168  c
30.2988 8.35645 30.7344 8.54883 31.3242 8.54883  c
31.8750 8.54883 32.3145 8.36719 32.6426 8.00391  c
32.8301 7.79297 32.9629 7.54883 33.0410 7.27148  c
34.0781 7.27148 l
34.0508 7.50195 33.9600 7.75879 33.8057 8.04199  c
33.6514 8.32520 33.4785 8.55664 33.2871 8.73633  c
32.9668 9.04883 32.5703 9.25977 32.0977 9.36914  c
31.8438 9.43164 31.5566 9.46289 31.2363 9.46289  c
30.4551 9.46289 29.7930 9.17871 29.2500 8.61035  c
28.7070 8.04199 28.4355 7.24609 28.4355 6.22266  c
28.4355 5.21484 28.7090 4.39648 29.2559 3.76758  c
29.8027 3.13867 30.5176 2.82422 31.4004 2.82422  c
31.8457 2.82422 32.2773 2.92871 32.6953 3.13770  c
h
33.0820 5.60156 m
33.0391 5.14453 32.9395 4.77930 32.7832 4.50586  c
32.4941 3.99805 32.0117 3.74414 31.3359 3.74414  c
30.8516 3.74414 30.4453 3.91895 30.1172 4.26855  c
29.7891 4.61816 29.6152 5.06250 29.5957 5.60156  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 162.500 373.250 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
249.000 383.000 m
261.000 383.000 l
261.000 395.000 l
249.000 395.000 l
249.000 383.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
249.000 383.000 m
261.000 383.000 l
261.000 395.000 l
249.000 395.000 l
249.000 383.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
249.000 383.000 m
261.000 383.000 l
261.000 387.000 l
255.000 387.000 l
255.000 391.000 l
249.000 391.000 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
249.000 383.000 m
261.000 383.000 l
261.000 387.000 l
255.000 387.000 l
255.000 391.000 l
249.000 391.000 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
32.0000 199.000 m
32.0000 218.000 l
32.0000 219.657 33.3431 221.000 35.0000 221.000  c
67.0625 221.000 l
68.7194 221.000 70.0625 219.657 70.0625 218.000  c
70.0625 199.000 l
70.0625 197.343 68.7194 196.000 67.0625 196.000  c
35.0000 196.000 l
33.3431 196.000 32.0000 197.343 32.0000 199.000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
32.0000 199.000 m
32.0000 218.000 l
32.0000 219.657 33.3431 221.000 35.0000 221.000  c
67.0625 221.000 l
68.7194 221.000 70.0625 219.657 70.0625 218.000  c
70.0625 199.000 l
70.0625 197.343 68.7194 196.000 67.0625 196.000  c
35.0000 196.000 l
33.3431 196.000 32.0000 197.343 32.0000 199.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 196.0 32.0 221.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
35.0000 202.000 m
35.0000 217.500 l
35.0000 219.157 36.3431 220.500 38.0000 220.500  c
66.5625 220.500 l
68.2194 220.500 69.5625 219.157 69.5625 217.500  c
69.5625 202.000 l
69.5625 200.343 68.2194 199.000 66.5625 199.000  c
38.0000 199.000 l
36.3431 199.000 35.0000 200.343 35.0000 202.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
32.0000 214.000 m
32.0000 268.000 l
32.0000 269.657 33.3431 271.000 35.0000 271.000  c
116.000 271.000 l
117.657 271.000 119.000 269.657 119.000 268.000  c
119.000 214.000 l
119.000 212.343 117.657 211.000 116.000 211.000  c
35.0000 211.000 l
33.3431 211.000 32.0000 212.343 32.0000 214.000  c
h
f
.611765 .564706 .564706 RG
newpath
32.0000 214.000 m
32.0000 268.000 l
32.0000 269.657 33.3431 271.000 35.0000 271.000  c
116.000 271.000 l
117.657 271.000 119.000 269.657 119.000 268.000  c
119.000 214.000 l
119.000 212.343 117.657 211.000 116.000 211.000  c
35.0000 211.000 l
33.3431 211.000 32.0000 212.343 32.0000 214.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 211.0 32.0 271.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
35.0000 217.000 m
35.0000 267.500 l
35.0000 269.157 36.3431 270.500 38.0000 270.500  c
115.500 270.500 l
117.157 270.500 118.500 269.157 118.500 267.500  c
118.500 217.000 l
118.500 215.343 117.157 214.000 115.500 214.000  c
38.0000 214.000 l
36.3431 214.000 35.0000 215.343 35.0000 217.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 51.0000 233.250 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.884766 .632812 m
2.55469 .632812 l
5.02734 7.91016 l
7.48242 .632812 l
9.13477 .632812 l
9.13477 9.24023 l
8.02734 9.24023 l
8.02734 4.16016 l
8.02734 3.98438 8.03125 3.69336 8.03906 3.28711  c
8.04688 2.88086 8.05078 2.44531 8.05078 1.98047  c
5.59570 9.24023 l
4.44141 9.24023 l
1.96875 1.98047 l
1.96875 2.24414 l
1.96875 2.45508 1.97363 2.77637 1.98340 3.20801  c
1.99316 3.63965 1.99805 3.95703 1.99805 4.16016  c
1.99805 9.24023 l
.884766 9.24023 l
h
11.8242 2.96484 m
11.8242 7.13086 l
11.8242 7.45117 11.8750 7.71289 11.9766 7.91602  c
12.1641 8.29102 12.5137 8.47852 13.0254 8.47852  c
13.7598 8.47852 14.2598 8.15039 14.5254 7.49414  c
14.6699 7.14258 14.7422 6.66016 14.7422 6.04688  c
14.7422 2.96484 l
15.7969 2.96484 l
15.7969 9.24023 l
14.8008 9.24023 l
14.8125 8.31445 l
14.6758 8.55273 14.5059 8.75391 14.3027 8.91797  c
13.9004 9.24609 13.4121 9.41016 12.8379 9.41016  c
11.9434 9.41016 11.3340 9.11133 11.0098 8.51367  c
10.8340 8.19336 10.7461 7.76562 10.7461 7.23047  c
10.7461 2.96484 l
h
17.4727 .632812 m
18.5273 .632812 l
18.5273 9.24023 l
17.4727 9.24023 l
h
20.3203 1.21289 m
21.3867 1.21289 l
21.3867 2.96484 l
22.3887 2.96484 l
22.3887 3.82617 l
21.3867 3.82617 l
21.3867 7.92188 l
21.3867 8.14062 21.4609 8.28711 21.6094 8.36133  c
21.6914 8.40430 21.8281 8.42578 22.0195 8.42578  c
22.0703 8.42578 22.1250 8.42480 22.1836 8.42285  c
22.2422 8.42090 22.3105 8.41602 22.3887 8.40820  c
22.3887 9.24023 l
22.2676 9.27539 22.1416 9.30078 22.0107 9.31641  c
21.8799 9.33203 21.7383 9.33984 21.5859 9.33984  c
21.0938 9.33984 20.7598 9.21387 20.5840 8.96191  c
20.4082 8.70996 20.3203 8.38281 20.3203 7.98047  c
20.3203 3.82617 l
19.4707 3.82617 l
19.4707 2.96484 l
20.3203 2.96484 l
h
23.4434 2.99414 m
24.5156 2.99414 l
24.5156 9.24023 l
23.4434 9.24023 l
h
23.4434 .632812 m
24.5156 .632812 l
24.5156 1.82812 l
23.4434 1.82812 l
h
35.7480 1.25977 m
36.3496 1.83398 36.6836 2.48633 36.7500 3.21680  c
35.6133 3.21680 l
35.4844 2.66211 35.2275 2.22266 34.8428 1.89844  c
34.4580 1.57422 33.9180 1.41211 33.2227 1.41211  c
32.3750 1.41211 31.6904 1.70996 31.1689 2.30566  c
30.6475 2.90137 30.3867 3.81445 30.3867 5.04492  c
30.3867 6.05273 30.6221 6.87012 31.0928 7.49707  c
31.5635 8.12402 32.2656 8.43750 33.1992 8.43750  c
34.0586 8.43750 34.7129 8.10742 35.1621 7.44727  c
35.4004 7.09961 35.5781 6.64258 35.6953 6.07617  c
36.8320 6.07617 l
36.7305 6.98242 36.3945 7.74219 35.8242 8.35547  c
35.1406 9.09375 34.2188 9.46289 33.0586 9.46289  c
32.0586 9.46289 31.2188 9.16016 30.5391 8.55469  c
29.6445 7.75391 29.1973 6.51758 29.1973 4.84570  c
29.1973 3.57617 29.5332 2.53516 30.2051 1.72266  c
30.9316 .839844 31.9336 .398438 33.2109 .398438  c
34.3008 .398438 35.1465 .685547 35.7480 1.25977  c
h
39.2520 8.29102 m
39.4746 8.46680 39.7383 8.55469 40.0430 8.55469  c
40.4141 8.55469 40.7734 8.46875 41.1211 8.29688  c
41.7070 8.01172 42.0000 7.54492 42.0000 6.89648  c
42.0000 6.04688 l
41.8711 6.12891 41.7051 6.19727 41.5020 6.25195  c
41.2988 6.30664 41.0996 6.34570 40.9043 6.36914  c
40.2656 6.45117 l
39.8828 6.50195 39.5957 6.58203 39.4043 6.69141  c
39.0801 6.87500 38.9180 7.16797 38.9180 7.57031  c
38.9180 7.87500 39.0293 8.11523 39.2520 8.29102  c
h
41.4727 5.43750 m
41.7148 5.40625 41.8770 5.30469 41.9590 5.13281  c
42.0059 5.03906 42.0293 4.90430 42.0293 4.72852  c
42.0293 4.36914 41.9014 4.10840 41.6455 3.94629  c
41.3896 3.78418 41.0234 3.70312 40.5469 3.70312  c
39.9961 3.70312 39.6055 3.85156 39.3750 4.14844  c
39.2461 4.31250 39.1621 4.55664 39.1230 4.88086  c
38.1387 4.88086 l
38.1582 4.10742 38.4092 3.56934 38.8916 3.26660  c
39.3740 2.96387 39.9336 2.81250 40.5703 2.81250  c
41.3086 2.81250 41.9082 2.95312 42.3691 3.23438  c
42.8262 3.51562 43.0547 3.95312 43.0547 4.54688  c
43.0547 8.16211 l
43.0547 8.27148 43.0771 8.35938 43.1221 8.42578  c
43.1670 8.49219 43.2617 8.52539 43.4062 8.52539  c
43.4531 8.52539 43.5059 8.52246 43.5645 8.51660  c
43.6230 8.51074 43.6855 8.50195 43.7520 8.49023  c
43.7520 9.26953 l
43.5879 9.31641 43.4629 9.34570 43.3770 9.35742  c
43.2910 9.36914 43.1738 9.37500 43.0254 9.37500  c
42.6621 9.37500 42.3984 9.24609 42.2344 8.98828  c
42.1484 8.85156 42.0879 8.65820 42.0527 8.40820  c
41.8379 8.68945 41.5293 8.93359 41.1270 9.14062  c
40.7246 9.34766 40.2812 9.45117 39.7969 9.45117  c
39.2148 9.45117 38.7393 9.27441 38.3701 8.92090  c
38.0010 8.56738 37.8164 8.12500 37.8164 7.59375  c
37.8164 7.01172 37.9980 6.56055 38.3613 6.24023  c
38.7246 5.91992 39.2012 5.72266 39.7910 5.64844  c
h
44.8125 2.96484 m
45.8145 2.96484 l
45.8145 4.04883 l
45.8965 3.83789 46.0977 3.58105 46.4180 3.27832  c
46.7383 2.97559 47.1074 2.82422 47.5254 2.82422  c
47.5449 2.82422 47.5781 2.82617 47.6250 2.83008  c
47.6719 2.83398 47.7520 2.84180 47.8652 2.85352  c
47.8652 3.96680 l
47.8027 3.95508 47.7451 3.94727 47.6924 3.94336  c
47.6396 3.93945 47.5820 3.93750 47.5195 3.93750  c
46.9883 3.93750 46.5801 4.10840 46.2949 4.45020  c
46.0098 4.79199 45.8672 5.18555 45.8672 5.63086  c
45.8672 9.24023 l
44.8125 9.24023 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 23.0000 205.250 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 6.50000 14.0000 ] concat
newpath
4.14844 4.27148 m
4.64062 4.27148 5.02344 4.20312 5.29688 4.06641  c
5.72656 3.85156 5.94141 3.46484 5.94141 2.90625  c
5.94141 2.34375 5.71289 1.96484 5.25586 1.76953  c
4.99805 1.66016 4.61523 1.60547 4.10742 1.60547  c
2.02734 1.60547 l
2.02734 4.27148 l
h
4.54102 8.24414 m
5.25586 8.24414 5.76562 8.03711 6.07031 7.62305  c
6.26172 7.36133 6.35742 7.04492 6.35742 6.67383  c
6.35742 6.04883 6.07812 5.62305 5.51953 5.39648  c
5.22266 5.27539 4.83008 5.21484 4.34180 5.21484  c
2.02734 5.21484 l
2.02734 8.24414 l
h
.884766 .632812 m
4.58203 .632812 l
5.58984 .632812 6.30664 .933594 6.73242 1.53516  c
6.98242 1.89062 7.10742 2.30078 7.10742 2.76562  c
7.10742 3.30859 6.95312 3.75391 6.64453 4.10156  c
6.48438 4.28516 6.25391 4.45312 5.95312 4.60547  c
6.39453 4.77344 6.72461 4.96289 6.94336 5.17383  c
7.33008 5.54883 7.52344 6.06641 7.52344 6.72656  c
7.52344 7.28125 7.34961 7.78320 7.00195 8.23242  c
6.48242 8.90430 5.65625 9.24023 4.52344 9.24023  c
.884766 9.24023 l
h
8.80664 2.96484 m
9.80859 2.96484 l
9.80859 4.04883 l
9.89062 3.83789 10.0918 3.58105 10.4121 3.27832  c
10.7324 2.97559 11.1016 2.82422 11.5195 2.82422  c
11.5391 2.82422 11.5723 2.82617 11.6191 2.83008  c
11.6660 2.83398 11.7461 2.84180 11.8594 2.85352  c
11.8594 3.96680 l
11.7969 3.95508 11.7393 3.94727 11.6865 3.94336  c
11.6338 3.93945 11.5762 3.93750 11.5137 3.93750  c
10.9824 3.93750 10.5742 4.10840 10.2891 4.45020  c
10.0039 4.79199 9.86133 5.18555 9.86133 5.63086  c
9.86133 9.24023 l
8.80664 9.24023 l
h
12.7734 2.99414 m
13.8457 2.99414 l
13.8457 9.24023 l
12.7734 9.24023 l
h
12.7734 .632812 m
13.8457 .632812 l
13.8457 1.82812 l
12.7734 1.82812 l
h
16.5352 7.86328 m
16.8203 8.31641 17.2773 8.54297 17.9062 8.54297  c
18.3945 8.54297 18.7959 8.33301 19.1104 7.91309  c
19.4248 7.49316 19.5820 6.89062 19.5820 6.10547  c
19.5820 5.31250 19.4199 4.72559 19.0957 4.34473  c
18.7715 3.96387 18.3711 3.77344 17.8945 3.77344  c
17.3633 3.77344 16.9326 3.97656 16.6025 4.38281  c
16.2725 4.78906 16.1074 5.38672 16.1074 6.17578  c
16.1074 6.84766 16.2500 7.41016 16.5352 7.86328  c
h
18.9023 3.15820 m
19.0898 3.27539 19.3027 3.48047 19.5410 3.77344  c
19.5410 .603516 l
20.5547 .603516 l
20.5547 9.24023 l
19.6055 9.24023 l
19.6055 8.36719 l
19.3594 8.75391 19.0684 9.03320 18.7324 9.20508  c
18.3965 9.37695 18.0117 9.46289 17.5781 9.46289  c
16.8789 9.46289 16.2734 9.16895 15.7617 8.58105  c
15.2500 7.99316 14.9941 7.21094 14.9941 6.23438  c
14.9941 5.32031 15.2275 4.52832 15.6943 3.85840  c
16.1611 3.18848 16.8281 2.85352 17.6953 2.85352  c
18.1758 2.85352 18.5781 2.95508 18.9023 3.15820  c
h
25.6172 3.21680 m
25.8164 3.35352 26.0195 3.55273 26.2266 3.81445  c
26.2266 3.02344 l
27.1992 3.02344 l
27.1992 8.73047 l
27.1992 9.52734 27.0820 10.1562 26.8477 10.6172  c
26.4102 11.4688 25.5840 11.8945 24.3691 11.8945  c
23.6934 11.8945 23.1250 11.7432 22.6641 11.4404  c
22.2031 11.1377 21.9453 10.6641 21.8906 10.0195  c
22.9629 10.0195 l
23.0137 10.3008 23.1152 10.5176 23.2676 10.6699  c
23.5059 10.9043 23.8809 11.0215 24.3926 11.0215  c
25.2012 11.0215 25.7305 10.7363 25.9805 10.1660  c
26.1289 9.83008 26.1973 9.23047 26.1855 8.36719  c
25.9746 8.68750 25.7207 8.92578 25.4238 9.08203  c
25.1270 9.23828 24.7344 9.31641 24.2461 9.31641  c
23.5664 9.31641 22.9717 9.07520 22.4619 8.59277  c
21.9521 8.11035 21.6973 7.31250 21.6973 6.19922  c
21.6973 5.14844 21.9541 4.32812 22.4678 3.73828  c
22.9814 3.14844 23.6016 2.85352 24.3281 2.85352  c
24.8203 2.85352 25.2500 2.97461 25.6172 3.21680  c
h
25.7461 4.34766 m
25.4258 3.97266 25.0176 3.78516 24.5215 3.78516  c
23.7793 3.78516 23.2715 4.13281 22.9980 4.82812  c
22.8535 5.19922 22.7812 5.68555 22.7812 6.28711  c
22.7812 6.99414 22.9248 7.53223 23.2119 7.90137  c
23.4990 8.27051 23.8848 8.45508 24.3691 8.45508  c
25.1270 8.45508 25.6602 8.11328 25.9688 7.42969  c
26.1406 7.04297 26.2266 6.59180 26.2266 6.07617  c
26.2266 5.29883 26.0664 4.72266 25.7461 4.34766  c
h
32.6953 3.13770 m
33.1133 3.34668 33.4316 3.61719 33.6504 3.94922  c
33.8613 4.26562 34.0020 4.63477 34.0723 5.05664  c
34.1348 5.34570 34.1660 5.80664 34.1660 6.43945  c
29.5664 6.43945 l
29.5859 7.07617 29.7363 7.58691 30.0176 7.97168  c
30.2988 8.35645 30.7344 8.54883 31.3242 8.54883  c
31.8750 8.54883 32.3145 8.36719 32.6426 8.00391  c
32.8301 7.79297 32.9629 7.54883 33.0410 7.27148  c
34.0781 7.27148 l
34.0508 7.50195 33.9600 7.75879 33.8057 8.04199  c
33.6514 8.32520 33.4785 8.55664 33.2871 8.73633  c
32.9668 9.04883 32.5703 9.25977 32.0977 9.36914  c
31.8438 9.43164 31.5566 9.46289 31.2363 9.46289  c
30.4551 9.46289 29.7930 9.17871 29.2500 8.61035  c
28.7070 8.04199 28.4355 7.24609 28.4355 6.22266  c
28.4355 5.21484 28.7090 4.39648 29.2559 3.76758  c
29.8027 3.13867 30.5176 2.82422 31.4004 2.82422  c
31.8457 2.82422 32.2773 2.92871 32.6953 3.13770  c
h
33.0820 5.60156 m
33.0391 5.14453 32.9395 4.77930 32.7832 4.50586  c
32.4941 3.99805 32.0117 3.74414 31.3359 3.74414  c
30.8516 3.74414 30.4453 3.91895 30.1172 4.26855  c
29.7891 4.61816 29.6152 5.06250 29.5957 5.60156  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 23.0000 205.250 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
101.000 215.000 m
113.000 215.000 l
113.000 227.000 l
101.000 227.000 l
101.000 215.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
101.000 215.000 m
113.000 215.000 l
113.000 227.000 l
101.000 227.000 l
101.000 215.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
101.000 215.000 m
113.000 215.000 l
113.000 219.000 l
107.000 219.000 l
107.000 223.000 l
101.000 223.000 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
101.000 215.000 m
113.000 215.000 l
113.000 219.000 l
107.000 219.000 l
107.000 223.000 l
101.000 223.000 l
h
S
0.00000 0.00000 0.00000 RG
0 j
2 J
2 j
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
343.670 272.086 m
258.323 363.998 l
S
[ .732793 .680451 -.680451 .732793 316.709 -78.5133 ] concat
.700000 w
[ ] 0.00000 d
newpath
258.323 363.998 m
253.323 351.998 l
258.323 363.998 l
263.323 351.998 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
109.492 272.086 m
190.486 364.025 l
S
[ .750359 -.661031 .661031 .750359 -193.078 216.793 ] concat
.700000 w
[ ] 0.00000 d
newpath
190.486 364.025 m
185.486 352.025 l
190.486 364.025 l
195.486 352.025 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
188.718 108.042 m
109.290 196.056 l
S
[ .742393 .669965 -.669965 .742393 159.505 -22.7152 ] concat
.700000 w
[ ] 0.00000 d
newpath
109.290 196.056 m
104.290 184.056 l
109.290 196.056 l
114.290 184.056 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
260.131 108.010 m
343.889 196.063 l
S
[ .724558 -.689214 .689214 .724558 -40.4076 291.017 ] concat
.700000 w
[ ] 0.00000 d
newpath
343.889 196.063 m
338.889 184.063 l
343.889 196.063 l
348.889 184.063 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 440.000 l
424.000 440.000 l
424.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 440.000 l
424.000 440.000 l
424.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
