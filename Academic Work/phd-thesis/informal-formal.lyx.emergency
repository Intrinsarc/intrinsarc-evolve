#LyX 1.6.2 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass report
\begin_preamble
\include{thesis.preamble}
\bibliographystyle{alpha}
\usepackage[left=2cm,right=2cm,top=2cm,bottom=3cm]{geometry}
\end_preamble
\use_default_options false
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize 11
\spacing onehalf
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Chapter
\begin_inset CommandInset label
LatexCommand label
name "app:Backbone-Informal"

\end_inset

Properties and Rules of the Backbone Specification
\end_layout

\begin_layout Standard
This appendix augments the outline of the formal specification presented
 in chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Backbone-specification"

\end_inset

, and explains some of the logic from appendices 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Backbone-formal-base"

\end_inset

 and 
\begin_inset CommandInset ref
LatexCommand ref
reference "app:Backbone-formal-component"

\end_inset

 in more detail.
\end_layout

\begin_layout Standard
We start by describing the logic contained within the 
\family typewriter
Deltas
\family default
 signature.
 The port type inference logic is also explained, and some interesting test
 cases are examined.
 The formal model is then used to generate an extension conflict and its
 subsequent resolution, and the result is imported into Backbone for visualisati
on.
\end_layout

\begin_layout Standard
Following this, some properties of the specification are listed thathighlight
 noteworthy or unusual characteristics of the model.
 Finally, the set of rules which govern the correct structure of an architecture
 are presented.
 A subset of these are known as well-formedness rules: they are structural
 validations that can be violated when combining extensions.
 Any issues must be addressed by a further extension in order to produce
 a structurally correct architecture.
\end_layout

\begin_layout Section
The Deltas Logic in Detail
\end_layout

\begin_layout Standard
The 
\family typewriter
Deltas
\family default
 signature is specified by 160 lines of Alloy code in the file 
\family typewriter
bb_deltas.als
\family default
 in appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "cha:Backbone-formal-base"

\end_inset

.This section explains the logic in more detail.
\end_layout

\begin_layout Standard
As described in section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Delta-formal"

\end_inset

, an element is composed of constituents.
 A constituent can be added, deleted or replaced in an element by using
 a delta alteration.
 Each 
\family typewriter
Deltas
\family default
 instance holds a number of these alterations for a single constituent type.
\end_layout

\begin_layout Standard
Alterations in a 
\family typewriter
Deltas
\family default
 instance are held in the 
\family typewriter
addObjects
\family default
, 
\family typewriter
deleteObjects
\family default
 and 
\family typewriter
replaceObjects
\family default
 fields as shown in the listing below.
 These inputs correspond to the alterations that a developer makes when
 adjusting the inherited structure of a component or interface.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-deltainputs.tex"

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
newIDs
\family default
 field holds any new UUIDs which have been allocated for added or replacing
 constituents.
 These identifiers are forced to be globally unique.
 Further, any new objects from adds or replaces are owned by a single 
\family typewriter
Delta
\family default
 instance and cannot be shared.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-uniqueids.tex"

\end_inset


\end_layout

\begin_layout Standard
A 
\family typewriter
Deltas
\family default
 instance cannot delete any object that it is also replacing.
 A constituent that is being deleted must be present lower down in the resemblan
ce graph, when looking from the element's home perspective.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-wellformeddeltas.tex"

\end_inset


\end_layout

\begin_layout Subsection
Merging and Applying Changes
\end_layout

\begin_layout Standard
The core logic for Deltas is contained in two predicates.
 The aim of these predicates is to apply the delta alterations of an element,
 from a given stratum perspective, in order to construct the fully expanded
 form of the element.
 For a perspective, we then have a mapping of 
\family typewriter
ID
\family default
 to constituent (
\family typewriter
Object
\family default
) for the given stratum.
 This is held in the 
\family typewriter
objects_e
\family default
 field, and represents the final output of the delta application logic.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-fieldobjects_e.tex"

\end_inset


\end_layout

\begin_layout Standard
The predicates are described below.
\end_layout

\begin_layout Subsubsection
Applying Changes for Resemblance: 
\family typewriter
mergeAndApplyChangesForResemblance
\end_layout

\begin_layout Standard
This predicate uses the expanded resemblance graph for a given perspective
 to apply the deltas and form the expanded constituents.
 Replacing components are treated as part of this graph, as per 
\family typewriter
B'
\family default
 in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-expanded-resemblance"

\end_inset

.
\end_layout

\begin_layout Standard
The parameters to the predicate are listed below.
 The 
\family typewriter
s
\family default
 parameter is the stratum perspective, 
\family typewriter
c
\family default
 is the element we are expanding and 
\family typewriter
iResembleDeltas_e
\family default
 contains the deltas from the elements under this one in the expanded element
 graph.
 For the last parameter, if we were expanding 
\family typewriter
A
\family default
 in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:The-expanded-resemblance"

\end_inset

, the value would be the deltas for both 
\family typewriter
extension1::B'
\family default
 and 
\family typewriter
extension2::B'
\family default
.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-mergeresemblance.tex"

\end_inset


\end_layout

\begin_layout Standard
We cannot use the 
\family typewriter
objects_e
\family default
 field to store the results of this predicate, as that field is used when
 we copy the expanded results from evolutions back into the base element.
 As such, the following fields are used to hold these interim results.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-originals.tex"

\end_inset


\end_layout

\begin_layout Standard
The 
\family typewriter
originalDeletedObjects_e
\family default
 field holds all of the constituents that have been deleted for the expanded
 graph so far.
 It is necessary to keep track of all deleted and replaced objects and reapply
 them to handle the situation where the resemblance graph merges a parallel
 delete and replace of the same constituent.
 This is the case for 
\family typewriter
A
\family default
 and 
\family typewriter
part1
\family default
 in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Deltas-must-be"

\end_inset

.
\end_layout

\begin_layout Standard
The 
\family typewriter
originalObjects_e
\family default
 field holds the expanded constituents for the stratum perspective.
 It coalesces the original objects from elements it resembles in the expanded
 graph, removes any deleted constituents and then performs the adds and
 replaces that it holds locally.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-originalobjects_e.tex"

\end_inset


\end_layout

\begin_layout Subsubsection
Applying Changes for Replacement: 
\family typewriter
mergeAndApplyChangesForElementReplacement
\end_layout

\begin_layout Standard
This predicate copies over the expanded constituents from replacements into
 the original base component.
 This removes the need to redirect existing references from the base to
 an evolution or replacement, as explained at the end of section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Delta-formal"

\end_inset

.
\end_layout

\begin_layout Standard
The key expression is listed below.
 This first part of the expression copies over the objects from the (possible)
 evolutions.
 The second part applies the deletes and replaces to again ensure that a
 parallel replace is favoured over a parallel delete.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-objects_e.tex"

\end_inset


\end_layout

\begin_layout Subsection
Structural Conflict at the Deltas Level
\end_layout

\begin_layout Standard
Structural conflict at the 
\family typewriter
Deltas
\family default
 level occurs when there is more than one constituent for a given 
\family typewriter
ID
\family default
 after the deltas have been fully applied.
 Lack of conflict is checked by the following predicate.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-oneconstituent.tex"

\end_inset


\end_layout

\begin_layout Standard
This error occurs when independently developed extensions both replace the
 same constituent of an element.
\end_layout

\begin_layout Section
Port Type Inference
\end_layout

\begin_layout Standard
Port type inference is able to automatically determine the interfaces provided
 and required by a port of a composite component.
 This is done by following the connectors between parts in a hierarchical
 context.
 This is specified in file 
\family typewriter
bb_port_interface.als
\family default
 in appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "app:Backbone-formal-component"

\end_inset

.
\end_layout

\begin_layout Standard
This facility is important for extensibility in a hierarchical component
 model, as it removes the need for respecifying all the ports of the composites
 when a leaf is evolved.
 Without this, a single evolution deep in the base of the compositional
 hierarchy could cause a cascade of many other evolutions all the way up
 to the top of the compositional tree.
\end_layout

\begin_layout Subsection
Link Propagation up the Compositional Hierarchy
\end_layout

\begin_layout Standard
A component determines the relationships between its ports using its connectors
 and any connectors or links between the ports of its parts.
\end_layout

\begin_layout Standard
This, in theory, involves traversing all possible links and connectors in
 the entire hierarchy when we get to the topmost compositional level.
 To simplify this, each component instead summarises the relationships between
 its ports and stores this in the 
\family typewriter
inferredLinks
\family default
 field.
 This field can then be used by the next level up in the compositional hierarchy.
 As per the Backbone approach, this field needs to be determined for each
 component from each relevant stratum perspective, as it can change as extension
s are applied.
\end_layout

\begin_layout Standard
The predicate for determining the inferred links for a composite is 
\family typewriter
setupLinks
\family default
, which takes the following parameters.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-setuplinks.tex"

\end_inset


\end_layout

\begin_layout Standard
This contains logic to follow the connectors of the composite, possibly
 through parts using the inferred links of each parts type.
\end_layout

\begin_layout Subsection
Two Interesting Test Cases
\end_layout

\begin_layout Standard
We now present two of the more interesting test cases used to evaluate the
 inference logic.
\end_layout

\begin_layout Standard
The first involves component 
\family typewriter
Case1
\family default
, shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Internal-provisions-can"

\end_inset

, where an internal part constrains the propagation of a subinterface.
 Interface C resembles interface B which resembles interface A.
 The 
\family typewriter
BProv
\family default
 part provides interface 
\family typewriter
B
\family default
.
 The component 
\family typewriter
AThrough
\family default
 requires 
\family typewriter
A
\family default
 via the 
\family typewriter
lt
\family default
 port and provides A via the 
\family typewriter
rt
\family default
 port.
 
\family typewriter
A
\family default
 has a port link between the two ports.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename generated-figures/inference-case1.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Internal-provisions-can"

\end_inset

Internal provisions can constrain port type propagation
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
In this case, the inference logic has determined that port 
\family typewriter
right
\family default
 of Case1 can only provide interface 
\family typewriter
A
\family default
 despite the BProv part providing 
\family typewriter
B
\family default
.
 This is because the 
\family typewriter
left
\family default
 port could legally be connected to a port with a provided 
\family typewriter
A
\family default
 interface, and we can only propagate the highest superinterface provided
 which is 
\family typewriter
A
\family default
.
\end_layout

\begin_layout Standard
If a part of 
\family typewriter
Case1
\family default
 was to configured so that 
\family typewriter
left
\family default
 was connected to something providing interface 
\family typewriter
B
\family default
, then this would propagate through to 
\family typewriter
right
\family default
.
 However, if something provided interface 
\family typewriter
C
\family default
 to 
\family typewriter
left
\family default
, then only interface 
\family typewriter
B
\family default
 would propagate through as 
\family typewriter
BProv
\family default
's provided interface constrains this to be the highest superinterface provided,
 which is 
\family typewriter
B
\family default
.
\end_layout

\begin_layout Standard
The second test case looks at how required interfaces affect type propagation.
 Consider the composite component 
\family typewriter
Case2
\family default
 in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Internal-parts-can"

\end_inset

, where the two parts require interfaces which are not subtypes of each
 other.
 In this example, interfaces 
\family typewriter
X
\family default
 and 
\family typewriter
Y
\family default
 both resemble 
\family typewriter
Z
\family default
 and interface 
\family typewriter
Q
\family default
 resembles both X and Y.
 Component 
\family typewriter
ZThrough
\family default
 requires 
\family typewriter
Z
\family default
 through the 
\family typewriter
lt
\family default
 port and requires 
\family typewriter
Z
\family default
 through the 
\family typewriter
rt
\family default
 port.
 There is a port link between the two ports of 
\family typewriter
ZThrough
\family default
.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename generated-figures/inference-case2.eps
	scale 80

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Internal-parts-can"

\end_inset

Internal parts can result in the requirement of common subinterface
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
As we can see, the inference logic has determined that 
\family typewriter
port
\family default
 of 
\family typewriter
Case2
\family default
 requires interface 
\family typewriter
Q
\family default
.
 This is because 
\family typewriter
Q
\family default
 is the only interface that can satisfy both ports of the parts.
 If there was no interface that resembled X and Y, then the inference logic
 would determine that the port was in error.
 If multiple interfaces resembled 
\family typewriter
X
\family default
 and 
\family typewriter
Y
\family default
 then an error would also result, unless there was a single highest supertype
 of all candidates that also resembled 
\family typewriter
X
\family default
 and 
\family typewriter
Y
\family default
.
\end_layout

\begin_layout Section
Generating Conflict and Resolution from the Specification
\end_layout

\begin_layout Standard
We can use the formal specification and the Alloy analyser to generate an
 example showing conflict from combining independently developed extensions
 and subsequent resolution in a further extension.
\end_layout

\begin_layout Standard
This scenario can be generated by the following Alloy expression.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "snippets/snip-conflictandresolution.tex"

\end_inset


\end_layout

\begin_layout Standard
The use of the 
\family typewriter
exactly
\family default
 keyword limits the state space for checking, allowing a witness to be found
 more quickly.
 The 
\family typewriter
'some isInvalid_e'
\family default
 statement will force a conflict.
 As each stratum has to be well-formed, this can only occur by combining
 two stratum that are mutually independent.
 Further, to get conflict, these must replace or evolve an element in a
 common base strata.
\end_layout

\begin_layout Standard
Backbone allows the witnesses from the formal specification to be imported.
 An example witness generated by the above is shown in figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:A-witness-showing"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\noindent
\align center
\begin_inset Graphics
	filename generated-figures/witness-conflict-resolution.eps
	scale 70

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:A-witness-showing"

\end_inset

A witness showing conflict and subsequent resolution
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
The source of the conflict is that 
\family typewriter
Component1
\family default
 and 
\family typewriter
Component2
\family default
 both replace the same part (
\family typewriter
PartID0
\family default
) in separate evolutions of 
\family typewriter
Component4
\family default
.
 The conflict is resolved by a further evolution in 
\family typewriter
Stratum4
\family default
 which replaces 
\family typewriter
PartID0
\family default
 again.
\end_layout

\begin_layout Standard
As the state space is
\end_layout

\begin_layout Section
Properties of the Specification
\end_layout

\begin_layout Section
Structural Rules of the Specification
\end_layout

\end_body
\end_document
