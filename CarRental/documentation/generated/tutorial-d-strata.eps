%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 61 193 534 598
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 15 September 2010 00:16:47 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
472 404 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
472.000 0.00000 l
472.000 404.000 l
0.00000 404.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 496 428 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 498.000 430.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 500.000 432.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
212.000 243.000 m
212.000 262.000 l
212.000 263.657 213.343 265.000 215.000 265.000  c
247.062 265.000 l
248.719 265.000 250.062 263.657 250.062 262.000  c
250.062 243.000 l
250.062 241.343 248.719 240.000 247.062 240.000  c
215.000 240.000 l
213.343 240.000 212.000 241.343 212.000 243.000  c
h
f
0 J
2 j
.611765 .564706 .564706 RG
newpath
212.000 243.000 m
212.000 262.000 l
212.000 263.657 213.343 265.000 215.000 265.000  c
247.062 265.000 l
248.719 265.000 250.062 263.657 250.062 262.000  c
250.062 243.000 l
250.062 241.343 248.719 240.000 247.062 240.000  c
215.000 240.000 l
213.343 240.000 212.000 241.343 212.000 243.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [212.0 240.0 212.0 265.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
215.000 246.000 m
215.000 261.500 l
215.000 263.157 216.343 264.500 218.000 264.500  c
246.562 264.500 l
248.219 264.500 249.562 263.157 249.562 261.500  c
249.562 246.000 l
249.562 244.343 248.219 243.000 246.562 243.000  c
218.000 243.000 l
216.343 243.000 215.000 244.343 215.000 246.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
212.000 258.000 m
212.000 312.000 l
212.000 313.657 213.343 315.000 215.000 315.000  c
296.000 315.000 l
297.657 315.000 299.000 313.657 299.000 312.000  c
299.000 258.000 l
299.000 256.343 297.657 255.000 296.000 255.000  c
215.000 255.000 l
213.343 255.000 212.000 256.343 212.000 258.000  c
h
f
.611765 .564706 .564706 RG
newpath
212.000 258.000 m
212.000 312.000 l
212.000 313.657 213.343 315.000 215.000 315.000  c
296.000 315.000 l
297.657 315.000 299.000 313.657 299.000 312.000  c
299.000 258.000 l
299.000 256.343 297.657 255.000 296.000 255.000  c
215.000 255.000 l
213.343 255.000 212.000 256.343 212.000 258.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [212.0 255.0 212.0 315.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
215.000 261.000 m
215.000 311.500 l
215.000 313.157 216.343 314.500 218.000 314.500  c
295.500 314.500 l
297.157 314.500 298.500 313.157 298.500 311.500  c
298.500 261.000 l
298.500 259.343 297.157 258.000 295.500 258.000  c
218.000 258.000 l
216.343 258.000 215.000 259.343 215.000 261.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 228.500 276.867 ] concat
[ 1.00000 0.00000 0.00000 1.00000 7.50000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.375000 10.2051 m
1.40625 10.0488 l
1.46875 10.4655 1.63281 10.7832 1.89844 11.0020  c
2.16406 11.2207 2.54167 11.3301 3.03125 11.3301  c
3.51042 11.3301 3.86719 11.2337 4.10156 11.0410  c
4.33594 10.8483 4.45312 10.6165 4.45312 10.3457  c
4.45312 10.1061 4.34896 9.91862 4.14062 9.78320  c
3.99479 9.68945 3.63542 9.56966 3.06250 9.42383  c
2.29167 9.22591 1.75781 9.05664 1.46094 8.91602  c
1.16406 8.77539 .937500 8.58008 .781250 8.33008  c
.625000 8.08008 .546875 7.79883 .546875 7.48633  c
.546875 7.21549 .609375 6.96029 .734375 6.72070  c
.859375 6.48112 1.03125 6.28320 1.25000 6.12695  c
1.41667 6.01237 1.64062 5.91341 1.92188 5.83008  c
2.20312 5.74674 2.51042 5.70508 2.84375 5.70508  c
3.32292 5.70508 3.74740 5.77539 4.11719 5.91602  c
4.48698 6.05664 4.76042 6.24674 4.93750 6.48633  c
5.11458 6.72591 5.23438 7.04362 5.29688 7.43945  c
4.26562 7.58008 l
4.22396 7.26758 4.09115 7.02018 3.86719 6.83789  c
3.64323 6.65560 3.32292 6.56445 2.90625 6.56445  c
2.42708 6.56445 2.08333 6.64518 1.87500 6.80664  c
1.66667 6.96810 1.56250 7.15820 1.56250 7.37695  c
1.56250 7.51237 1.60417 7.63216 1.68750 7.73633  c
1.78125 7.85091 1.91667 7.94466 2.09375 8.01758  c
2.19792 8.05924 2.51042 8.14779 3.03125 8.28320  c
3.78125 8.49154 4.30208 8.65820 4.59375 8.78320  c
4.88542 8.90820 5.11458 9.09049 5.28125 9.33008  c
5.44792 9.56966 5.53125 9.87174 5.53125 10.2363  c
5.53125 10.5905 5.42969 10.9212 5.22656 11.2285  c
5.02344 11.5358 4.72917 11.7754 4.34375 11.9473  c
3.95833 12.1191 3.52083 12.2051 3.03125 12.2051  c
2.21875 12.2051 1.60156 12.0358 1.17969 11.6973  c
.757812 11.3587 .489583 10.8613 .375000 10.2051  c
h
11.0469 10.0645 m
12.1406 10.1895 l
11.9740 10.8249 11.6562 11.3197 11.1875 11.6738  c
10.7188 12.0280 10.1250 12.2051 9.40625 12.2051  c
8.50000 12.2051 7.77865 11.9238 7.24219 11.3613  c
6.70573 10.7988 6.43750 10.0124 6.43750 9.00195  c
6.43750 7.96029 6.70833 7.15039 7.25000 6.57227  c
7.79167 5.99414 8.48958 5.70508 9.34375 5.70508  c
10.1771 5.70508 10.8568 5.98633 11.3828 6.54883  c
11.9089 7.11133 12.1719 7.90820 12.1719 8.93945  c
12.1719 9.00195 12.1719 9.09570 12.1719 9.22070  c
7.53125 9.22070 l
7.57292 9.90820 7.76562 10.4316 8.10938 10.7910  c
8.45312 11.1504 8.88542 11.3301 9.40625 11.3301  c
9.79167 11.3301 10.1224 11.2285 10.3984 11.0254  c
10.6745 10.8223 10.8906 10.5020 11.0469 10.0645  c
h
7.59375 8.36133 m
11.0625 8.36133 l
11.0208 7.83008 10.8906 7.43424 10.6719 7.17383  c
10.3281 6.76758 9.89062 6.56445 9.35938 6.56445  c
8.86979 6.56445 8.46094 6.72591 8.13281 7.04883  c
7.80469 7.37174 7.62500 7.80924 7.59375 8.36133  c
h
13.4551 12.0645 m
13.4551 5.84570 l
14.4082 5.84570 l
14.4082 6.78320 l
14.6478 6.34570 14.8691 6.05664 15.0723 5.91602  c
15.2754 5.77539 15.5020 5.70508 15.7520 5.70508  c
16.1061 5.70508 16.4655 5.81445 16.8301 6.03320  c
16.4707 7.01758 l
16.2103 6.86133 15.9551 6.78320 15.7051 6.78320  c
15.4655 6.78320 15.2546 6.85352 15.0723 6.99414  c
14.8900 7.13477 14.7624 7.33008 14.6895 7.58008  c
14.5645 7.95508 14.5020 8.36133 14.5020 8.79883  c
14.5020 12.0645 l
13.4551 12.0645 l
h
19.1855 12.0645 m
16.8262 5.84570 l
17.9355 5.84570 l
19.2793 9.56445 l
19.4147 9.97070 19.5449 10.3874 19.6699 10.8145  c
19.7637 10.4915 19.8939 10.1009 20.0605 9.64258  c
21.4512 5.84570 l
22.5293 5.84570 l
20.1699 12.0645 l
19.1855 12.0645 l
h
23.4668 4.68945 m
23.4668 3.47070 l
24.5293 3.47070 l
24.5293 4.68945 l
23.4668 4.68945 l
h
23.4668 12.0645 m
23.4668 5.84570 l
24.5293 5.84570 l
24.5293 12.0645 l
23.4668 12.0645 l
h
30.1953 9.78320 m
31.2266 9.92383 l
31.1120 10.6322 30.8203 11.1895 30.3516 11.5957  c
29.8828 12.0020 29.3099 12.2051 28.6328 12.2051  c
27.7786 12.2051 27.0938 11.9264 26.5781 11.3691  c
26.0625 10.8118 25.8047 10.0124 25.8047 8.97070  c
25.8047 8.30404 25.9167 7.71810 26.1406 7.21289  c
26.3646 6.70768 26.7031 6.33008 27.1562 6.08008  c
27.6094 5.83008 28.1068 5.70508 28.6484 5.70508  c
29.3151 5.70508 29.8646 5.87435 30.2969 6.21289  c
30.7292 6.55143 31.0078 7.03841 31.1328 7.67383  c
30.1016 7.83008 l
30.0078 7.41341 29.8359 7.09831 29.5859 6.88477  c
29.3359 6.67122 29.0339 6.56445 28.6797 6.56445  c
28.1484 6.56445 27.7161 6.75456 27.3828 7.13477  c
27.0495 7.51497 26.8828 8.11654 26.8828 8.93945  c
26.8828 9.78320 27.0443 10.3926 27.3672 10.7676  c
27.6901 11.1426 28.1068 11.3301 28.6172 11.3301  c
29.0339 11.3301 29.3802 11.2051 29.6562 10.9551  c
29.9323 10.7051 30.1120 10.3145 30.1953 9.78320  c
h
36.3828 10.0645 m
37.4766 10.1895 l
37.3099 10.8249 36.9922 11.3197 36.5234 11.6738  c
36.0547 12.0280 35.4609 12.2051 34.7422 12.2051  c
33.8359 12.2051 33.1146 11.9238 32.5781 11.3613  c
32.0417 10.7988 31.7734 10.0124 31.7734 9.00195  c
31.7734 7.96029 32.0443 7.15039 32.5859 6.57227  c
33.1276 5.99414 33.8255 5.70508 34.6797 5.70508  c
35.5130 5.70508 36.1927 5.98633 36.7188 6.54883  c
37.2448 7.11133 37.5078 7.90820 37.5078 8.93945  c
37.5078 9.00195 37.5078 9.09570 37.5078 9.22070  c
32.8672 9.22070 l
32.9089 9.90820 33.1016 10.4316 33.4453 10.7910  c
33.7891 11.1504 34.2214 11.3301 34.7422 11.3301  c
35.1276 11.3301 35.4583 11.2285 35.7344 11.0254  c
36.0104 10.8223 36.2266 10.5020 36.3828 10.0645  c
h
32.9297 8.36133 m
36.3984 8.36133 l
36.3568 7.83008 36.2266 7.43424 36.0078 7.17383  c
35.6641 6.76758 35.2266 6.56445 34.6953 6.56445  c
34.2057 6.56445 33.7969 6.72591 33.4688 7.04883  c
33.1406 7.37174 32.9609 7.80924 32.9297 8.36133  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 200.500 248.867 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 0.00000 16.0000 ] concat
newpath
.796875 4.68945 m
.796875 3.47070 l
1.85938 3.47070 l
1.85938 4.68945 l
.796875 4.68945 l
h
.796875 12.0645 m
.796875 5.84570 l
1.85938 5.84570 l
1.85938 12.0645 l
.796875 12.0645 l
h
3.46289 12.0645 m
3.46289 5.84570 l
4.40039 5.84570 l
4.40039 6.72070 l
4.85872 6.04362 5.52018 5.70508 6.38477 5.70508  c
6.75977 5.70508 7.10612 5.77279 7.42383 5.90820  c
7.74154 6.04362 7.97852 6.22070 8.13477 6.43945  c
8.29102 6.65820 8.40039 6.91341 8.46289 7.20508  c
8.49414 7.40299 8.50977 7.74674 8.50977 8.23633  c
8.50977 12.0645 l
7.46289 12.0645 l
7.46289 8.28320 l
7.46289 7.84570 7.42122 7.52279 7.33789 7.31445  c
7.25456 7.10612 7.10872 6.93685 6.90039 6.80664  c
6.69206 6.67643 6.44727 6.61133 6.16602 6.61133  c
5.71810 6.61133 5.33008 6.75456 5.00195 7.04102  c
4.67383 7.32747 4.50977 7.86654 4.50977 8.65820  c
4.50977 12.0645 l
3.46289 12.0645 l
h
12.4336 11.1270 m
12.5898 12.0488 l
12.2878 12.1113 12.0221 12.1426 11.7930 12.1426  c
11.4076 12.1426 11.1107 12.0827 10.9023 11.9629  c
10.6940 11.8431 10.5456 11.6842 10.4570 11.4863  c
10.3685 11.2884 10.3242 10.8717 10.3242 10.2363  c
10.3242 6.65820 l
9.55859 6.65820 l
9.55859 5.84570 l
10.3242 5.84570 l
10.3242 4.29883 l
11.3711 3.67383 l
11.3711 5.84570 l
12.4336 5.84570 l
12.4336 6.65820 l
11.3711 6.65820 l
11.3711 10.2988 l
11.3711 10.6009 11.3893 10.7936 11.4258 10.8770  c
11.4622 10.9603 11.5221 11.0280 11.6055 11.0801  c
11.6888 11.1322 11.8086 11.1582 11.9648 11.1582  c
12.0898 11.1582 12.2461 11.1478 12.4336 11.1270  c
h
17.7207 10.0645 m
18.8145 10.1895 l
18.6478 10.8249 18.3301 11.3197 17.8613 11.6738  c
17.3926 12.0280 16.7988 12.2051 16.0801 12.2051  c
15.1738 12.2051 14.4525 11.9238 13.9160 11.3613  c
13.3796 10.7988 13.1113 10.0124 13.1113 9.00195  c
13.1113 7.96029 13.3822 7.15039 13.9238 6.57227  c
14.4655 5.99414 15.1634 5.70508 16.0176 5.70508  c
16.8509 5.70508 17.5306 5.98633 18.0566 6.54883  c
18.5827 7.11133 18.8457 7.90820 18.8457 8.93945  c
18.8457 9.00195 18.8457 9.09570 18.8457 9.22070  c
14.2051 9.22070 l
14.2467 9.90820 14.4395 10.4316 14.7832 10.7910  c
15.1270 11.1504 15.5592 11.3301 16.0801 11.3301  c
16.4655 11.3301 16.7962 11.2285 17.0723 11.0254  c
17.3483 10.8223 17.5645 10.5020 17.7207 10.0645  c
h
14.2676 8.36133 m
17.7363 8.36133 l
17.6947 7.83008 17.5645 7.43424 17.3457 7.17383  c
17.0020 6.76758 16.5645 6.56445 16.0332 6.56445  c
15.5436 6.56445 15.1348 6.72591 14.8066 7.04883  c
14.4785 7.37174 14.2988 7.80924 14.2676 8.36133  c
h
20.1289 12.0645 m
20.1289 5.84570 l
21.0820 5.84570 l
21.0820 6.78320 l
21.3216 6.34570 21.5430 6.05664 21.7461 5.91602  c
21.9492 5.77539 22.1758 5.70508 22.4258 5.70508  c
22.7799 5.70508 23.1393 5.81445 23.5039 6.03320  c
23.1445 7.01758 l
22.8841 6.86133 22.6289 6.78320 22.3789 6.78320  c
22.1393 6.78320 21.9284 6.85352 21.7461 6.99414  c
21.5638 7.13477 21.4362 7.33008 21.3633 7.58008  c
21.2383 7.95508 21.1758 8.36133 21.1758 8.79883  c
21.1758 12.0645 l
20.1289 12.0645 l
h
24.3906 12.0645 m
24.3906 6.65820 l
23.4531 6.65820 l
23.4531 5.84570 l
24.3906 5.84570 l
24.3906 5.17383 l
24.3906 4.75716 24.4271 4.44987 24.5000 4.25195  c
24.6042 3.97070 24.7839 3.74674 25.0391 3.58008  c
25.2943 3.41341 25.6510 3.33008 26.1094 3.33008  c
26.4115 3.33008 26.7396 3.36654 27.0938 3.43945  c
26.9375 4.34570 l
26.7188 4.31445 26.5104 4.29883 26.3125 4.29883  c
25.9896 4.29883 25.7630 4.36654 25.6328 4.50195  c
25.5026 4.63737 25.4375 4.89258 25.4375 5.26758  c
25.4375 5.84570 l
26.6562 5.84570 l
26.6562 6.65820 l
25.4375 6.65820 l
25.4375 12.0645 l
24.3906 12.0645 l
h
31.5371 11.2988 m
31.1413 11.6322 30.7637 11.8665 30.4043 12.0020  c
30.0449 12.1374 29.6569 12.2051 29.2402 12.2051  c
28.5527 12.2051 28.0267 12.0384 27.6621 11.7051  c
27.2975 11.3717 27.1152 10.9447 27.1152 10.4238  c
27.1152 10.1217 27.1829 9.84310 27.3184 9.58789  c
27.4538 9.33268 27.6361 9.12956 27.8652 8.97852  c
28.0944 8.82747 28.3496 8.71549 28.6309 8.64258  c
28.8288 8.58008 29.1413 8.52279 29.5684 8.47070  c
30.4121 8.37695 31.0371 8.25716 31.4434 8.11133  c
31.4434 7.96549 31.4434 7.87695 31.4434 7.84570  c
31.4434 7.40820 31.3444 7.10091 31.1465 6.92383  c
30.8757 6.69466 30.4746 6.58008 29.9434 6.58008  c
29.4538 6.58008 29.0892 6.66602 28.8496 6.83789  c
28.6100 7.00977 28.4329 7.31445 28.3184 7.75195  c
27.2871 7.61133 l
27.3809 7.17383 27.5371 6.81966 27.7559 6.54883  c
27.9746 6.27799 28.2871 6.06966 28.6934 5.92383  c
29.0996 5.77799 29.5684 5.70508 30.0996 5.70508  c
30.6309 5.70508 31.0632 5.76758 31.3965 5.89258  c
31.7298 6.01758 31.9746 6.17383 32.1309 6.36133  c
32.2871 6.54883 32.3965 6.78841 32.4590 7.08008  c
32.4902 7.25716 32.5059 7.58008 32.5059 8.04883  c
32.5059 9.45508 l
32.5059 10.4342 32.5293 11.0540 32.5762 11.3145  c
32.6230 11.5749 32.7142 11.8249 32.8496 12.0645  c
31.7402 12.0645 l
31.6361 11.8457 31.5684 11.5905 31.5371 11.2988  c
h
31.4434 8.93945 m
31.0579 9.09570 30.4850 9.23112 29.7246 9.34570  c
29.2871 9.40820 28.9798 9.47852 28.8027 9.55664  c
28.6257 9.63477 28.4876 9.74674 28.3887 9.89258  c
28.2897 10.0384 28.2402 10.2051 28.2402 10.3926  c
28.2402 10.6738 28.3470 10.9082 28.5605 11.0957  c
28.7741 11.2832 29.0840 11.3770 29.4902 11.3770  c
29.8965 11.3770 30.2585 11.2884 30.5762 11.1113  c
30.8939 10.9342 31.1257 10.6895 31.2715 10.3770  c
31.3861 10.1374 31.4434 9.78841 31.4434 9.33008  c
31.4434 8.93945 l
h
38.2109 9.78320 m
39.2422 9.92383 l
39.1276 10.6322 38.8359 11.1895 38.3672 11.5957  c
37.8984 12.0020 37.3255 12.2051 36.6484 12.2051  c
35.7943 12.2051 35.1094 11.9264 34.5938 11.3691  c
34.0781 10.8118 33.8203 10.0124 33.8203 8.97070  c
33.8203 8.30404 33.9323 7.71810 34.1562 7.21289  c
34.3802 6.70768 34.7188 6.33008 35.1719 6.08008  c
35.6250 5.83008 36.1224 5.70508 36.6641 5.70508  c
37.3307 5.70508 37.8802 5.87435 38.3125 6.21289  c
38.7448 6.55143 39.0234 7.03841 39.1484 7.67383  c
38.1172 7.83008 l
38.0234 7.41341 37.8516 7.09831 37.6016 6.88477  c
37.3516 6.67122 37.0495 6.56445 36.6953 6.56445  c
36.1641 6.56445 35.7318 6.75456 35.3984 7.13477  c
35.0651 7.51497 34.8984 8.11654 34.8984 8.93945  c
34.8984 9.78320 35.0599 10.3926 35.3828 10.7676  c
35.7057 11.1426 36.1224 11.3301 36.6328 11.3301  c
37.0495 11.3301 37.3958 11.2051 37.6719 10.9551  c
37.9479 10.7051 38.1276 10.3145 38.2109 9.78320  c
h
44.3984 10.0645 m
45.4922 10.1895 l
45.3255 10.8249 45.0078 11.3197 44.5391 11.6738  c
44.0703 12.0280 43.4766 12.2051 42.7578 12.2051  c
41.8516 12.2051 41.1302 11.9238 40.5938 11.3613  c
40.0573 10.7988 39.7891 10.0124 39.7891 9.00195  c
39.7891 7.96029 40.0599 7.15039 40.6016 6.57227  c
41.1432 5.99414 41.8411 5.70508 42.6953 5.70508  c
43.5286 5.70508 44.2083 5.98633 44.7344 6.54883  c
45.2604 7.11133 45.5234 7.90820 45.5234 8.93945  c
45.5234 9.00195 45.5234 9.09570 45.5234 9.22070  c
40.8828 9.22070 l
40.9245 9.90820 41.1172 10.4316 41.4609 10.7910  c
41.8047 11.1504 42.2370 11.3301 42.7578 11.3301  c
43.1432 11.3301 43.4740 11.2285 43.7500 11.0254  c
44.0260 10.8223 44.2422 10.5020 44.3984 10.0645  c
h
40.9453 8.36133 m
44.4141 8.36133 l
44.3724 7.83008 44.2422 7.43424 44.0234 7.17383  c
43.6797 6.76758 43.2422 6.56445 42.7109 6.56445  c
42.2214 6.56445 41.8125 6.72591 41.4844 7.04883  c
41.1562 7.37174 40.9766 7.80924 40.9453 8.36133  c
h
46.4004 10.2051 m
47.4316 10.0488 l
47.4941 10.4655 47.6582 10.7832 47.9238 11.0020  c
48.1895 11.2207 48.5671 11.3301 49.0566 11.3301  c
49.5358 11.3301 49.8926 11.2337 50.1270 11.0410  c
50.3613 10.8483 50.4785 10.6165 50.4785 10.3457  c
50.4785 10.1061 50.3743 9.91862 50.1660 9.78320  c
50.0202 9.68945 49.6608 9.56966 49.0879 9.42383  c
48.3171 9.22591 47.7832 9.05664 47.4863 8.91602  c
47.1895 8.77539 46.9629 8.58008 46.8066 8.33008  c
46.6504 8.08008 46.5723 7.79883 46.5723 7.48633  c
46.5723 7.21549 46.6348 6.96029 46.7598 6.72070  c
46.8848 6.48112 47.0566 6.28320 47.2754 6.12695  c
47.4421 6.01237 47.6660 5.91341 47.9473 5.83008  c
48.2285 5.74674 48.5358 5.70508 48.8691 5.70508  c
49.3483 5.70508 49.7728 5.77539 50.1426 5.91602  c
50.5124 6.05664 50.7858 6.24674 50.9629 6.48633  c
51.1400 6.72591 51.2598 7.04362 51.3223 7.43945  c
50.2910 7.58008 l
50.2493 7.26758 50.1165 7.02018 49.8926 6.83789  c
49.6686 6.65560 49.3483 6.56445 48.9316 6.56445  c
48.4525 6.56445 48.1087 6.64518 47.9004 6.80664  c
47.6921 6.96810 47.5879 7.15820 47.5879 7.37695  c
47.5879 7.51237 47.6296 7.63216 47.7129 7.73633  c
47.8066 7.85091 47.9421 7.94466 48.1191 8.01758  c
48.2233 8.05924 48.5358 8.14779 49.0566 8.28320  c
49.8066 8.49154 50.3275 8.65820 50.6191 8.78320  c
50.9108 8.90820 51.1400 9.09049 51.3066 9.33008  c
51.4733 9.56966 51.5566 9.87174 51.5566 10.2363  c
51.5566 10.5905 51.4551 10.9212 51.2520 11.2285  c
51.0488 11.5358 50.7546 11.7754 50.3691 11.9473  c
49.9837 12.1191 49.5462 12.2051 49.0566 12.2051  c
48.2441 12.2051 47.6270 12.0358 47.2051 11.6973  c
46.7832 11.3587 46.5150 10.8613 46.4004 10.2051  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 200.500 248.867 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
278.299 259.000 m
293.000 259.000 l
293.000 273.701 l
278.299 273.701 l
278.299 259.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
278.299 259.000 m
293.000 259.000 l
293.000 273.701 l
278.299 273.701 l
278.299 259.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
278.299 259.000 m
293.000 259.000 l
293.000 263.900 l
285.649 263.900 l
285.649 268.801 l
278.299 268.801 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
278.299 259.000 m
293.000 259.000 l
293.000 263.900 l
285.649 263.900 l
285.649 268.801 l
278.299 268.801 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
212.000 355.000 m
212.000 374.000 l
212.000 375.657 213.343 377.000 215.000 377.000  c
247.062 377.000 l
248.719 377.000 250.062 375.657 250.062 374.000  c
250.062 355.000 l
250.062 353.343 248.719 352.000 247.062 352.000  c
215.000 352.000 l
213.343 352.000 212.000 353.343 212.000 355.000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
212.000 355.000 m
212.000 374.000 l
212.000 375.657 213.343 377.000 215.000 377.000  c
247.062 377.000 l
248.719 377.000 250.062 375.657 250.062 374.000  c
250.062 355.000 l
250.062 353.343 248.719 352.000 247.062 352.000  c
215.000 352.000 l
213.343 352.000 212.000 353.343 212.000 355.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [212.0 352.0 212.0 377.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
215.000 358.000 m
215.000 373.500 l
215.000 375.157 216.343 376.500 218.000 376.500  c
246.562 376.500 l
248.219 376.500 249.562 375.157 249.562 373.500  c
249.562 358.000 l
249.562 356.343 248.219 355.000 246.562 355.000  c
218.000 355.000 l
216.343 355.000 215.000 356.343 215.000 358.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
212.000 370.000 m
212.000 424.000 l
212.000 425.657 213.343 427.000 215.000 427.000  c
296.000 427.000 l
297.657 427.000 299.000 425.657 299.000 424.000  c
299.000 370.000 l
299.000 368.343 297.657 367.000 296.000 367.000  c
215.000 367.000 l
213.343 367.000 212.000 368.343 212.000 370.000  c
h
f
.611765 .564706 .564706 RG
newpath
212.000 370.000 m
212.000 424.000 l
212.000 425.657 213.343 427.000 215.000 427.000  c
296.000 427.000 l
297.657 427.000 299.000 425.657 299.000 424.000  c
299.000 370.000 l
299.000 368.343 297.657 367.000 296.000 367.000  c
215.000 367.000 l
213.343 367.000 212.000 368.343 212.000 370.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [212.0 367.0 212.0 427.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
215.000 373.000 m
215.000 423.500 l
215.000 425.157 216.343 426.500 218.000 426.500  c
295.500 426.500 l
297.157 426.500 298.500 425.157 298.500 423.500  c
298.500 373.000 l
298.500 371.343 297.157 370.000 295.500 370.000  c
218.000 370.000 l
216.343 370.000 215.000 371.343 215.000 373.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 246.000 395.117 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.593750 12.5801 m
1.62500 12.7363 l
1.66667 13.0488 1.78646 13.2780 1.98438 13.4238  c
2.24479 13.6217 2.59896 13.7207 3.04688 13.7207  c
3.53646 13.7207 3.91406 13.6217 4.17969 13.4238  c
4.44531 13.2259 4.62500 12.9551 4.71875 12.6113  c
4.78125 12.3926 4.80729 11.9395 4.79688 11.2520  c
4.33854 11.7936 3.76562 12.0645 3.07812 12.0645  c
2.22396 12.0645 1.56250 11.7546 1.09375 11.1348  c
.625000 10.5150 .390625 9.77799 .390625 8.92383  c
.390625 8.33008 .497396 7.78060 .710938 7.27539  c
.924479 6.77018 1.23438 6.38216 1.64062 6.11133  c
2.04688 5.84049 2.52604 5.70508 3.07812 5.70508  c
3.81771 5.70508 4.42708 6.00195 4.90625 6.59570  c
4.90625 5.84570 l
5.87500 5.84570 l
5.87500 11.2207 l
5.87500 12.1895 5.77604 12.8770 5.57812 13.2832  c
5.38021 13.6895 5.06771 14.0098 4.64062 14.2441  c
4.21354 14.4785 3.68750 14.5957 3.06250 14.5957  c
2.32292 14.5957 1.72396 14.4290 1.26562 14.0957  c
.807292 13.7624 .583333 13.2572 .593750 12.5801  c
h
1.46875 8.84570 m
1.46875 9.65820 1.63021 10.2520 1.95312 10.6270  c
2.27604 11.0020 2.68229 11.1895 3.17188 11.1895  c
3.66146 11.1895 4.07031 11.0020 4.39844 10.6270  c
4.72656 10.2520 4.89062 9.66862 4.89062 8.87695  c
4.89062 8.11654 4.72135 7.54362 4.38281 7.15820  c
4.04427 6.77279 3.63542 6.58008 3.15625 6.58008  c
2.68750 6.58008 2.28906 6.77018 1.96094 7.15039  c
1.63281 7.53060 1.46875 8.09570 1.46875 8.84570  c
h
8.61133 12.0645 m
6.70508 5.84570 l
7.79883 5.84570 l
8.78320 9.43945 l
9.15820 10.7676 l
9.17904 10.7051 9.28841 10.2780 9.48633 9.48633  c
10.4707 5.84570 l
11.5488 5.84570 l
12.4863 9.45508 l
12.7988 10.6426 l
13.1582 9.43945 l
14.2207 5.84570 l
15.2520 5.84570 l
13.2988 12.0645 l
12.2051 12.0645 l
11.2207 8.33008 l
10.9707 7.28320 l
9.72070 12.0645 l
8.61133 12.0645 l
h
18.4336 11.1270 m
18.5898 12.0488 l
18.2878 12.1113 18.0221 12.1426 17.7930 12.1426  c
17.4076 12.1426 17.1107 12.0827 16.9023 11.9629  c
16.6940 11.8431 16.5456 11.6842 16.4570 11.4863  c
16.3685 11.2884 16.3242 10.8717 16.3242 10.2363  c
16.3242 6.65820 l
15.5586 6.65820 l
15.5586 5.84570 l
16.3242 5.84570 l
16.3242 4.29883 l
17.3711 3.67383 l
17.3711 5.84570 l
18.4336 5.84570 l
18.4336 6.65820 l
17.3711 6.65820 l
17.3711 10.2988 l
17.3711 10.6009 17.3893 10.7936 17.4258 10.8770  c
17.4622 10.9603 17.5221 11.0280 17.6055 11.0801  c
17.6888 11.1322 17.8086 11.1582 17.9648 11.1582  c
18.0898 11.1582 18.2461 11.1478 18.4336 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 218.000 367.117 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
278.299 371.000 m
293.000 371.000 l
293.000 385.701 l
278.299 385.701 l
278.299 371.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
278.299 371.000 m
293.000 371.000 l
293.000 385.701 l
278.299 385.701 l
278.299 371.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
278.299 371.000 m
293.000 371.000 l
293.000 375.900 l
285.649 375.900 l
285.649 380.801 l
278.299 380.801 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
278.299 371.000 m
293.000 371.000 l
293.000 375.900 l
285.649 375.900 l
285.649 380.801 l
278.299 380.801 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
408.000 147.000 m
408.000 166.000 l
408.000 167.657 409.343 169.000 411.000 169.000  c
443.062 169.000 l
444.719 169.000 446.062 167.657 446.062 166.000  c
446.062 147.000 l
446.062 145.343 444.719 144.000 443.062 144.000  c
411.000 144.000 l
409.343 144.000 408.000 145.343 408.000 147.000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
408.000 147.000 m
408.000 166.000 l
408.000 167.657 409.343 169.000 411.000 169.000  c
443.062 169.000 l
444.719 169.000 446.062 167.657 446.062 166.000  c
446.062 147.000 l
446.062 145.343 444.719 144.000 443.062 144.000  c
411.000 144.000 l
409.343 144.000 408.000 145.343 408.000 147.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [408.0 144.0 408.0 169.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
411.000 150.000 m
411.000 165.500 l
411.000 167.157 412.343 168.500 414.000 168.500  c
442.562 168.500 l
444.219 168.500 445.562 167.157 445.562 165.500  c
445.562 150.000 l
445.562 148.343 444.219 147.000 442.562 147.000  c
414.000 147.000 l
412.343 147.000 411.000 148.343 411.000 150.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
408.000 162.000 m
408.000 216.000 l
408.000 217.657 409.343 219.000 411.000 219.000  c
492.000 219.000 l
493.657 219.000 495.000 217.657 495.000 216.000  c
495.000 162.000 l
495.000 160.343 493.657 159.000 492.000 159.000  c
411.000 159.000 l
409.343 159.000 408.000 160.343 408.000 162.000  c
h
f
.611765 .564706 .564706 RG
newpath
408.000 162.000 m
408.000 216.000 l
408.000 217.657 409.343 219.000 411.000 219.000  c
492.000 219.000 l
493.657 219.000 495.000 217.657 495.000 216.000  c
495.000 162.000 l
495.000 160.343 493.657 159.000 492.000 159.000  c
411.000 159.000 l
409.343 159.000 408.000 160.343 408.000 162.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [408.0 159.0 408.0 219.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
411.000 165.000 m
411.000 215.500 l
411.000 217.157 412.343 218.500 414.000 218.500  c
491.500 218.500 l
493.157 218.500 494.500 217.157 494.500 215.500  c
494.500 165.000 l
494.500 163.343 493.157 162.000 491.500 162.000  c
414.000 162.000 l
412.343 162.000 411.000 163.343 411.000 165.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 422.500 187.117 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.593750 12.5801 m
1.62500 12.7363 l
1.66667 13.0488 1.78646 13.2780 1.98438 13.4238  c
2.24479 13.6217 2.59896 13.7207 3.04688 13.7207  c
3.53646 13.7207 3.91406 13.6217 4.17969 13.4238  c
4.44531 13.2259 4.62500 12.9551 4.71875 12.6113  c
4.78125 12.3926 4.80729 11.9395 4.79688 11.2520  c
4.33854 11.7936 3.76562 12.0645 3.07812 12.0645  c
2.22396 12.0645 1.56250 11.7546 1.09375 11.1348  c
.625000 10.5150 .390625 9.77799 .390625 8.92383  c
.390625 8.33008 .497396 7.78060 .710938 7.27539  c
.924479 6.77018 1.23438 6.38216 1.64062 6.11133  c
2.04688 5.84049 2.52604 5.70508 3.07812 5.70508  c
3.81771 5.70508 4.42708 6.00195 4.90625 6.59570  c
4.90625 5.84570 l
5.87500 5.84570 l
5.87500 11.2207 l
5.87500 12.1895 5.77604 12.8770 5.57812 13.2832  c
5.38021 13.6895 5.06771 14.0098 4.64062 14.2441  c
4.21354 14.4785 3.68750 14.5957 3.06250 14.5957  c
2.32292 14.5957 1.72396 14.4290 1.26562 14.0957  c
.807292 13.7624 .583333 13.2572 .593750 12.5801  c
h
1.46875 8.84570 m
1.46875 9.65820 1.63021 10.2520 1.95312 10.6270  c
2.27604 11.0020 2.68229 11.1895 3.17188 11.1895  c
3.66146 11.1895 4.07031 11.0020 4.39844 10.6270  c
4.72656 10.2520 4.89062 9.66862 4.89062 8.87695  c
4.89062 8.11654 4.72135 7.54362 4.38281 7.15820  c
4.04427 6.77279 3.63542 6.58008 3.15625 6.58008  c
2.68750 6.58008 2.28906 6.77018 1.96094 7.15039  c
1.63281 7.53060 1.46875 8.09570 1.46875 8.84570  c
h
8.61133 12.0645 m
6.70508 5.84570 l
7.79883 5.84570 l
8.78320 9.43945 l
9.15820 10.7676 l
9.17904 10.7051 9.28841 10.2780 9.48633 9.48633  c
10.4707 5.84570 l
11.5488 5.84570 l
12.4863 9.45508 l
12.7988 10.6426 l
13.1582 9.43945 l
14.2207 5.84570 l
15.2520 5.84570 l
13.2988 12.0645 l
12.2051 12.0645 l
11.2207 8.33008 l
10.9707 7.28320 l
9.72070 12.0645 l
8.61133 12.0645 l
h
18.4336 11.1270 m
18.5898 12.0488 l
18.2878 12.1113 18.0221 12.1426 17.7930 12.1426  c
17.4076 12.1426 17.1107 12.0827 16.9023 11.9629  c
16.6940 11.8431 16.5456 11.6842 16.4570 11.4863  c
16.3685 11.2884 16.3242 10.8717 16.3242 10.2363  c
16.3242 6.65820 l
15.5586 6.65820 l
15.5586 5.84570 l
16.3242 5.84570 l
16.3242 4.29883 l
17.3711 3.67383 l
17.3711 5.84570 l
18.4336 5.84570 l
18.4336 6.65820 l
17.3711 6.65820 l
17.3711 10.2988 l
17.3711 10.6009 17.3893 10.7936 17.4258 10.8770  c
17.4622 10.9603 17.5221 11.0280 17.6055 11.0801  c
17.6888 11.1322 17.8086 11.1582 17.9648 11.1582  c
18.0898 11.1582 18.2461 11.1478 18.4336 11.1270  c
h
19.0488 10.2051 m
20.0801 10.0488 l
20.1426 10.4655 20.3066 10.7832 20.5723 11.0020  c
20.8379 11.2207 21.2155 11.3301 21.7051 11.3301  c
22.1842 11.3301 22.5410 11.2337 22.7754 11.0410  c
23.0098 10.8483 23.1270 10.6165 23.1270 10.3457  c
23.1270 10.1061 23.0228 9.91862 22.8145 9.78320  c
22.6686 9.68945 22.3092 9.56966 21.7363 9.42383  c
20.9655 9.22591 20.4316 9.05664 20.1348 8.91602  c
19.8379 8.77539 19.6113 8.58008 19.4551 8.33008  c
19.2988 8.08008 19.2207 7.79883 19.2207 7.48633  c
19.2207 7.21549 19.2832 6.96029 19.4082 6.72070  c
19.5332 6.48112 19.7051 6.28320 19.9238 6.12695  c
20.0905 6.01237 20.3145 5.91341 20.5957 5.83008  c
20.8770 5.74674 21.1842 5.70508 21.5176 5.70508  c
21.9967 5.70508 22.4212 5.77539 22.7910 5.91602  c
23.1608 6.05664 23.4342 6.24674 23.6113 6.48633  c
23.7884 6.72591 23.9082 7.04362 23.9707 7.43945  c
22.9395 7.58008 l
22.8978 7.26758 22.7650 7.02018 22.5410 6.83789  c
22.3171 6.65560 21.9967 6.56445 21.5801 6.56445  c
21.1009 6.56445 20.7572 6.64518 20.5488 6.80664  c
20.3405 6.96810 20.2363 7.15820 20.2363 7.37695  c
20.2363 7.51237 20.2780 7.63216 20.3613 7.73633  c
20.4551 7.85091 20.5905 7.94466 20.7676 8.01758  c
20.8717 8.05924 21.1842 8.14779 21.7051 8.28320  c
22.4551 8.49154 22.9759 8.65820 23.2676 8.78320  c
23.5592 8.90820 23.7884 9.09049 23.9551 9.33008  c
24.1217 9.56966 24.2051 9.87174 24.2051 10.2363  c
24.2051 10.5905 24.1035 10.9212 23.9004 11.2285  c
23.6973 11.5358 23.4030 11.7754 23.0176 11.9473  c
22.6322 12.1191 22.1947 12.2051 21.7051 12.2051  c
20.8926 12.2051 20.2754 12.0358 19.8535 11.6973  c
19.4316 11.3587 19.1634 10.8613 19.0488 10.2051  c
h
29.7207 10.0645 m
30.8145 10.1895 l
30.6478 10.8249 30.3301 11.3197 29.8613 11.6738  c
29.3926 12.0280 28.7988 12.2051 28.0801 12.2051  c
27.1738 12.2051 26.4525 11.9238 25.9160 11.3613  c
25.3796 10.7988 25.1113 10.0124 25.1113 9.00195  c
25.1113 7.96029 25.3822 7.15039 25.9238 6.57227  c
26.4655 5.99414 27.1634 5.70508 28.0176 5.70508  c
28.8509 5.70508 29.5306 5.98633 30.0566 6.54883  c
30.5827 7.11133 30.8457 7.90820 30.8457 8.93945  c
30.8457 9.00195 30.8457 9.09570 30.8457 9.22070  c
26.2051 9.22070 l
26.2467 9.90820 26.4395 10.4316 26.7832 10.7910  c
27.1270 11.1504 27.5592 11.3301 28.0801 11.3301  c
28.4655 11.3301 28.7962 11.2285 29.0723 11.0254  c
29.3483 10.8223 29.5645 10.5020 29.7207 10.0645  c
h
26.2676 8.36133 m
29.7363 8.36133 l
29.6947 7.83008 29.5645 7.43424 29.3457 7.17383  c
29.0020 6.76758 28.5645 6.56445 28.0332 6.56445  c
27.5436 6.56445 27.1348 6.72591 26.8066 7.04883  c
26.4785 7.37174 26.2988 7.80924 26.2676 8.36133  c
h
32.1289 12.0645 m
32.1289 5.84570 l
33.0820 5.84570 l
33.0820 6.78320 l
33.3216 6.34570 33.5430 6.05664 33.7461 5.91602  c
33.9492 5.77539 34.1758 5.70508 34.4258 5.70508  c
34.7799 5.70508 35.1393 5.81445 35.5039 6.03320  c
35.1445 7.01758 l
34.8841 6.86133 34.6289 6.78320 34.3789 6.78320  c
34.1393 6.78320 33.9284 6.85352 33.7461 6.99414  c
33.5638 7.13477 33.4362 7.33008 33.3633 7.58008  c
33.2383 7.95508 33.1758 8.36133 33.1758 8.79883  c
33.1758 12.0645 l
32.1289 12.0645 l
h
37.8594 12.0645 m
35.5000 5.84570 l
36.6094 5.84570 l
37.9531 9.56445 l
38.0885 9.97070 38.2188 10.3874 38.3438 10.8145  c
38.4375 10.4915 38.5677 10.1009 38.7344 9.64258  c
40.1250 5.84570 l
41.2031 5.84570 l
38.8438 12.0645 l
37.8594 12.0645 l
h
42.1406 4.68945 m
42.1406 3.47070 l
43.2031 3.47070 l
43.2031 4.68945 l
42.1406 4.68945 l
h
42.1406 12.0645 m
42.1406 5.84570 l
43.2031 5.84570 l
43.2031 12.0645 l
42.1406 12.0645 l
h
48.8691 9.78320 m
49.9004 9.92383 l
49.7858 10.6322 49.4941 11.1895 49.0254 11.5957  c
48.5566 12.0020 47.9837 12.2051 47.3066 12.2051  c
46.4525 12.2051 45.7676 11.9264 45.2520 11.3691  c
44.7363 10.8118 44.4785 10.0124 44.4785 8.97070  c
44.4785 8.30404 44.5905 7.71810 44.8145 7.21289  c
45.0384 6.70768 45.3770 6.33008 45.8301 6.08008  c
46.2832 5.83008 46.7806 5.70508 47.3223 5.70508  c
47.9889 5.70508 48.5384 5.87435 48.9707 6.21289  c
49.4030 6.55143 49.6816 7.03841 49.8066 7.67383  c
48.7754 7.83008 l
48.6816 7.41341 48.5098 7.09831 48.2598 6.88477  c
48.0098 6.67122 47.7077 6.56445 47.3535 6.56445  c
46.8223 6.56445 46.3900 6.75456 46.0566 7.13477  c
45.7233 7.51497 45.5566 8.11654 45.5566 8.93945  c
45.5566 9.78320 45.7181 10.3926 46.0410 10.7676  c
46.3639 11.1426 46.7806 11.3301 47.2910 11.3301  c
47.7077 11.3301 48.0540 11.2051 48.3301 10.9551  c
48.6061 10.7051 48.7858 10.3145 48.8691 9.78320  c
h
55.0566 10.0645 m
56.1504 10.1895 l
55.9837 10.8249 55.6660 11.3197 55.1973 11.6738  c
54.7285 12.0280 54.1348 12.2051 53.4160 12.2051  c
52.5098 12.2051 51.7884 11.9238 51.2520 11.3613  c
50.7155 10.7988 50.4473 10.0124 50.4473 9.00195  c
50.4473 7.96029 50.7181 7.15039 51.2598 6.57227  c
51.8014 5.99414 52.4993 5.70508 53.3535 5.70508  c
54.1868 5.70508 54.8665 5.98633 55.3926 6.54883  c
55.9186 7.11133 56.1816 7.90820 56.1816 8.93945  c
56.1816 9.00195 56.1816 9.09570 56.1816 9.22070  c
51.5410 9.22070 l
51.5827 9.90820 51.7754 10.4316 52.1191 10.7910  c
52.4629 11.1504 52.8952 11.3301 53.4160 11.3301  c
53.8014 11.3301 54.1322 11.2285 54.4082 11.0254  c
54.6842 10.8223 54.9004 10.5020 55.0566 10.0645  c
h
51.6035 8.36133 m
55.0723 8.36133 l
55.0306 7.83008 54.9004 7.43424 54.6816 7.17383  c
54.3379 6.76758 53.9004 6.56445 53.3691 6.56445  c
52.8796 6.56445 52.4707 6.72591 52.1426 7.04883  c
51.8145 7.37174 51.6348 7.80924 51.6035 8.36133  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 394.500 159.117 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
474.299 163.000 m
489.000 163.000 l
489.000 177.701 l
474.299 177.701 l
474.299 163.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
474.299 163.000 m
489.000 163.000 l
489.000 177.701 l
474.299 177.701 l
474.299 163.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
474.299 163.000 m
489.000 163.000 l
489.000 167.900 l
481.649 167.900 l
481.649 172.801 l
474.299 172.801 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
474.299 163.000 m
489.000 163.000 l
489.000 167.900 l
481.649 167.900 l
481.649 172.801 l
474.299 172.801 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
408.000 35.0000 m
408.000 54.0000 l
408.000 55.6569 409.343 57.0000 411.000 57.0000  c
443.062 57.0000 l
444.719 57.0000 446.062 55.6569 446.062 54.0000  c
446.062 35.0000 l
446.062 33.3431 444.719 32.0000 443.062 32.0000  c
411.000 32.0000 l
409.343 32.0000 408.000 33.3431 408.000 35.0000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
408.000 35.0000 m
408.000 54.0000 l
408.000 55.6569 409.343 57.0000 411.000 57.0000  c
443.062 57.0000 l
444.719 57.0000 446.062 55.6569 446.062 54.0000  c
446.062 35.0000 l
446.062 33.3431 444.719 32.0000 443.062 32.0000  c
411.000 32.0000 l
409.343 32.0000 408.000 33.3431 408.000 35.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [408.0 32.0 408.0 57.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
411.000 38.0000 m
411.000 53.5000 l
411.000 55.1569 412.343 56.5000 414.000 56.5000  c
442.562 56.5000 l
444.219 56.5000 445.562 55.1569 445.562 53.5000  c
445.562 38.0000 l
445.562 36.3431 444.219 35.0000 442.562 35.0000  c
414.000 35.0000 l
412.343 35.0000 411.000 36.3431 411.000 38.0000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
408.000 50.0000 m
408.000 104.000 l
408.000 105.657 409.343 107.000 411.000 107.000  c
492.000 107.000 l
493.657 107.000 495.000 105.657 495.000 104.000  c
495.000 50.0000 l
495.000 48.3431 493.657 47.0000 492.000 47.0000  c
411.000 47.0000 l
409.343 47.0000 408.000 48.3431 408.000 50.0000  c
h
f
.611765 .564706 .564706 RG
newpath
408.000 50.0000 m
408.000 104.000 l
408.000 105.657 409.343 107.000 411.000 107.000  c
492.000 107.000 l
493.657 107.000 495.000 105.657 495.000 104.000  c
495.000 50.0000 l
495.000 48.3431 493.657 47.0000 492.000 47.0000  c
411.000 47.0000 l
409.343 47.0000 408.000 48.3431 408.000 50.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [408.0 47.0 408.0 107.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
411.000 53.0000 m
411.000 103.500 l
411.000 105.157 412.343 106.500 414.000 106.500  c
491.500 106.500 l
493.157 106.500 494.500 105.157 494.500 103.500  c
494.500 53.0000 l
494.500 51.3431 493.157 50.0000 491.500 50.0000  c
414.000 50.0000 l
412.343 50.0000 411.000 51.3431 411.000 53.0000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 425.500 75.1169 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.796875 12.0645 m
.796875 3.47070 l
1.84375 3.47070 l
1.84375 6.54883 l
2.33333 5.98633 2.95312 5.70508 3.70312 5.70508  c
4.17188 5.70508 4.57552 5.79622 4.91406 5.97852  c
5.25260 6.16081 5.49479 6.41081 5.64062 6.72852  c
5.78646 7.04622 5.85938 7.51237 5.85938 8.12695  c
5.85938 12.0645 l
4.81250 12.0645 l
4.81250 8.12695 l
4.81250 7.59570 4.69792 7.21029 4.46875 6.97070  c
4.23958 6.73112 3.91667 6.61133 3.50000 6.61133  c
3.18750 6.61133 2.89323 6.69206 2.61719 6.85352  c
2.34115 7.01497 2.14323 7.23372 2.02344 7.50977  c
1.90365 7.78581 1.84375 8.16862 1.84375 8.65820  c
1.84375 12.0645 l
.796875 12.0645 l
h
7.47070 4.68945 m
7.47070 3.47070 l
8.53320 3.47070 l
8.53320 4.68945 l
7.47070 4.68945 l
h
7.47070 12.0645 m
7.47070 5.84570 l
8.53320 5.84570 l
8.53320 12.0645 l
7.47070 12.0645 l
h
11.1055 12.0645 m
10.1211 12.0645 l
10.1211 3.47070 l
11.1836 3.47070 l
11.1836 6.53320 l
11.6315 5.98112 12.1992 5.70508 12.8867 5.70508  c
13.2721 5.70508 13.6341 5.78060 13.9727 5.93164  c
14.3112 6.08268 14.5924 6.29883 14.8164 6.58008  c
15.0404 6.86133 15.2148 7.19987 15.3398 7.59570  c
15.4648 7.99154 15.5273 8.41341 15.5273 8.86133  c
15.5273 9.92383 15.2617 10.7467 14.7305 11.3301  c
14.1992 11.9134 13.5690 12.2051 12.8398 12.2051  c
12.1003 12.2051 11.5221 11.8978 11.1055 11.2832  c
11.1055 12.0645 l
h
11.0898 8.90820 m
11.0898 9.64779 11.1940 10.1842 11.4023 10.5176  c
11.7357 11.0592 12.1836 11.3301 12.7461 11.3301  c
13.2044 11.3301 13.6029 11.1322 13.9414 10.7363  c
14.2799 10.3405 14.4492 9.74154 14.4492 8.93945  c
14.4492 8.12695 14.2878 7.52799 13.9648 7.14258  c
13.6419 6.75716 13.2513 6.56445 12.7930 6.56445  c
12.3346 6.56445 11.9362 6.76497 11.5977 7.16602  c
11.2591 7.56706 11.0898 8.14779 11.0898 8.90820  c
h
21.0605 10.0645 m
22.1543 10.1895 l
21.9876 10.8249 21.6699 11.3197 21.2012 11.6738  c
20.7324 12.0280 20.1387 12.2051 19.4199 12.2051  c
18.5137 12.2051 17.7923 11.9238 17.2559 11.3613  c
16.7194 10.7988 16.4512 10.0124 16.4512 9.00195  c
16.4512 7.96029 16.7220 7.15039 17.2637 6.57227  c
17.8053 5.99414 18.5033 5.70508 19.3574 5.70508  c
20.1908 5.70508 20.8704 5.98633 21.3965 6.54883  c
21.9225 7.11133 22.1855 7.90820 22.1855 8.93945  c
22.1855 9.00195 22.1855 9.09570 22.1855 9.22070  c
17.5449 9.22070 l
17.5866 9.90820 17.7793 10.4316 18.1230 10.7910  c
18.4668 11.1504 18.8991 11.3301 19.4199 11.3301  c
19.8053 11.3301 20.1361 11.2285 20.4121 11.0254  c
20.6882 10.8223 20.9043 10.5020 21.0605 10.0645  c
h
17.6074 8.36133 m
21.0762 8.36133 l
21.0345 7.83008 20.9043 7.43424 20.6855 7.17383  c
20.3418 6.76758 19.9043 6.56445 19.3730 6.56445  c
18.8835 6.56445 18.4746 6.72591 18.1465 7.04883  c
17.8184 7.37174 17.6387 7.80924 17.6074 8.36133  c
h
23.4688 12.0645 m
23.4688 5.84570 l
24.4219 5.84570 l
24.4219 6.78320 l
24.6615 6.34570 24.8828 6.05664 25.0859 5.91602  c
25.2891 5.77539 25.5156 5.70508 25.7656 5.70508  c
26.1198 5.70508 26.4792 5.81445 26.8438 6.03320  c
26.4844 7.01758 l
26.2240 6.86133 25.9688 6.78320 25.7188 6.78320  c
25.4792 6.78320 25.2682 6.85352 25.0859 6.99414  c
24.9036 7.13477 24.7760 7.33008 24.7031 7.58008  c
24.5781 7.95508 24.5156 8.36133 24.5156 8.79883  c
24.5156 12.0645 l
23.4688 12.0645 l
h
27.4805 12.0645 m
27.4805 5.84570 l
28.4180 5.84570 l
28.4180 6.72070 l
28.8763 6.04362 29.5378 5.70508 30.4023 5.70508  c
30.7773 5.70508 31.1237 5.77279 31.4414 5.90820  c
31.7591 6.04362 31.9961 6.22070 32.1523 6.43945  c
32.3086 6.65820 32.4180 6.91341 32.4805 7.20508  c
32.5117 7.40299 32.5273 7.74674 32.5273 8.23633  c
32.5273 12.0645 l
31.4805 12.0645 l
31.4805 8.28320 l
31.4805 7.84570 31.4388 7.52279 31.3555 7.31445  c
31.2721 7.10612 31.1263 6.93685 30.9180 6.80664  c
30.7096 6.67643 30.4648 6.61133 30.1836 6.61133  c
29.7357 6.61133 29.3477 6.75456 29.0195 7.04102  c
28.6914 7.32747 28.5273 7.86654 28.5273 8.65820  c
28.5273 12.0645 l
27.4805 12.0645 l
h
38.2168 11.2988 m
37.8210 11.6322 37.4434 11.8665 37.0840 12.0020  c
36.7246 12.1374 36.3366 12.2051 35.9199 12.2051  c
35.2324 12.2051 34.7064 12.0384 34.3418 11.7051  c
33.9772 11.3717 33.7949 10.9447 33.7949 10.4238  c
33.7949 10.1217 33.8626 9.84310 33.9980 9.58789  c
34.1335 9.33268 34.3158 9.12956 34.5449 8.97852  c
34.7741 8.82747 35.0293 8.71549 35.3105 8.64258  c
35.5085 8.58008 35.8210 8.52279 36.2480 8.47070  c
37.0918 8.37695 37.7168 8.25716 38.1230 8.11133  c
38.1230 7.96549 38.1230 7.87695 38.1230 7.84570  c
38.1230 7.40820 38.0241 7.10091 37.8262 6.92383  c
37.5553 6.69466 37.1543 6.58008 36.6230 6.58008  c
36.1335 6.58008 35.7689 6.66602 35.5293 6.83789  c
35.2897 7.00977 35.1126 7.31445 34.9980 7.75195  c
33.9668 7.61133 l
34.0605 7.17383 34.2168 6.81966 34.4355 6.54883  c
34.6543 6.27799 34.9668 6.06966 35.3730 5.92383  c
35.7793 5.77799 36.2480 5.70508 36.7793 5.70508  c
37.3105 5.70508 37.7428 5.76758 38.0762 5.89258  c
38.4095 6.01758 38.6543 6.17383 38.8105 6.36133  c
38.9668 6.54883 39.0762 6.78841 39.1387 7.08008  c
39.1699 7.25716 39.1855 7.58008 39.1855 8.04883  c
39.1855 9.45508 l
39.1855 10.4342 39.2090 11.0540 39.2559 11.3145  c
39.3027 11.5749 39.3939 11.8249 39.5293 12.0645  c
38.4199 12.0645 l
38.3158 11.8457 38.2480 11.5905 38.2168 11.2988  c
h
38.1230 8.93945 m
37.7376 9.09570 37.1647 9.23112 36.4043 9.34570  c
35.9668 9.40820 35.6595 9.47852 35.4824 9.55664  c
35.3053 9.63477 35.1673 9.74674 35.0684 9.89258  c
34.9694 10.0384 34.9199 10.2051 34.9199 10.3926  c
34.9199 10.6738 35.0267 10.9082 35.2402 11.0957  c
35.4538 11.2832 35.7637 11.3770 36.1699 11.3770  c
36.5762 11.3770 36.9382 11.2884 37.2559 11.1113  c
37.5736 10.9342 37.8053 10.6895 37.9512 10.3770  c
38.0658 10.1374 38.1230 9.78841 38.1230 9.33008  c
38.1230 8.93945 l
h
43.1250 11.1270 m
43.2812 12.0488 l
42.9792 12.1113 42.7135 12.1426 42.4844 12.1426  c
42.0990 12.1426 41.8021 12.0827 41.5938 11.9629  c
41.3854 11.8431 41.2370 11.6842 41.1484 11.4863  c
41.0599 11.2884 41.0156 10.8717 41.0156 10.2363  c
41.0156 6.65820 l
40.2500 6.65820 l
40.2500 5.84570 l
41.0156 5.84570 l
41.0156 4.29883 l
42.0625 3.67383 l
42.0625 5.84570 l
43.1250 5.84570 l
43.1250 6.65820 l
42.0625 6.65820 l
42.0625 10.2988 l
42.0625 10.6009 42.0807 10.7936 42.1172 10.8770  c
42.1536 10.9603 42.2135 11.0280 42.2969 11.0801  c
42.3802 11.1322 42.5000 11.1582 42.6562 11.1582  c
42.7812 11.1582 42.9375 11.1478 43.1250 11.1270  c
h
48.4121 10.0645 m
49.5059 10.1895 l
49.3392 10.8249 49.0215 11.3197 48.5527 11.6738  c
48.0840 12.0280 47.4902 12.2051 46.7715 12.2051  c
45.8652 12.2051 45.1439 11.9238 44.6074 11.3613  c
44.0710 10.7988 43.8027 10.0124 43.8027 9.00195  c
43.8027 7.96029 44.0736 7.15039 44.6152 6.57227  c
45.1569 5.99414 45.8548 5.70508 46.7090 5.70508  c
47.5423 5.70508 48.2220 5.98633 48.7480 6.54883  c
49.2741 7.11133 49.5371 7.90820 49.5371 8.93945  c
49.5371 9.00195 49.5371 9.09570 49.5371 9.22070  c
44.8965 9.22070 l
44.9382 9.90820 45.1309 10.4316 45.4746 10.7910  c
45.8184 11.1504 46.2507 11.3301 46.7715 11.3301  c
47.1569 11.3301 47.4876 11.2285 47.7637 11.0254  c
48.0397 10.8223 48.2559 10.5020 48.4121 10.0645  c
h
44.9590 8.36133 m
48.4277 8.36133 l
48.3861 7.83008 48.2559 7.43424 48.0371 7.17383  c
47.6934 6.76758 47.2559 6.56445 46.7246 6.56445  c
46.2350 6.56445 45.8262 6.72591 45.4980 7.04883  c
45.1699 7.37174 44.9902 7.80924 44.9590 8.36133  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 397.500 47.1169 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
474.299 51.0000 m
489.000 51.0000 l
489.000 65.7012 l
474.299 65.7012 l
474.299 51.0000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
474.299 51.0000 m
489.000 51.0000 l
489.000 65.7012 l
474.299 65.7012 l
474.299 51.0000 l
h
S
1.00000 0.00000 0.00000 RG
newpath
474.299 51.0000 m
489.000 51.0000 l
489.000 55.9004 l
481.649 55.9004 l
481.649 60.8008 l
474.299 60.8008 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
474.299 51.0000 m
489.000 51.0000 l
489.000 55.9004 l
481.649 55.9004 l
481.649 60.8008 l
474.299 60.8008 l
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
32.0000 147.000 m
32.0000 166.000 l
32.0000 167.657 33.3431 169.000 35.0000 169.000  c
67.0625 169.000 l
68.7194 169.000 70.0625 167.657 70.0625 166.000  c
70.0625 147.000 l
70.0625 145.343 68.7194 144.000 67.0625 144.000  c
35.0000 144.000 l
33.3431 144.000 32.0000 145.343 32.0000 147.000  c
h
f
2 j
.611765 .564706 .564706 RG
newpath
32.0000 147.000 m
32.0000 166.000 l
32.0000 167.657 33.3431 169.000 35.0000 169.000  c
67.0625 169.000 l
68.7194 169.000 70.0625 167.657 70.0625 166.000  c
70.0625 147.000 l
70.0625 145.343 68.7194 144.000 67.0625 144.000  c
35.0000 144.000 l
33.3431 144.000 32.0000 145.343 32.0000 147.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 144.0 32.0 169.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
35.0000 150.000 m
35.0000 165.500 l
35.0000 167.157 36.3431 168.500 38.0000 168.500  c
66.5625 168.500 l
68.2194 168.500 69.5625 167.157 69.5625 165.500  c
69.5625 150.000 l
69.5625 148.343 68.2194 147.000 66.5625 147.000  c
38.0000 147.000 l
36.3431 147.000 35.0000 148.343 35.0000 150.000  c
h
f
1.00000 1.00000 1.00000 RG
newpath
32.0000 162.000 m
32.0000 216.000 l
32.0000 217.657 33.3431 219.000 35.0000 219.000  c
116.000 219.000 l
117.657 219.000 119.000 217.657 119.000 216.000  c
119.000 162.000 l
119.000 160.343 117.657 159.000 116.000 159.000  c
35.0000 159.000 l
33.3431 159.000 32.0000 160.343 32.0000 162.000  c
h
f
.611765 .564706 .564706 RG
newpath
32.0000 162.000 m
32.0000 216.000 l
32.0000 217.657 33.3431 219.000 35.0000 219.000  c
116.000 219.000 l
117.657 219.000 119.000 217.657 119.000 216.000  c
119.000 162.000 l
119.000 160.343 117.657 159.000 116.000 159.000  c
35.0000 159.000 l
33.3431 159.000 32.0000 160.343 32.0000 162.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 159.0 32.0 219.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8784314 0.8117647 0.8117647]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
35.0000 165.000 m
35.0000 215.500 l
35.0000 217.157 36.3431 218.500 38.0000 218.500  c
115.500 218.500 l
117.157 218.500 118.500 217.157 118.500 215.500  c
118.500 165.000 l
118.500 163.343 117.157 162.000 115.500 162.000  c
38.0000 162.000 l
36.3431 162.000 35.0000 163.343 35.0000 165.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 57.5000 187.117 ] concat
[ 1.00000 0.00000 0.00000 1.00000 0.00000 1.00000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.593750 12.5801 m
1.62500 12.7363 l
1.66667 13.0488 1.78646 13.2780 1.98438 13.4238  c
2.24479 13.6217 2.59896 13.7207 3.04688 13.7207  c
3.53646 13.7207 3.91406 13.6217 4.17969 13.4238  c
4.44531 13.2259 4.62500 12.9551 4.71875 12.6113  c
4.78125 12.3926 4.80729 11.9395 4.79688 11.2520  c
4.33854 11.7936 3.76562 12.0645 3.07812 12.0645  c
2.22396 12.0645 1.56250 11.7546 1.09375 11.1348  c
.625000 10.5150 .390625 9.77799 .390625 8.92383  c
.390625 8.33008 .497396 7.78060 .710938 7.27539  c
.924479 6.77018 1.23438 6.38216 1.64062 6.11133  c
2.04688 5.84049 2.52604 5.70508 3.07812 5.70508  c
3.81771 5.70508 4.42708 6.00195 4.90625 6.59570  c
4.90625 5.84570 l
5.87500 5.84570 l
5.87500 11.2207 l
5.87500 12.1895 5.77604 12.8770 5.57812 13.2832  c
5.38021 13.6895 5.06771 14.0098 4.64062 14.2441  c
4.21354 14.4785 3.68750 14.5957 3.06250 14.5957  c
2.32292 14.5957 1.72396 14.4290 1.26562 14.0957  c
.807292 13.7624 .583333 13.2572 .593750 12.5801  c
h
1.46875 8.84570 m
1.46875 9.65820 1.63021 10.2520 1.95312 10.6270  c
2.27604 11.0020 2.68229 11.1895 3.17188 11.1895  c
3.66146 11.1895 4.07031 11.0020 4.39844 10.6270  c
4.72656 10.2520 4.89062 9.66862 4.89062 8.87695  c
4.89062 8.11654 4.72135 7.54362 4.38281 7.15820  c
4.04427 6.77279 3.63542 6.58008 3.15625 6.58008  c
2.68750 6.58008 2.28906 6.77018 1.96094 7.15039  c
1.63281 7.53060 1.46875 8.09570 1.46875 8.84570  c
h
8.61133 12.0645 m
6.70508 5.84570 l
7.79883 5.84570 l
8.78320 9.43945 l
9.15820 10.7676 l
9.17904 10.7051 9.28841 10.2780 9.48633 9.48633  c
10.4707 5.84570 l
11.5488 5.84570 l
12.4863 9.45508 l
12.7988 10.6426 l
13.1582 9.43945 l
14.2207 5.84570 l
15.2520 5.84570 l
13.2988 12.0645 l
12.2051 12.0645 l
11.2207 8.33008 l
10.9707 7.28320 l
9.72070 12.0645 l
8.61133 12.0645 l
h
18.4336 11.1270 m
18.5898 12.0488 l
18.2878 12.1113 18.0221 12.1426 17.7930 12.1426  c
17.4076 12.1426 17.1107 12.0827 16.9023 11.9629  c
16.6940 11.8431 16.5456 11.6842 16.4570 11.4863  c
16.3685 11.2884 16.3242 10.8717 16.3242 10.2363  c
16.3242 6.65820 l
15.5586 6.65820 l
15.5586 5.84570 l
16.3242 5.84570 l
16.3242 4.29883 l
17.3711 3.67383 l
17.3711 5.84570 l
18.4336 5.84570 l
18.4336 6.65820 l
17.3711 6.65820 l
17.3711 10.2988 l
17.3711 10.6009 17.3893 10.7936 17.4258 10.8770  c
17.4622 10.9603 17.5221 11.0280 17.6055 11.0801  c
17.6888 11.1322 17.8086 11.1582 17.9648 11.1582  c
18.0898 11.1582 18.2461 11.1478 18.4336 11.1270  c
h
19.2676 12.5801 m
20.2988 12.7363 l
20.3405 13.0488 20.4603 13.2780 20.6582 13.4238  c
20.9186 13.6217 21.2728 13.7207 21.7207 13.7207  c
22.2103 13.7207 22.5879 13.6217 22.8535 13.4238  c
23.1191 13.2259 23.2988 12.9551 23.3926 12.6113  c
23.4551 12.3926 23.4811 11.9395 23.4707 11.2520  c
23.0124 11.7936 22.4395 12.0645 21.7520 12.0645  c
20.8978 12.0645 20.2363 11.7546 19.7676 11.1348  c
19.2988 10.5150 19.0645 9.77799 19.0645 8.92383  c
19.0645 8.33008 19.1712 7.78060 19.3848 7.27539  c
19.5983 6.77018 19.9082 6.38216 20.3145 6.11133  c
20.7207 5.84049 21.1999 5.70508 21.7520 5.70508  c
22.4915 5.70508 23.1009 6.00195 23.5801 6.59570  c
23.5801 5.84570 l
24.5488 5.84570 l
24.5488 11.2207 l
24.5488 12.1895 24.4499 12.8770 24.2520 13.2832  c
24.0540 13.6895 23.7415 14.0098 23.3145 14.2441  c
22.8874 14.4785 22.3613 14.5957 21.7363 14.5957  c
20.9967 14.5957 20.3978 14.4290 19.9395 14.0957  c
19.4811 13.7624 19.2572 13.2572 19.2676 12.5801  c
h
20.1426 8.84570 m
20.1426 9.65820 20.3040 10.2520 20.6270 10.6270  c
20.9499 11.0020 21.3561 11.1895 21.8457 11.1895  c
22.3353 11.1895 22.7441 11.0020 23.0723 10.6270  c
23.4004 10.2520 23.5645 9.66862 23.5645 8.87695  c
23.5645 8.11654 23.3952 7.54362 23.0566 7.15820  c
22.7181 6.77279 22.3092 6.58008 21.8301 6.58008  c
21.3613 6.58008 20.9629 6.77018 20.6348 7.15039  c
20.3066 7.53060 20.1426 8.09570 20.1426 8.84570  c
h
30.2227 12.0645 m
30.2227 11.1426 l
29.7331 11.8509 29.0716 12.2051 28.2383 12.2051  c
27.8737 12.2051 27.5326 12.1348 27.2148 11.9941  c
26.8971 11.8535 26.6602 11.6764 26.5039 11.4629  c
26.3477 11.2493 26.2383 10.9863 26.1758 10.6738  c
26.1341 10.4759 26.1133 10.1478 26.1133 9.68945  c
26.1133 5.84570 l
27.1758 5.84570 l
27.1758 9.29883 l
27.1758 9.84049 27.1966 10.2103 27.2383 10.4082  c
27.3008 10.6790 27.4388 10.8952 27.6523 11.0566  c
27.8659 11.2181 28.1341 11.2988 28.4570 11.2988  c
28.7695 11.2988 29.0638 11.2181 29.3398 11.0566  c
29.6159 10.8952 29.8138 10.6738 29.9336 10.3926  c
30.0534 10.1113 30.1133 9.70508 30.1133 9.17383  c
30.1133 5.84570 l
31.1602 5.84570 l
31.1602 12.0645 l
30.2227 12.0645 l
h
32.8184 4.68945 m
32.8184 3.47070 l
33.8809 3.47070 l
33.8809 4.68945 l
32.8184 4.68945 l
h
32.8184 12.0645 m
32.8184 5.84570 l
33.8809 5.84570 l
33.8809 12.0645 l
32.8184 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 29.5000 159.117 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
.752941 .752941 .752941 RG
newpath
98.2988 163.000 m
113.000 163.000 l
113.000 177.701 l
98.2988 177.701 l
98.2988 163.000 l
h
f
0 j
0.00000 0.00000 0.00000 RG
newpath
98.2988 163.000 m
113.000 163.000 l
113.000 177.701 l
98.2988 177.701 l
98.2988 163.000 l
h
S
1.00000 1.00000 1.00000 RG
newpath
98.2988 163.000 m
113.000 163.000 l
113.000 167.900 l
105.649 167.900 l
105.649 172.801 l
98.2988 172.801 l
h
f*
2 j
0.00000 0.00000 0.00000 RG
newpath
98.2988 163.000 m
113.000 163.000 l
113.000 167.900 l
105.649 167.900 l
105.649 172.801 l
98.2988 172.801 l
h
S
0.00000 0.00000 0.00000 RG
0 j
2 J
2 j
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
448.000 107.000 m
448.000 144.000 l
S
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
.700000 w
[ ] 0.00000 d
newpath
448.000 144.000 m
443.000 132.000 l
448.000 144.000 l
453.000 132.000 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
408.000 184.000 m
312.000 184.000 l
278.141 240.032 l
S
[ .855873 .517185 -.517185 .855873 164.229 -109.255 ] concat
.700000 w
[ ] 0.00000 d
newpath
278.141 240.032 m
273.141 228.032 l
278.141 240.032 l
283.141 228.032 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
252.000 315.000 m
252.000 352.000 l
S
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
.700000 w
[ ] 0.00000 d
newpath
252.000 352.000 m
247.000 340.000 l
252.000 352.000 l
257.000 340.000 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
119.000 184.000 m
196.000 184.000 l
231.600 239.943 l
S
[ .843661 -.536875 .536875 .843661 -92.6114 161.853 ] concat
.700000 w
[ ] 0.00000 d
newpath
231.600 239.943 m
226.600 227.943 l
231.600 239.943 l
236.600 227.943 l
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0 J
10.0000 M
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 428.000 l
496.000 428.000 l
496.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 428.000 l
496.000 428.000 l
496.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
