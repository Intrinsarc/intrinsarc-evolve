%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 125 305 470 486
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Friday, 3 September 2010 13:04:06 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
345 180 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
345.000 0.00000 l
345.000 180.000 l
0.00000 180.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 369 204 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 371.000 206.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 373.000 208.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 200.000 176.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.20898 12.0645 m
4.20898 3.47070 l
7.44336 3.47070 l
8.09961 3.47070 8.62565 3.55924 9.02148 3.73633  c
9.41732 3.91341 9.72721 4.18164 9.95117 4.54102  c
10.1751 4.90039 10.2871 5.27799 10.2871 5.67383  c
10.2871 6.03841 10.1882 6.38216 9.99023 6.70508  c
9.79232 7.02799 9.49023 7.28841 9.08398 7.48633  c
9.60482 7.64258 10.0033 7.90560 10.2793 8.27539  c
10.5553 8.64518 10.6934 9.08008 10.6934 9.58008  c
10.6934 9.97591 10.6100 10.3483 10.4434 10.6973  c
10.2767 11.0462 10.0684 11.3145 9.81836 11.5020  c
9.56836 11.6895 9.25326 11.8301 8.87305 11.9238  c
8.49284 12.0176 8.03190 12.0645 7.49023 12.0645  c
4.20898 12.0645 l
h
5.34961 7.08008 m
7.20898 7.08008 l
7.70898 7.08008 8.06836 7.04883 8.28711 6.98633  c
8.57878 6.90299 8.79753 6.75977 8.94336 6.55664  c
9.08919 6.35352 9.16211 6.10091 9.16211 5.79883  c
9.16211 5.51758 9.09440 5.26758 8.95898 5.04883  c
8.82357 4.83008 8.62826 4.68164 8.37305 4.60352  c
8.11784 4.52539 7.68294 4.48633 7.06836 4.48633  c
5.34961 4.48633 l
5.34961 7.08008 l
h
5.34961 11.0488 m
7.49023 11.0488 l
7.85482 11.0488 8.11003 11.0332 8.25586 11.0020  c
8.52669 10.9603 8.74805 10.8848 8.91992 10.7754  c
9.09180 10.6660 9.23503 10.5072 9.34961 10.2988  c
9.46419 10.0905 9.52148 9.85091 9.52148 9.58008  c
9.52148 9.25716 9.44076 8.97591 9.27930 8.73633  c
9.11784 8.49674 8.89128 8.33008 8.59961 8.23633  c
8.30794 8.14258 7.88607 8.09570 7.33398 8.09570  c
5.34961 8.09570 l
5.34961 11.0488 l
h
16.3848 10.0645 m
17.4785 10.1895 l
17.3118 10.8249 16.9941 11.3197 16.5254 11.6738  c
16.0566 12.0280 15.4629 12.2051 14.7441 12.2051  c
13.8379 12.2051 13.1165 11.9238 12.5801 11.3613  c
12.0436 10.7988 11.7754 10.0124 11.7754 9.00195  c
11.7754 7.96029 12.0462 7.15039 12.5879 6.57227  c
13.1296 5.99414 13.8275 5.70508 14.6816 5.70508  c
15.5150 5.70508 16.1947 5.98633 16.7207 6.54883  c
17.2467 7.11133 17.5098 7.90820 17.5098 8.93945  c
17.5098 9.00195 17.5098 9.09570 17.5098 9.22070  c
12.8691 9.22070 l
12.9108 9.90820 13.1035 10.4316 13.4473 10.7910  c
13.7910 11.1504 14.2233 11.3301 14.7441 11.3301  c
15.1296 11.3301 15.4603 11.2285 15.7363 11.0254  c
16.0124 10.8223 16.2285 10.5020 16.3848 10.0645  c
h
12.9316 8.36133 m
16.4004 8.36133 l
16.3587 7.83008 16.2285 7.43424 16.0098 7.17383  c
15.6660 6.76758 15.2285 6.56445 14.6973 6.56445  c
14.2077 6.56445 13.7988 6.72591 13.4707 7.04883  c
13.1426 7.37174 12.9629 7.80924 12.9316 8.36133  c
h
22.8711 11.2988 m
22.4753 11.6322 22.0977 11.8665 21.7383 12.0020  c
21.3789 12.1374 20.9909 12.2051 20.5742 12.2051  c
19.8867 12.2051 19.3607 12.0384 18.9961 11.7051  c
18.6315 11.3717 18.4492 10.9447 18.4492 10.4238  c
18.4492 10.1217 18.5169 9.84310 18.6523 9.58789  c
18.7878 9.33268 18.9701 9.12956 19.1992 8.97852  c
19.4284 8.82747 19.6836 8.71549 19.9648 8.64258  c
20.1628 8.58008 20.4753 8.52279 20.9023 8.47070  c
21.7461 8.37695 22.3711 8.25716 22.7773 8.11133  c
22.7773 7.96549 22.7773 7.87695 22.7773 7.84570  c
22.7773 7.40820 22.6784 7.10091 22.4805 6.92383  c
22.2096 6.69466 21.8086 6.58008 21.2773 6.58008  c
20.7878 6.58008 20.4232 6.66602 20.1836 6.83789  c
19.9440 7.00977 19.7669 7.31445 19.6523 7.75195  c
18.6211 7.61133 l
18.7148 7.17383 18.8711 6.81966 19.0898 6.54883  c
19.3086 6.27799 19.6211 6.06966 20.0273 5.92383  c
20.4336 5.77799 20.9023 5.70508 21.4336 5.70508  c
21.9648 5.70508 22.3971 5.76758 22.7305 5.89258  c
23.0638 6.01758 23.3086 6.17383 23.4648 6.36133  c
23.6211 6.54883 23.7305 6.78841 23.7930 7.08008  c
23.8242 7.25716 23.8398 7.58008 23.8398 8.04883  c
23.8398 9.45508 l
23.8398 10.4342 23.8633 11.0540 23.9102 11.3145  c
23.9570 11.5749 24.0482 11.8249 24.1836 12.0645  c
23.0742 12.0645 l
22.9701 11.8457 22.9023 11.5905 22.8711 11.2988  c
h
22.7773 8.93945 m
22.3919 9.09570 21.8190 9.23112 21.0586 9.34570  c
20.6211 9.40820 20.3138 9.47852 20.1367 9.55664  c
19.9596 9.63477 19.8216 9.74674 19.7227 9.89258  c
19.6237 10.0384 19.5742 10.2051 19.5742 10.3926  c
19.5742 10.6738 19.6810 10.9082 19.8945 11.0957  c
20.1081 11.2832 20.4180 11.3770 20.8242 11.3770  c
21.2305 11.3770 21.5924 11.2884 21.9102 11.1113  c
22.2279 10.9342 22.4596 10.6895 22.6055 10.3770  c
22.7201 10.1374 22.7773 9.78841 22.7773 9.33008  c
22.7773 8.93945 l
h
25.4824 12.0645 m
25.4824 5.84570 l
26.4199 5.84570 l
26.4199 6.72070 l
26.8783 6.04362 27.5397 5.70508 28.4043 5.70508  c
28.7793 5.70508 29.1257 5.77279 29.4434 5.90820  c
29.7611 6.04362 29.9980 6.22070 30.1543 6.43945  c
30.3105 6.65820 30.4199 6.91341 30.4824 7.20508  c
30.5137 7.40299 30.5293 7.74674 30.5293 8.23633  c
30.5293 12.0645 l
29.4824 12.0645 l
29.4824 8.28320 l
29.4824 7.84570 29.4408 7.52279 29.3574 7.31445  c
29.2741 7.10612 29.1283 6.93685 28.9199 6.80664  c
28.7116 6.67643 28.4668 6.61133 28.1855 6.61133  c
27.7376 6.61133 27.3496 6.75456 27.0215 7.04102  c
26.6934 7.32747 26.5293 7.86654 26.5293 8.65820  c
26.5293 12.0645 l
25.4824 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
0 J
2 j
0 j
1.00000 1.00000 1.00000 RG
newpath
32.0000 111.000 m
32.0000 181.000 l
32.0000 182.657 33.3431 184.000 35.0000 184.000  c
125.000 184.000 l
126.657 184.000 128.000 182.657 128.000 181.000  c
128.000 111.000 l
128.000 109.343 126.657 108.000 125.000 108.000  c
35.0000 108.000 l
33.3431 108.000 32.0000 109.343 32.0000 111.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
32.0000 111.000 m
32.0000 181.000 l
32.0000 182.657 33.3431 184.000 35.0000 184.000  c
125.000 184.000 l
126.657 184.000 128.000 182.657 128.000 181.000  c
128.000 111.000 l
128.000 109.343 126.657 108.000 125.000 108.000  c
35.0000 108.000 l
33.3431 108.000 32.0000 109.343 32.0000 111.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 108.0 32.0 184.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
34.5000 113.500 m
34.5000 180.500 l
34.5000 182.157 35.8431 183.500 37.5000 183.500  c
124.500 183.500 l
126.157 183.500 127.500 182.157 127.500 180.500  c
127.500 113.500 l
127.500 111.843 126.157 110.500 124.500 110.500  c
37.5000 110.500 l
35.8431 110.500 34.5000 111.843 34.5000 113.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 59.6494 116.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.875000 12.0645 m
.875000 3.47070 l
4.10938 3.47070 l
4.76562 3.47070 5.29167 3.55924 5.68750 3.73633  c
6.08333 3.91341 6.39323 4.18164 6.61719 4.54102  c
6.84115 4.90039 6.95312 5.27799 6.95312 5.67383  c
6.95312 6.03841 6.85417 6.38216 6.65625 6.70508  c
6.45833 7.02799 6.15625 7.28841 5.75000 7.48633  c
6.27083 7.64258 6.66927 7.90560 6.94531 8.27539  c
7.22135 8.64518 7.35938 9.08008 7.35938 9.58008  c
7.35938 9.97591 7.27604 10.3483 7.10938 10.6973  c
6.94271 11.0462 6.73438 11.3145 6.48438 11.5020  c
6.23438 11.6895 5.91927 11.8301 5.53906 11.9238  c
5.15885 12.0176 4.69792 12.0645 4.15625 12.0645  c
.875000 12.0645 l
h
2.01562 7.08008 m
3.87500 7.08008 l
4.37500 7.08008 4.73438 7.04883 4.95312 6.98633  c
5.24479 6.90299 5.46354 6.75977 5.60938 6.55664  c
5.75521 6.35352 5.82812 6.10091 5.82812 5.79883  c
5.82812 5.51758 5.76042 5.26758 5.62500 5.04883  c
5.48958 4.83008 5.29427 4.68164 5.03906 4.60352  c
4.78385 4.52539 4.34896 4.48633 3.73438 4.48633  c
2.01562 4.48633 l
2.01562 7.08008 l
h
2.01562 11.0488 m
4.15625 11.0488 l
4.52083 11.0488 4.77604 11.0332 4.92188 11.0020  c
5.19271 10.9603 5.41406 10.8848 5.58594 10.7754  c
5.75781 10.6660 5.90104 10.5072 6.01562 10.2988  c
6.13021 10.0905 6.18750 9.85091 6.18750 9.58008  c
6.18750 9.25716 6.10677 8.97591 5.94531 8.73633  c
5.78385 8.49674 5.55729 8.33008 5.26562 8.23633  c
4.97396 8.14258 4.55208 8.09570 4.00000 8.09570  c
2.01562 8.09570 l
2.01562 11.0488 l
h
13.0508 10.0645 m
14.1445 10.1895 l
13.9779 10.8249 13.6602 11.3197 13.1914 11.6738  c
12.7227 12.0280 12.1289 12.2051 11.4102 12.2051  c
10.5039 12.2051 9.78255 11.9238 9.24609 11.3613  c
8.70964 10.7988 8.44141 10.0124 8.44141 9.00195  c
8.44141 7.96029 8.71224 7.15039 9.25391 6.57227  c
9.79557 5.99414 10.4935 5.70508 11.3477 5.70508  c
12.1810 5.70508 12.8607 5.98633 13.3867 6.54883  c
13.9128 7.11133 14.1758 7.90820 14.1758 8.93945  c
14.1758 9.00195 14.1758 9.09570 14.1758 9.22070  c
9.53516 9.22070 l
9.57682 9.90820 9.76953 10.4316 10.1133 10.7910  c
10.4570 11.1504 10.8893 11.3301 11.4102 11.3301  c
11.7956 11.3301 12.1263 11.2285 12.4023 11.0254  c
12.6784 10.8223 12.8945 10.5020 13.0508 10.0645  c
h
9.59766 8.36133 m
13.0664 8.36133 l
13.0247 7.83008 12.8945 7.43424 12.6758 7.17383  c
12.3320 6.76758 11.8945 6.56445 11.3633 6.56445  c
10.8737 6.56445 10.4648 6.72591 10.1367 7.04883  c
9.80859 7.37174 9.62891 7.80924 9.59766 8.36133  c
h
19.5371 11.2988 m
19.1413 11.6322 18.7637 11.8665 18.4043 12.0020  c
18.0449 12.1374 17.6569 12.2051 17.2402 12.2051  c
16.5527 12.2051 16.0267 12.0384 15.6621 11.7051  c
15.2975 11.3717 15.1152 10.9447 15.1152 10.4238  c
15.1152 10.1217 15.1829 9.84310 15.3184 9.58789  c
15.4538 9.33268 15.6361 9.12956 15.8652 8.97852  c
16.0944 8.82747 16.3496 8.71549 16.6309 8.64258  c
16.8288 8.58008 17.1413 8.52279 17.5684 8.47070  c
18.4121 8.37695 19.0371 8.25716 19.4434 8.11133  c
19.4434 7.96549 19.4434 7.87695 19.4434 7.84570  c
19.4434 7.40820 19.3444 7.10091 19.1465 6.92383  c
18.8757 6.69466 18.4746 6.58008 17.9434 6.58008  c
17.4538 6.58008 17.0892 6.66602 16.8496 6.83789  c
16.6100 7.00977 16.4329 7.31445 16.3184 7.75195  c
15.2871 7.61133 l
15.3809 7.17383 15.5371 6.81966 15.7559 6.54883  c
15.9746 6.27799 16.2871 6.06966 16.6934 5.92383  c
17.0996 5.77799 17.5684 5.70508 18.0996 5.70508  c
18.6309 5.70508 19.0632 5.76758 19.3965 5.89258  c
19.7298 6.01758 19.9746 6.17383 20.1309 6.36133  c
20.2871 6.54883 20.3965 6.78841 20.4590 7.08008  c
20.4902 7.25716 20.5059 7.58008 20.5059 8.04883  c
20.5059 9.45508 l
20.5059 10.4342 20.5293 11.0540 20.5762 11.3145  c
20.6230 11.5749 20.7142 11.8249 20.8496 12.0645  c
19.7402 12.0645 l
19.6361 11.8457 19.5684 11.5905 19.5371 11.2988  c
h
19.4434 8.93945 m
19.0579 9.09570 18.4850 9.23112 17.7246 9.34570  c
17.2871 9.40820 16.9798 9.47852 16.8027 9.55664  c
16.6257 9.63477 16.4876 9.74674 16.3887 9.89258  c
16.2897 10.0384 16.2402 10.2051 16.2402 10.3926  c
16.2402 10.6738 16.3470 10.9082 16.5605 11.0957  c
16.7741 11.2832 17.0840 11.3770 17.4902 11.3770  c
17.8965 11.3770 18.2585 11.2884 18.5762 11.1113  c
18.8939 10.9342 19.1257 10.6895 19.2715 10.3770  c
19.3861 10.1374 19.4434 9.78841 19.4434 9.33008  c
19.4434 8.93945 l
h
22.1484 12.0645 m
22.1484 5.84570 l
23.0859 5.84570 l
23.0859 6.72070 l
23.5443 6.04362 24.2057 5.70508 25.0703 5.70508  c
25.4453 5.70508 25.7917 5.77279 26.1094 5.90820  c
26.4271 6.04362 26.6641 6.22070 26.8203 6.43945  c
26.9766 6.65820 27.0859 6.91341 27.1484 7.20508  c
27.1797 7.40299 27.1953 7.74674 27.1953 8.23633  c
27.1953 12.0645 l
26.1484 12.0645 l
26.1484 8.28320 l
26.1484 7.84570 26.1068 7.52279 26.0234 7.31445  c
25.9401 7.10612 25.7943 6.93685 25.5859 6.80664  c
25.3776 6.67643 25.1328 6.61133 24.8516 6.61133  c
24.4036 6.61133 24.0156 6.75456 23.6875 7.04102  c
23.3594 7.32747 23.1953 7.86654 23.1953 8.65820  c
23.1953 12.0645 l
22.1484 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
104.799 116.000 m
116.000 116.000 l
116.000 130.701 l
104.799 130.701 l
104.799 116.000 l
h
f
1.00000 w
0 j
newpath
104.799 116.000 m
116.000 116.000 l
116.000 130.701 l
104.799 130.701 l
104.799 116.000 l
h
S
newpath
101.299 119.351 m
108.299 119.351 l
108.299 122.351 l
101.299 122.351 l
101.299 119.351 l
h
f
.752941 .752941 .752941 RG
newpath
101.299 119.351 m
108.299 119.351 l
108.299 122.351 l
101.299 122.351 l
101.299 119.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
101.299 124.351 m
108.299 124.351 l
108.299 127.351 l
101.299 127.351 l
101.299 124.351 l
h
f
.752941 .752941 .752941 RG
newpath
101.299 124.351 m
108.299 124.351 l
108.299 127.351 l
101.299 127.351 l
101.299 124.351 l
h
S
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 52.0000 60.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.20898 12.0645 m
4.20898 3.47070 l
7.44336 3.47070 l
8.09961 3.47070 8.62565 3.55924 9.02148 3.73633  c
9.41732 3.91341 9.72721 4.18164 9.95117 4.54102  c
10.1751 4.90039 10.2871 5.27799 10.2871 5.67383  c
10.2871 6.03841 10.1882 6.38216 9.99023 6.70508  c
9.79232 7.02799 9.49023 7.28841 9.08398 7.48633  c
9.60482 7.64258 10.0033 7.90560 10.2793 8.27539  c
10.5553 8.64518 10.6934 9.08008 10.6934 9.58008  c
10.6934 9.97591 10.6100 10.3483 10.4434 10.6973  c
10.2767 11.0462 10.0684 11.3145 9.81836 11.5020  c
9.56836 11.6895 9.25326 11.8301 8.87305 11.9238  c
8.49284 12.0176 8.03190 12.0645 7.49023 12.0645  c
4.20898 12.0645 l
h
5.34961 7.08008 m
7.20898 7.08008 l
7.70898 7.08008 8.06836 7.04883 8.28711 6.98633  c
8.57878 6.90299 8.79753 6.75977 8.94336 6.55664  c
9.08919 6.35352 9.16211 6.10091 9.16211 5.79883  c
9.16211 5.51758 9.09440 5.26758 8.95898 5.04883  c
8.82357 4.83008 8.62826 4.68164 8.37305 4.60352  c
8.11784 4.52539 7.68294 4.48633 7.06836 4.48633  c
5.34961 4.48633 l
5.34961 7.08008 l
h
5.34961 11.0488 m
7.49023 11.0488 l
7.85482 11.0488 8.11003 11.0332 8.25586 11.0020  c
8.52669 10.9603 8.74805 10.8848 8.91992 10.7754  c
9.09180 10.6660 9.23503 10.5072 9.34961 10.2988  c
9.46419 10.0905 9.52148 9.85091 9.52148 9.58008  c
9.52148 9.25716 9.44076 8.97591 9.27930 8.73633  c
9.11784 8.49674 8.89128 8.33008 8.59961 8.23633  c
8.30794 8.14258 7.88607 8.09570 7.33398 8.09570  c
5.34961 8.09570 l
5.34961 11.0488 l
h
16.3848 10.0645 m
17.4785 10.1895 l
17.3118 10.8249 16.9941 11.3197 16.5254 11.6738  c
16.0566 12.0280 15.4629 12.2051 14.7441 12.2051  c
13.8379 12.2051 13.1165 11.9238 12.5801 11.3613  c
12.0436 10.7988 11.7754 10.0124 11.7754 9.00195  c
11.7754 7.96029 12.0462 7.15039 12.5879 6.57227  c
13.1296 5.99414 13.8275 5.70508 14.6816 5.70508  c
15.5150 5.70508 16.1947 5.98633 16.7207 6.54883  c
17.2467 7.11133 17.5098 7.90820 17.5098 8.93945  c
17.5098 9.00195 17.5098 9.09570 17.5098 9.22070  c
12.8691 9.22070 l
12.9108 9.90820 13.1035 10.4316 13.4473 10.7910  c
13.7910 11.1504 14.2233 11.3301 14.7441 11.3301  c
15.1296 11.3301 15.4603 11.2285 15.7363 11.0254  c
16.0124 10.8223 16.2285 10.5020 16.3848 10.0645  c
h
12.9316 8.36133 m
16.4004 8.36133 l
16.3587 7.83008 16.2285 7.43424 16.0098 7.17383  c
15.6660 6.76758 15.2285 6.56445 14.6973 6.56445  c
14.2077 6.56445 13.7988 6.72591 13.4707 7.04883  c
13.1426 7.37174 12.9629 7.80924 12.9316 8.36133  c
h
22.8711 11.2988 m
22.4753 11.6322 22.0977 11.8665 21.7383 12.0020  c
21.3789 12.1374 20.9909 12.2051 20.5742 12.2051  c
19.8867 12.2051 19.3607 12.0384 18.9961 11.7051  c
18.6315 11.3717 18.4492 10.9447 18.4492 10.4238  c
18.4492 10.1217 18.5169 9.84310 18.6523 9.58789  c
18.7878 9.33268 18.9701 9.12956 19.1992 8.97852  c
19.4284 8.82747 19.6836 8.71549 19.9648 8.64258  c
20.1628 8.58008 20.4753 8.52279 20.9023 8.47070  c
21.7461 8.37695 22.3711 8.25716 22.7773 8.11133  c
22.7773 7.96549 22.7773 7.87695 22.7773 7.84570  c
22.7773 7.40820 22.6784 7.10091 22.4805 6.92383  c
22.2096 6.69466 21.8086 6.58008 21.2773 6.58008  c
20.7878 6.58008 20.4232 6.66602 20.1836 6.83789  c
19.9440 7.00977 19.7669 7.31445 19.6523 7.75195  c
18.6211 7.61133 l
18.7148 7.17383 18.8711 6.81966 19.0898 6.54883  c
19.3086 6.27799 19.6211 6.06966 20.0273 5.92383  c
20.4336 5.77799 20.9023 5.70508 21.4336 5.70508  c
21.9648 5.70508 22.3971 5.76758 22.7305 5.89258  c
23.0638 6.01758 23.3086 6.17383 23.4648 6.36133  c
23.6211 6.54883 23.7305 6.78841 23.7930 7.08008  c
23.8242 7.25716 23.8398 7.58008 23.8398 8.04883  c
23.8398 9.45508 l
23.8398 10.4342 23.8633 11.0540 23.9102 11.3145  c
23.9570 11.5749 24.0482 11.8249 24.1836 12.0645  c
23.0742 12.0645 l
22.9701 11.8457 22.9023 11.5905 22.8711 11.2988  c
h
22.7773 8.93945 m
22.3919 9.09570 21.8190 9.23112 21.0586 9.34570  c
20.6211 9.40820 20.3138 9.47852 20.1367 9.55664  c
19.9596 9.63477 19.8216 9.74674 19.7227 9.89258  c
19.6237 10.0384 19.5742 10.2051 19.5742 10.3926  c
19.5742 10.6738 19.6810 10.9082 19.8945 11.0957  c
20.1081 11.2832 20.4180 11.3770 20.8242 11.3770  c
21.2305 11.3770 21.5924 11.2884 21.9102 11.1113  c
22.2279 10.9342 22.4596 10.6895 22.6055 10.3770  c
22.7201 10.1374 22.7773 9.78841 22.7773 9.33008  c
22.7773 8.93945 l
h
25.4824 12.0645 m
25.4824 5.84570 l
26.4199 5.84570 l
26.4199 6.72070 l
26.8783 6.04362 27.5397 5.70508 28.4043 5.70508  c
28.7793 5.70508 29.1257 5.77279 29.4434 5.90820  c
29.7611 6.04362 29.9980 6.22070 30.1543 6.43945  c
30.3105 6.65820 30.4199 6.91341 30.4824 7.20508  c
30.5137 7.40299 30.5293 7.74674 30.5293 8.23633  c
30.5293 12.0645 l
29.4824 12.0645 l
29.4824 8.28320 l
29.4824 7.84570 29.4408 7.52279 29.3574 7.31445  c
29.2741 7.10612 29.1283 6.93685 28.9199 6.80664  c
28.7116 6.67643 28.4668 6.61133 28.1855 6.61133  c
27.7376 6.61133 27.3496 6.75456 27.0215 7.04102  c
26.6934 7.32747 26.5293 7.86654 26.5293 8.65820  c
26.5293 12.0645 l
25.4824 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
80.0000 44.0000 m
80.0000 50.6274 74.6274 56.0000 68.0000 56.0000  c
61.3726 56.0000 56.0000 50.6274 56.0000 44.0000  c
56.0000 37.3726 61.3726 32.0000 68.0000 32.0000  c
74.6274 32.0000 80.0000 37.3726 80.0000 44.0000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
80.0000 44.0000 m
80.0000 50.6274 74.6274 56.0000 68.0000 56.0000  c
61.3726 56.0000 56.0000 50.6274 56.0000 44.0000  c
56.0000 37.3726 61.3726 32.0000 68.0000 32.0000  c
74.6274 32.0000 80.0000 37.3726 80.0000 44.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
[ 1.00000 0.00000 0.00000 1.00000 283.983 60.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.25586 12.0645 m
4.25586 3.47070 l
5.41211 3.47070 l
9.92773 10.2207 l
9.92773 3.47070 l
11.0215 3.47070 l
11.0215 12.0645 l
9.84961 12.0645 l
5.33398 5.31445 l
5.33398 12.0645 l
4.25586 12.0645 l
h
17.0469 10.0645 m
18.1406 10.1895 l
17.9740 10.8249 17.6562 11.3197 17.1875 11.6738  c
16.7188 12.0280 16.1250 12.2051 15.4062 12.2051  c
14.5000 12.2051 13.7786 11.9238 13.2422 11.3613  c
12.7057 10.7988 12.4375 10.0124 12.4375 9.00195  c
12.4375 7.96029 12.7083 7.15039 13.2500 6.57227  c
13.7917 5.99414 14.4896 5.70508 15.3438 5.70508  c
16.1771 5.70508 16.8568 5.98633 17.3828 6.54883  c
17.9089 7.11133 18.1719 7.90820 18.1719 8.93945  c
18.1719 9.00195 18.1719 9.09570 18.1719 9.22070  c
13.5312 9.22070 l
13.5729 9.90820 13.7656 10.4316 14.1094 10.7910  c
14.4531 11.1504 14.8854 11.3301 15.4062 11.3301  c
15.7917 11.3301 16.1224 11.2285 16.3984 11.0254  c
16.6745 10.8223 16.8906 10.5020 17.0469 10.0645  c
h
13.5938 8.36133 m
17.0625 8.36133 l
17.0208 7.83008 16.8906 7.43424 16.6719 7.17383  c
16.3281 6.76758 15.8906 6.56445 15.3594 6.56445  c
14.8698 6.56445 14.4609 6.72591 14.1328 7.04883  c
13.8047 7.37174 13.6250 7.80924 13.5938 8.36133  c
h
18.7676 12.0645 m
21.0332 8.83008 l
18.9395 5.84570 l
20.2520 5.84570 l
21.2051 7.29883 l
21.3822 7.58008 21.5280 7.81445 21.6426 8.00195  c
21.8092 7.74154 21.9655 7.51237 22.1113 7.31445  c
23.1582 5.84570 l
24.4238 5.84570 l
22.2676 8.76758 l
24.5801 12.0645 l
23.2988 12.0645 l
22.0176 10.1270 l
21.6738 9.61133 l
20.0332 12.0645 l
18.7676 12.0645 l
h
27.7676 11.1270 m
27.9238 12.0488 l
27.6217 12.1113 27.3561 12.1426 27.1270 12.1426  c
26.7415 12.1426 26.4447 12.0827 26.2363 11.9629  c
26.0280 11.8431 25.8796 11.6842 25.7910 11.4863  c
25.7025 11.2884 25.6582 10.8717 25.6582 10.2363  c
25.6582 6.65820 l
24.8926 6.65820 l
24.8926 5.84570 l
25.6582 5.84570 l
25.6582 4.29883 l
26.7051 3.67383 l
26.7051 5.84570 l
27.7676 5.84570 l
27.7676 6.65820 l
26.7051 6.65820 l
26.7051 10.2988 l
26.7051 10.6009 26.7233 10.7936 26.7598 10.8770  c
26.7962 10.9603 26.8561 11.0280 26.9395 11.0801  c
27.0228 11.1322 27.1426 11.1582 27.2988 11.1582  c
27.4238 11.1582 27.5801 11.1478 27.7676 11.1270  c
h
28.8828 12.0645 m
28.8828 3.47070 l
32.1172 3.47070 l
32.7734 3.47070 33.2995 3.55924 33.6953 3.73633  c
34.0911 3.91341 34.4010 4.18164 34.6250 4.54102  c
34.8490 4.90039 34.9609 5.27799 34.9609 5.67383  c
34.9609 6.03841 34.8620 6.38216 34.6641 6.70508  c
34.4661 7.02799 34.1641 7.28841 33.7578 7.48633  c
34.2786 7.64258 34.6771 7.90560 34.9531 8.27539  c
35.2292 8.64518 35.3672 9.08008 35.3672 9.58008  c
35.3672 9.97591 35.2839 10.3483 35.1172 10.6973  c
34.9505 11.0462 34.7422 11.3145 34.4922 11.5020  c
34.2422 11.6895 33.9271 11.8301 33.5469 11.9238  c
33.1667 12.0176 32.7057 12.0645 32.1641 12.0645  c
28.8828 12.0645 l
h
30.0234 7.08008 m
31.8828 7.08008 l
32.3828 7.08008 32.7422 7.04883 32.9609 6.98633  c
33.2526 6.90299 33.4714 6.75977 33.6172 6.55664  c
33.7630 6.35352 33.8359 6.10091 33.8359 5.79883  c
33.8359 5.51758 33.7682 5.26758 33.6328 5.04883  c
33.4974 4.83008 33.3021 4.68164 33.0469 4.60352  c
32.7917 4.52539 32.3568 4.48633 31.7422 4.48633  c
30.0234 4.48633 l
30.0234 7.08008 l
h
30.0234 11.0488 m
32.1641 11.0488 l
32.5286 11.0488 32.7839 11.0332 32.9297 11.0020  c
33.2005 10.9603 33.4219 10.8848 33.5938 10.7754  c
33.7656 10.6660 33.9089 10.5072 34.0234 10.2988  c
34.1380 10.0905 34.1953 9.85091 34.1953 9.58008  c
34.1953 9.25716 34.1146 8.97591 33.9531 8.73633  c
33.7917 8.49674 33.5651 8.33008 33.2734 8.23633  c
32.9818 8.14258 32.5599 8.09570 32.0078 8.09570  c
30.0234 8.09570 l
30.0234 11.0488 l
h
41.0586 10.0645 m
42.1523 10.1895 l
41.9857 10.8249 41.6680 11.3197 41.1992 11.6738  c
40.7305 12.0280 40.1367 12.2051 39.4180 12.2051  c
38.5117 12.2051 37.7904 11.9238 37.2539 11.3613  c
36.7174 10.7988 36.4492 10.0124 36.4492 9.00195  c
36.4492 7.96029 36.7201 7.15039 37.2617 6.57227  c
37.8034 5.99414 38.5013 5.70508 39.3555 5.70508  c
40.1888 5.70508 40.8685 5.98633 41.3945 6.54883  c
41.9206 7.11133 42.1836 7.90820 42.1836 8.93945  c
42.1836 9.00195 42.1836 9.09570 42.1836 9.22070  c
37.5430 9.22070 l
37.5846 9.90820 37.7773 10.4316 38.1211 10.7910  c
38.4648 11.1504 38.8971 11.3301 39.4180 11.3301  c
39.8034 11.3301 40.1341 11.2285 40.4102 11.0254  c
40.6862 10.8223 40.9023 10.5020 41.0586 10.0645  c
h
37.6055 8.36133 m
41.0742 8.36133 l
41.0326 7.83008 40.9023 7.43424 40.6836 7.17383  c
40.3398 6.76758 39.9023 6.56445 39.3711 6.56445  c
38.8815 6.56445 38.4727 6.72591 38.1445 7.04883  c
37.8164 7.37174 37.6367 7.80924 37.6055 8.36133  c
h
47.5449 11.2988 m
47.1491 11.6322 46.7715 11.8665 46.4121 12.0020  c
46.0527 12.1374 45.6647 12.2051 45.2480 12.2051  c
44.5605 12.2051 44.0345 12.0384 43.6699 11.7051  c
43.3053 11.3717 43.1230 10.9447 43.1230 10.4238  c
43.1230 10.1217 43.1908 9.84310 43.3262 9.58789  c
43.4616 9.33268 43.6439 9.12956 43.8730 8.97852  c
44.1022 8.82747 44.3574 8.71549 44.6387 8.64258  c
44.8366 8.58008 45.1491 8.52279 45.5762 8.47070  c
46.4199 8.37695 47.0449 8.25716 47.4512 8.11133  c
47.4512 7.96549 47.4512 7.87695 47.4512 7.84570  c
47.4512 7.40820 47.3522 7.10091 47.1543 6.92383  c
46.8835 6.69466 46.4824 6.58008 45.9512 6.58008  c
45.4616 6.58008 45.0970 6.66602 44.8574 6.83789  c
44.6178 7.00977 44.4408 7.31445 44.3262 7.75195  c
43.2949 7.61133 l
43.3887 7.17383 43.5449 6.81966 43.7637 6.54883  c
43.9824 6.27799 44.2949 6.06966 44.7012 5.92383  c
45.1074 5.77799 45.5762 5.70508 46.1074 5.70508  c
46.6387 5.70508 47.0710 5.76758 47.4043 5.89258  c
47.7376 6.01758 47.9824 6.17383 48.1387 6.36133  c
48.2949 6.54883 48.4043 6.78841 48.4668 7.08008  c
48.4980 7.25716 48.5137 7.58008 48.5137 8.04883  c
48.5137 9.45508 l
48.5137 10.4342 48.5371 11.0540 48.5840 11.3145  c
48.6309 11.5749 48.7220 11.8249 48.8574 12.0645  c
47.7480 12.0645 l
47.6439 11.8457 47.5762 11.5905 47.5449 11.2988  c
h
47.4512 8.93945 m
47.0658 9.09570 46.4928 9.23112 45.7324 9.34570  c
45.2949 9.40820 44.9876 9.47852 44.8105 9.55664  c
44.6335 9.63477 44.4954 9.74674 44.3965 9.89258  c
44.2975 10.0384 44.2480 10.2051 44.2480 10.3926  c
44.2480 10.6738 44.3548 10.9082 44.5684 11.0957  c
44.7819 11.2832 45.0918 11.3770 45.4980 11.3770  c
45.9043 11.3770 46.2663 11.2884 46.5840 11.1113  c
46.9017 10.9342 47.1335 10.6895 47.2793 10.3770  c
47.3939 10.1374 47.4512 9.78841 47.4512 9.33008  c
47.4512 8.93945 l
h
50.1562 12.0645 m
50.1562 5.84570 l
51.0938 5.84570 l
51.0938 6.72070 l
51.5521 6.04362 52.2135 5.70508 53.0781 5.70508  c
53.4531 5.70508 53.7995 5.77279 54.1172 5.90820  c
54.4349 6.04362 54.6719 6.22070 54.8281 6.43945  c
54.9844 6.65820 55.0938 6.91341 55.1562 7.20508  c
55.1875 7.40299 55.2031 7.74674 55.2031 8.23633  c
55.2031 12.0645 l
54.1562 12.0645 l
54.1562 8.28320 l
54.1562 7.84570 54.1146 7.52279 54.0312 7.31445  c
53.9479 7.10612 53.8021 6.93685 53.5938 6.80664  c
53.3854 6.67643 53.1406 6.61133 52.8594 6.61133  c
52.4115 6.61133 52.0234 6.75456 51.6953 7.04102  c
51.3672 7.32747 51.2031 7.86654 51.2031 8.65820  c
51.2031 12.0645 l
50.1562 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
324.000 44.0000 m
324.000 50.6274 318.627 56.0000 312.000 56.0000  c
305.373 56.0000 300.000 50.6274 300.000 44.0000  c
300.000 37.3726 305.373 32.0000 312.000 32.0000  c
318.627 32.0000 324.000 37.3726 324.000 44.0000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
324.000 44.0000 m
324.000 50.6274 318.627 56.0000 312.000 56.0000  c
305.373 56.0000 300.000 50.6274 300.000 44.0000  c
300.000 37.3726 305.373 32.0000 312.000 32.0000  c
318.627 32.0000 324.000 37.3726 324.000 44.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
264.000 111.000 m
264.000 181.000 l
264.000 182.657 265.343 184.000 267.000 184.000  c
365.701 184.000 l
367.358 184.000 368.701 182.657 368.701 181.000  c
368.701 111.000 l
368.701 109.343 367.358 108.000 365.701 108.000  c
267.000 108.000 l
265.343 108.000 264.000 109.343 264.000 111.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
264.000 111.000 m
264.000 181.000 l
264.000 182.657 265.343 184.000 267.000 184.000  c
365.701 184.000 l
367.358 184.000 368.701 182.657 368.701 181.000  c
368.701 111.000 l
368.701 109.343 367.358 108.000 365.701 108.000  c
267.000 108.000 l
265.343 108.000 264.000 109.343 264.000 111.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [264.0 108.0 264.0 184.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
266.500 113.500 m
266.500 180.500 l
266.500 182.157 267.843 183.500 269.500 183.500  c
365.201 183.500 l
366.858 183.500 368.201 182.157 368.201 180.500  c
368.201 113.500 l
368.201 111.843 366.858 110.500 365.201 110.500  c
269.500 110.500 l
267.843 110.500 266.500 111.843 266.500 113.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 284.000 116.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.921875 12.0645 m
.921875 3.47070 l
2.07812 3.47070 l
6.59375 10.2207 l
6.59375 3.47070 l
7.68750 3.47070 l
7.68750 12.0645 l
6.51562 12.0645 l
2.00000 5.31445 l
2.00000 12.0645 l
.921875 12.0645 l
h
13.7129 10.0645 m
14.8066 10.1895 l
14.6400 10.8249 14.3223 11.3197 13.8535 11.6738  c
13.3848 12.0280 12.7910 12.2051 12.0723 12.2051  c
11.1660 12.2051 10.4447 11.9238 9.90820 11.3613  c
9.37174 10.7988 9.10352 10.0124 9.10352 9.00195  c
9.10352 7.96029 9.37435 7.15039 9.91602 6.57227  c
10.4577 5.99414 11.1556 5.70508 12.0098 5.70508  c
12.8431 5.70508 13.5228 5.98633 14.0488 6.54883  c
14.5749 7.11133 14.8379 7.90820 14.8379 8.93945  c
14.8379 9.00195 14.8379 9.09570 14.8379 9.22070  c
10.1973 9.22070 l
10.2389 9.90820 10.4316 10.4316 10.7754 10.7910  c
11.1191 11.1504 11.5514 11.3301 12.0723 11.3301  c
12.4577 11.3301 12.7884 11.2285 13.0645 11.0254  c
13.3405 10.8223 13.5566 10.5020 13.7129 10.0645  c
h
10.2598 8.36133 m
13.7285 8.36133 l
13.6868 7.83008 13.5566 7.43424 13.3379 7.17383  c
12.9941 6.76758 12.5566 6.56445 12.0254 6.56445  c
11.5358 6.56445 11.1270 6.72591 10.7988 7.04883  c
10.4707 7.37174 10.2910 7.80924 10.2598 8.36133  c
h
15.4336 12.0645 m
17.6992 8.83008 l
15.6055 5.84570 l
16.9180 5.84570 l
17.8711 7.29883 l
18.0482 7.58008 18.1940 7.81445 18.3086 8.00195  c
18.4753 7.74154 18.6315 7.51237 18.7773 7.31445  c
19.8242 5.84570 l
21.0898 5.84570 l
18.9336 8.76758 l
21.2461 12.0645 l
19.9648 12.0645 l
18.6836 10.1270 l
18.3398 9.61133 l
16.6992 12.0645 l
15.4336 12.0645 l
h
24.4336 11.1270 m
24.5898 12.0488 l
24.2878 12.1113 24.0221 12.1426 23.7930 12.1426  c
23.4076 12.1426 23.1107 12.0827 22.9023 11.9629  c
22.6940 11.8431 22.5456 11.6842 22.4570 11.4863  c
22.3685 11.2884 22.3242 10.8717 22.3242 10.2363  c
22.3242 6.65820 l
21.5586 6.65820 l
21.5586 5.84570 l
22.3242 5.84570 l
22.3242 4.29883 l
23.3711 3.67383 l
23.3711 5.84570 l
24.4336 5.84570 l
24.4336 6.65820 l
23.3711 6.65820 l
23.3711 10.2988 l
23.3711 10.6009 23.3893 10.7936 23.4258 10.8770  c
23.4622 10.9603 23.5221 11.0280 23.6055 11.0801  c
23.6888 11.1322 23.8086 11.1582 23.9648 11.1582  c
24.0898 11.1582 24.2461 11.1478 24.4336 11.1270  c
h
25.5488 12.0645 m
25.5488 3.47070 l
28.7832 3.47070 l
29.4395 3.47070 29.9655 3.55924 30.3613 3.73633  c
30.7572 3.91341 31.0671 4.18164 31.2910 4.54102  c
31.5150 4.90039 31.6270 5.27799 31.6270 5.67383  c
31.6270 6.03841 31.5280 6.38216 31.3301 6.70508  c
31.1322 7.02799 30.8301 7.28841 30.4238 7.48633  c
30.9447 7.64258 31.3431 7.90560 31.6191 8.27539  c
31.8952 8.64518 32.0332 9.08008 32.0332 9.58008  c
32.0332 9.97591 31.9499 10.3483 31.7832 10.6973  c
31.6165 11.0462 31.4082 11.3145 31.1582 11.5020  c
30.9082 11.6895 30.5931 11.8301 30.2129 11.9238  c
29.8327 12.0176 29.3717 12.0645 28.8301 12.0645  c
25.5488 12.0645 l
h
26.6895 7.08008 m
28.5488 7.08008 l
29.0488 7.08008 29.4082 7.04883 29.6270 6.98633  c
29.9186 6.90299 30.1374 6.75977 30.2832 6.55664  c
30.4290 6.35352 30.5020 6.10091 30.5020 5.79883  c
30.5020 5.51758 30.4342 5.26758 30.2988 5.04883  c
30.1634 4.83008 29.9681 4.68164 29.7129 4.60352  c
29.4577 4.52539 29.0228 4.48633 28.4082 4.48633  c
26.6895 4.48633 l
26.6895 7.08008 l
h
26.6895 11.0488 m
28.8301 11.0488 l
29.1947 11.0488 29.4499 11.0332 29.5957 11.0020  c
29.8665 10.9603 30.0879 10.8848 30.2598 10.7754  c
30.4316 10.6660 30.5749 10.5072 30.6895 10.2988  c
30.8040 10.0905 30.8613 9.85091 30.8613 9.58008  c
30.8613 9.25716 30.7806 8.97591 30.6191 8.73633  c
30.4577 8.49674 30.2311 8.33008 29.9395 8.23633  c
29.6478 8.14258 29.2259 8.09570 28.6738 8.09570  c
26.6895 8.09570 l
26.6895 11.0488 l
h
37.7246 10.0645 m
38.8184 10.1895 l
38.6517 10.8249 38.3340 11.3197 37.8652 11.6738  c
37.3965 12.0280 36.8027 12.2051 36.0840 12.2051  c
35.1777 12.2051 34.4564 11.9238 33.9199 11.3613  c
33.3835 10.7988 33.1152 10.0124 33.1152 9.00195  c
33.1152 7.96029 33.3861 7.15039 33.9277 6.57227  c
34.4694 5.99414 35.1673 5.70508 36.0215 5.70508  c
36.8548 5.70508 37.5345 5.98633 38.0605 6.54883  c
38.5866 7.11133 38.8496 7.90820 38.8496 8.93945  c
38.8496 9.00195 38.8496 9.09570 38.8496 9.22070  c
34.2090 9.22070 l
34.2507 9.90820 34.4434 10.4316 34.7871 10.7910  c
35.1309 11.1504 35.5632 11.3301 36.0840 11.3301  c
36.4694 11.3301 36.8001 11.2285 37.0762 11.0254  c
37.3522 10.8223 37.5684 10.5020 37.7246 10.0645  c
h
34.2715 8.36133 m
37.7402 8.36133 l
37.6986 7.83008 37.5684 7.43424 37.3496 7.17383  c
37.0059 6.76758 36.5684 6.56445 36.0371 6.56445  c
35.5475 6.56445 35.1387 6.72591 34.8105 7.04883  c
34.4824 7.37174 34.3027 7.80924 34.2715 8.36133  c
h
44.2109 11.2988 m
43.8151 11.6322 43.4375 11.8665 43.0781 12.0020  c
42.7188 12.1374 42.3307 12.2051 41.9141 12.2051  c
41.2266 12.2051 40.7005 12.0384 40.3359 11.7051  c
39.9714 11.3717 39.7891 10.9447 39.7891 10.4238  c
39.7891 10.1217 39.8568 9.84310 39.9922 9.58789  c
40.1276 9.33268 40.3099 9.12956 40.5391 8.97852  c
40.7682 8.82747 41.0234 8.71549 41.3047 8.64258  c
41.5026 8.58008 41.8151 8.52279 42.2422 8.47070  c
43.0859 8.37695 43.7109 8.25716 44.1172 8.11133  c
44.1172 7.96549 44.1172 7.87695 44.1172 7.84570  c
44.1172 7.40820 44.0182 7.10091 43.8203 6.92383  c
43.5495 6.69466 43.1484 6.58008 42.6172 6.58008  c
42.1276 6.58008 41.7630 6.66602 41.5234 6.83789  c
41.2839 7.00977 41.1068 7.31445 40.9922 7.75195  c
39.9609 7.61133 l
40.0547 7.17383 40.2109 6.81966 40.4297 6.54883  c
40.6484 6.27799 40.9609 6.06966 41.3672 5.92383  c
41.7734 5.77799 42.2422 5.70508 42.7734 5.70508  c
43.3047 5.70508 43.7370 5.76758 44.0703 5.89258  c
44.4036 6.01758 44.6484 6.17383 44.8047 6.36133  c
44.9609 6.54883 45.0703 6.78841 45.1328 7.08008  c
45.1641 7.25716 45.1797 7.58008 45.1797 8.04883  c
45.1797 9.45508 l
45.1797 10.4342 45.2031 11.0540 45.2500 11.3145  c
45.2969 11.5749 45.3880 11.8249 45.5234 12.0645  c
44.4141 12.0645 l
44.3099 11.8457 44.2422 11.5905 44.2109 11.2988  c
h
44.1172 8.93945 m
43.7318 9.09570 43.1589 9.23112 42.3984 9.34570  c
41.9609 9.40820 41.6536 9.47852 41.4766 9.55664  c
41.2995 9.63477 41.1615 9.74674 41.0625 9.89258  c
40.9635 10.0384 40.9141 10.2051 40.9141 10.3926  c
40.9141 10.6738 41.0208 10.9082 41.2344 11.0957  c
41.4479 11.2832 41.7578 11.3770 42.1641 11.3770  c
42.5703 11.3770 42.9323 11.2884 43.2500 11.1113  c
43.5677 10.9342 43.7995 10.6895 43.9453 10.3770  c
44.0599 10.1374 44.1172 9.78841 44.1172 9.33008  c
44.1172 8.93945 l
h
46.8223 12.0645 m
46.8223 5.84570 l
47.7598 5.84570 l
47.7598 6.72070 l
48.2181 6.04362 48.8796 5.70508 49.7441 5.70508  c
50.1191 5.70508 50.4655 5.77279 50.7832 5.90820  c
51.1009 6.04362 51.3379 6.22070 51.4941 6.43945  c
51.6504 6.65820 51.7598 6.91341 51.8223 7.20508  c
51.8535 7.40299 51.8691 7.74674 51.8691 8.23633  c
51.8691 12.0645 l
50.8223 12.0645 l
50.8223 8.28320 l
50.8223 7.84570 50.7806 7.52279 50.6973 7.31445  c
50.6139 7.10612 50.4681 6.93685 50.2598 6.80664  c
50.0514 6.67643 49.8066 6.61133 49.5254 6.61133  c
49.0775 6.61133 48.6895 6.75456 48.3613 7.04102  c
48.0332 7.32747 47.8691 7.86654 47.8691 8.65820  c
47.8691 12.0645 l
46.8223 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
345.500 116.000 m
356.701 116.000 l
356.701 130.701 l
345.500 130.701 l
345.500 116.000 l
h
f
1.00000 w
0 j
newpath
345.500 116.000 m
356.701 116.000 l
356.701 130.701 l
345.500 130.701 l
345.500 116.000 l
h
S
newpath
342.000 119.351 m
349.000 119.351 l
349.000 122.351 l
342.000 122.351 l
342.000 119.351 l
h
f
.752941 .752941 .752941 RG
newpath
342.000 119.351 m
349.000 119.351 l
349.000 122.351 l
342.000 122.351 l
342.000 119.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
342.000 124.351 m
349.000 124.351 l
349.000 127.351 l
342.000 127.351 l
342.000 124.351 l
h
f
.752941 .752941 .752941 RG
newpath
342.000 124.351 m
349.000 124.351 l
349.000 127.351 l
342.000 127.351 l
342.000 124.351 l
h
S
0.00000 0.00000 0.00000 RG
2 j
0.00000 0.00000 0.00000 RG
newpath
312.000 100.000 m
312.000 74.5652 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
68.0000 100.000 m
68.0000 74.8192 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
60.0000 102.000 m
60.0000 114.000 l
60.0000 115.105 60.8954 116.000 62.0000 116.000  c
74.0000 116.000 l
75.1046 116.000 76.0000 115.105 76.0000 114.000  c
76.0000 102.000 l
76.0000 100.895 75.1046 100.000 74.0000 100.000  c
62.0000 100.000 l
60.8954 100.000 60.0000 100.895 60.0000 102.000  c
h
f
1.50000 w
.525490 .525490 .525490 RG
newpath
60.0000 102.000 m
60.0000 114.000 l
60.0000 115.105 60.8954 116.000 62.0000 116.000  c
74.0000 116.000 l
75.1046 116.000 76.0000 115.105 76.0000 114.000  c
76.0000 102.000 l
76.0000 100.895 75.1046 100.000 74.0000 100.000  c
62.0000 100.000 l
60.8954 100.000 60.0000 100.895 60.0000 102.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [60.0 100.0 60.0 116.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
62.5000 104.500 m
62.5000 113.500 l
62.5000 114.605 63.3954 115.500 64.5000 115.500  c
73.5000 115.500 l
74.6046 115.500 75.5000 114.605 75.5000 113.500  c
75.5000 104.500 l
75.5000 103.395 74.6046 102.500 73.5000 102.500  c
64.5000 102.500 l
63.3954 102.500 62.5000 103.395 62.5000 104.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 80.0000 88.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.796875 12.0645 m
.796875 5.84570 l
1.73438 5.84570 l
1.73438 6.72070 l
1.93229 6.40820 2.19271 6.16081 2.51562 5.97852  c
2.83854 5.79622 3.20833 5.70508 3.62500 5.70508  c
4.08333 5.70508 4.46094 5.79883 4.75781 5.98633  c
5.05469 6.17383 5.26042 6.43945 5.37500 6.78320  c
5.87500 6.06445 6.51562 5.70508 7.29688 5.70508  c
7.92188 5.70508 8.39844 5.87435 8.72656 6.21289  c
9.05469 6.55143 9.21875 7.08008 9.21875 7.79883  c
9.21875 12.0645 l
8.17188 12.0645 l
8.17188 8.14258 l
8.17188 7.72591 8.13802 7.42383 8.07031 7.23633  c
8.00260 7.04883 7.88021 6.89779 7.70312 6.78320  c
7.52604 6.66862 7.31250 6.61133 7.06250 6.61133  c
6.62500 6.61133 6.26302 6.75716 5.97656 7.04883  c
5.69010 7.34049 5.54688 7.80924 5.54688 8.45508  c
5.54688 12.0645 l
4.48438 12.0645 l
4.48438 8.01758 l
4.48438 7.54883 4.39844 7.19727 4.22656 6.96289  c
4.05469 6.72852 3.77604 6.61133 3.39062 6.61133  c
3.08854 6.61133 2.81250 6.68945 2.56250 6.84570  c
2.31250 7.00195 2.13021 7.23112 2.01562 7.53320  c
1.90104 7.83529 1.84375 8.26758 1.84375 8.83008  c
1.84375 12.0645 l
.796875 12.0645 l
h
14.8555 11.2988 m
14.4596 11.6322 14.0820 11.8665 13.7227 12.0020  c
13.3633 12.1374 12.9753 12.2051 12.5586 12.2051  c
11.8711 12.2051 11.3451 12.0384 10.9805 11.7051  c
10.6159 11.3717 10.4336 10.9447 10.4336 10.4238  c
10.4336 10.1217 10.5013 9.84310 10.6367 9.58789  c
10.7721 9.33268 10.9544 9.12956 11.1836 8.97852  c
11.4128 8.82747 11.6680 8.71549 11.9492 8.64258  c
12.1471 8.58008 12.4596 8.52279 12.8867 8.47070  c
13.7305 8.37695 14.3555 8.25716 14.7617 8.11133  c
14.7617 7.96549 14.7617 7.87695 14.7617 7.84570  c
14.7617 7.40820 14.6628 7.10091 14.4648 6.92383  c
14.1940 6.69466 13.7930 6.58008 13.2617 6.58008  c
12.7721 6.58008 12.4076 6.66602 12.1680 6.83789  c
11.9284 7.00977 11.7513 7.31445 11.6367 7.75195  c
10.6055 7.61133 l
10.6992 7.17383 10.8555 6.81966 11.0742 6.54883  c
11.2930 6.27799 11.6055 6.06966 12.0117 5.92383  c
12.4180 5.77799 12.8867 5.70508 13.4180 5.70508  c
13.9492 5.70508 14.3815 5.76758 14.7148 5.89258  c
15.0482 6.01758 15.2930 6.17383 15.4492 6.36133  c
15.6055 6.54883 15.7148 6.78841 15.7773 7.08008  c
15.8086 7.25716 15.8242 7.58008 15.8242 8.04883  c
15.8242 9.45508 l
15.8242 10.4342 15.8477 11.0540 15.8945 11.3145  c
15.9414 11.5749 16.0326 11.8249 16.1680 12.0645  c
15.0586 12.0645 l
14.9544 11.8457 14.8867 11.5905 14.8555 11.2988  c
h
14.7617 8.93945 m
14.3763 9.09570 13.8034 9.23112 13.0430 9.34570  c
12.6055 9.40820 12.2982 9.47852 12.1211 9.55664  c
11.9440 9.63477 11.8060 9.74674 11.7070 9.89258  c
11.6081 10.0384 11.5586 10.2051 11.5586 10.3926  c
11.5586 10.6738 11.6654 10.9082 11.8789 11.0957  c
12.0924 11.2832 12.4023 11.3770 12.8086 11.3770  c
13.2148 11.3770 13.5768 11.2884 13.8945 11.1113  c
14.2122 10.9342 14.4440 10.6895 14.5898 10.3770  c
14.7044 10.1374 14.7617 9.78841 14.7617 9.33008  c
14.7617 8.93945 l
h
17.4668 4.68945 m
17.4668 3.47070 l
18.5293 3.47070 l
18.5293 4.68945 l
17.4668 4.68945 l
h
17.4668 12.0645 m
17.4668 5.84570 l
18.5293 5.84570 l
18.5293 12.0645 l
17.4668 12.0645 l
h
20.1328 12.0645 m
20.1328 5.84570 l
21.0703 5.84570 l
21.0703 6.72070 l
21.5286 6.04362 22.1901 5.70508 23.0547 5.70508  c
23.4297 5.70508 23.7760 5.77279 24.0938 5.90820  c
24.4115 6.04362 24.6484 6.22070 24.8047 6.43945  c
24.9609 6.65820 25.0703 6.91341 25.1328 7.20508  c
25.1641 7.40299 25.1797 7.74674 25.1797 8.23633  c
25.1797 12.0645 l
24.1328 12.0645 l
24.1328 8.28320 l
24.1328 7.84570 24.0911 7.52279 24.0078 7.31445  c
23.9245 7.10612 23.7786 6.93685 23.5703 6.80664  c
23.3620 6.67643 23.1172 6.61133 22.8359 6.61133  c
22.3880 6.61133 22.0000 6.75456 21.6719 7.04102  c
21.3438 7.32747 21.1797 7.86654 21.1797 8.65820  c
21.1797 12.0645 l
20.1328 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
newpath
256.000 160.000 m
228.453 160.000 l
S
newpath
216.000 172.000 m
222.627 172.000 228.000 166.627 228.000 160.000  c
228.000 153.373 222.627 148.000 216.000 148.000  c
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
256.000 154.000 m
256.000 166.000 l
256.000 167.105 256.895 168.000 258.000 168.000  c
270.000 168.000 l
271.105 168.000 272.000 167.105 272.000 166.000  c
272.000 154.000 l
272.000 152.895 271.105 152.000 270.000 152.000  c
258.000 152.000 l
256.895 152.000 256.000 152.895 256.000 154.000  c
h
f
1.50000 w
.525490 .525490 .525490 RG
newpath
256.000 154.000 m
256.000 166.000 l
256.000 167.105 256.895 168.000 258.000 168.000  c
270.000 168.000 l
271.105 168.000 272.000 167.105 272.000 166.000  c
272.000 154.000 l
272.000 152.895 271.105 152.000 270.000 152.000  c
258.000 152.000 l
256.895 152.000 256.000 152.895 256.000 154.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [256.0 152.0 256.0 168.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
258.500 156.500 m
258.500 165.500 l
258.500 166.605 259.395 167.500 260.500 167.500  c
269.500 167.500 l
270.605 167.500 271.500 166.605 271.500 165.500  c
271.500 156.500 l
271.500 155.395 270.605 154.500 269.500 154.500  c
260.500 154.500 l
259.395 154.500 258.500 155.395 258.500 156.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 212.000 128.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.781250 12.0645 m
.781250 5.84570 l
1.73438 5.84570 l
1.73438 6.78320 l
1.97396 6.34570 2.19531 6.05664 2.39844 5.91602  c
2.60156 5.77539 2.82812 5.70508 3.07812 5.70508  c
3.43229 5.70508 3.79167 5.81445 4.15625 6.03320  c
3.79688 7.01758 l
3.53646 6.86133 3.28125 6.78320 3.03125 6.78320  c
2.79167 6.78320 2.58073 6.85352 2.39844 6.99414  c
2.21615 7.13477 2.08854 7.33008 2.01562 7.58008  c
1.89062 7.95508 1.82812 8.36133 1.82812 8.79883  c
1.82812 12.0645 l
.781250 12.0645 l
h
9.04297 10.0645 m
10.1367 10.1895 l
9.97005 10.8249 9.65234 11.3197 9.18359 11.6738  c
8.71484 12.0280 8.12109 12.2051 7.40234 12.2051  c
6.49609 12.2051 5.77474 11.9238 5.23828 11.3613  c
4.70182 10.7988 4.43359 10.0124 4.43359 9.00195  c
4.43359 7.96029 4.70443 7.15039 5.24609 6.57227  c
5.78776 5.99414 6.48568 5.70508 7.33984 5.70508  c
8.17318 5.70508 8.85286 5.98633 9.37891 6.54883  c
9.90495 7.11133 10.1680 7.90820 10.1680 8.93945  c
10.1680 9.00195 10.1680 9.09570 10.1680 9.22070  c
5.52734 9.22070 l
5.56901 9.90820 5.76172 10.4316 6.10547 10.7910  c
6.44922 11.1504 6.88151 11.3301 7.40234 11.3301  c
7.78776 11.3301 8.11849 11.2285 8.39453 11.0254  c
8.67057 10.8223 8.88672 10.5020 9.04297 10.0645  c
h
5.58984 8.36133 m
9.05859 8.36133 l
9.01693 7.83008 8.88672 7.43424 8.66797 7.17383  c
8.32422 6.76758 7.88672 6.56445 7.35547 6.56445  c
6.86589 6.56445 6.45703 6.72591 6.12891 7.04883  c
5.80078 7.37174 5.62109 7.80924 5.58984 8.36133  c
h
15.4355 14.4551 m
15.4355 11.4082 l
15.2689 11.6374 15.0371 11.8275 14.7402 11.9785  c
14.4434 12.1296 14.1283 12.2051 13.7949 12.2051  c
13.0553 12.2051 12.4199 11.9108 11.8887 11.3223  c
11.3574 10.7337 11.0918 9.92383 11.0918 8.89258  c
11.0918 8.26758 11.2012 7.70768 11.4199 7.21289  c
11.6387 6.71810 11.9538 6.34310 12.3652 6.08789  c
12.7767 5.83268 13.2272 5.70508 13.7168 5.70508  c
14.4876 5.70508 15.0918 6.02799 15.5293 6.67383  c
15.5293 5.84570 l
16.4824 5.84570 l
16.4824 14.4551 l
15.4355 14.4551 l
h
12.1699 8.93945 m
12.1699 9.74154 12.3392 10.3405 12.6777 10.7363  c
13.0163 11.1322 13.4199 11.3301 13.8887 11.3301  c
14.3366 11.3301 14.7220 11.1400 15.0449 10.7598  c
15.3678 10.3796 15.5293 9.80404 15.5293 9.03320  c
15.5293 8.19987 15.3600 7.57487 15.0215 7.15820  c
14.6829 6.74154 14.2793 6.53320 13.8105 6.53320  c
13.3626 6.53320 12.9772 6.72852 12.6543 7.11914  c
12.3314 7.50977 12.1699 8.11654 12.1699 8.93945  c
h
22.2188 12.0645 m
22.2188 11.1426 l
21.7292 11.8509 21.0677 12.2051 20.2344 12.2051  c
19.8698 12.2051 19.5286 12.1348 19.2109 11.9941  c
18.8932 11.8535 18.6562 11.6764 18.5000 11.4629  c
18.3438 11.2493 18.2344 10.9863 18.1719 10.6738  c
18.1302 10.4759 18.1094 10.1478 18.1094 9.68945  c
18.1094 5.84570 l
19.1719 5.84570 l
19.1719 9.29883 l
19.1719 9.84049 19.1927 10.2103 19.2344 10.4082  c
19.2969 10.6790 19.4349 10.8952 19.6484 11.0566  c
19.8620 11.2181 20.1302 11.2988 20.4531 11.2988  c
20.7656 11.2988 21.0599 11.2181 21.3359 11.0566  c
21.6120 10.8952 21.8099 10.6738 21.9297 10.3926  c
22.0495 10.1113 22.1094 9.70508 22.1094 9.17383  c
22.1094 5.84570 l
23.1562 5.84570 l
23.1562 12.0645 l
22.2188 12.0645 l
h
24.8145 4.68945 m
24.8145 3.47070 l
25.8770 3.47070 l
25.8770 4.68945 l
24.8145 4.68945 l
h
24.8145 12.0645 m
24.8145 5.84570 l
25.8770 5.84570 l
25.8770 12.0645 l
24.8145 12.0645 l
h
27.4648 12.0645 m
27.4648 5.84570 l
28.4180 5.84570 l
28.4180 6.78320 l
28.6576 6.34570 28.8789 6.05664 29.0820 5.91602  c
29.2852 5.77539 29.5117 5.70508 29.7617 5.70508  c
30.1159 5.70508 30.4753 5.81445 30.8398 6.03320  c
30.4805 7.01758 l
30.2201 6.86133 29.9648 6.78320 29.7148 6.78320  c
29.4753 6.78320 29.2643 6.85352 29.0820 6.99414  c
28.8997 7.13477 28.7721 7.33008 28.6992 7.58008  c
28.5742 7.95508 28.5117 8.36133 28.5117 8.79883  c
28.5117 12.0645 l
27.4648 12.0645 l
h
35.7266 10.0645 m
36.8203 10.1895 l
36.6536 10.8249 36.3359 11.3197 35.8672 11.6738  c
35.3984 12.0280 34.8047 12.2051 34.0859 12.2051  c
33.1797 12.2051 32.4583 11.9238 31.9219 11.3613  c
31.3854 10.7988 31.1172 10.0124 31.1172 9.00195  c
31.1172 7.96029 31.3880 7.15039 31.9297 6.57227  c
32.4714 5.99414 33.1693 5.70508 34.0234 5.70508  c
34.8568 5.70508 35.5365 5.98633 36.0625 6.54883  c
36.5885 7.11133 36.8516 7.90820 36.8516 8.93945  c
36.8516 9.00195 36.8516 9.09570 36.8516 9.22070  c
32.2109 9.22070 l
32.2526 9.90820 32.4453 10.4316 32.7891 10.7910  c
33.1328 11.1504 33.5651 11.3301 34.0859 11.3301  c
34.4714 11.3301 34.8021 11.2285 35.0781 11.0254  c
35.3542 10.8223 35.5703 10.5020 35.7266 10.0645  c
h
32.2734 8.36133 m
35.7422 8.36133 l
35.7005 7.83008 35.5703 7.43424 35.3516 7.17383  c
35.0078 6.76758 34.5703 6.56445 34.0391 6.56445  c
33.5495 6.56445 33.1406 6.72591 32.8125 7.04883  c
32.4844 7.37174 32.3047 7.80924 32.2734 8.36133  c
h
42.1816 12.0645 m
42.1816 11.2832 l
41.7858 11.8978 41.2077 12.2051 40.4473 12.2051  c
39.9473 12.2051 39.4889 12.0671 39.0723 11.7910  c
38.6556 11.5150 38.3327 11.1322 38.1035 10.6426  c
37.8743 10.1530 37.7598 9.59049 37.7598 8.95508  c
37.7598 8.34049 37.8639 7.77799 38.0723 7.26758  c
38.2806 6.75716 38.5931 6.36914 39.0098 6.10352  c
39.4264 5.83789 39.8900 5.70508 40.4004 5.70508  c
40.7754 5.70508 41.1087 5.78320 41.4004 5.93945  c
41.6921 6.09570 41.9316 6.29883 42.1191 6.54883  c
42.1191 3.47070 l
43.1660 3.47070 l
43.1660 12.0645 l
42.1816 12.0645 l
h
38.8535 8.95508 m
38.8535 9.75716 39.0202 10.3535 39.3535 10.7441  c
39.6868 11.1348 40.0827 11.3301 40.5410 11.3301  c
40.9993 11.3301 41.3900 11.1426 41.7129 10.7676  c
42.0358 10.3926 42.1973 9.81966 42.1973 9.04883  c
42.1973 8.19466 42.0332 7.56966 41.7051 7.17383  c
41.3770 6.77799 40.9733 6.58008 40.4941 6.58008  c
40.0254 6.58008 39.6348 6.77018 39.3223 7.15039  c
39.0098 7.53060 38.8535 8.13216 38.8535 8.95508  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
304.000 102.000 m
304.000 114.000 l
304.000 115.105 304.895 116.000 306.000 116.000  c
318.000 116.000 l
319.105 116.000 320.000 115.105 320.000 114.000  c
320.000 102.000 l
320.000 100.895 319.105 100.000 318.000 100.000  c
306.000 100.000 l
304.895 100.000 304.000 100.895 304.000 102.000  c
h
f
.525490 .525490 .525490 RG
newpath
304.000 102.000 m
304.000 114.000 l
304.000 115.105 304.895 116.000 306.000 116.000  c
318.000 116.000 l
319.105 116.000 320.000 115.105 320.000 114.000  c
320.000 102.000 l
320.000 100.895 319.105 100.000 318.000 100.000  c
306.000 100.000 l
304.895 100.000 304.000 100.895 304.000 102.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [304.0 100.0 304.0 116.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
306.500 104.500 m
306.500 113.500 l
306.500 114.605 307.395 115.500 308.500 115.500  c
317.500 115.500 l
318.605 115.500 319.500 114.605 319.500 113.500  c
319.500 104.500 l
319.500 103.395 318.605 102.500 317.500 102.500  c
308.500 102.500 l
307.395 102.500 306.500 103.395 306.500 104.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 328.000 84.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.796875 12.0645 m
.796875 5.84570 l
1.73438 5.84570 l
1.73438 6.72070 l
1.93229 6.40820 2.19271 6.16081 2.51562 5.97852  c
2.83854 5.79622 3.20833 5.70508 3.62500 5.70508  c
4.08333 5.70508 4.46094 5.79883 4.75781 5.98633  c
5.05469 6.17383 5.26042 6.43945 5.37500 6.78320  c
5.87500 6.06445 6.51562 5.70508 7.29688 5.70508  c
7.92188 5.70508 8.39844 5.87435 8.72656 6.21289  c
9.05469 6.55143 9.21875 7.08008 9.21875 7.79883  c
9.21875 12.0645 l
8.17188 12.0645 l
8.17188 8.14258 l
8.17188 7.72591 8.13802 7.42383 8.07031 7.23633  c
8.00260 7.04883 7.88021 6.89779 7.70312 6.78320  c
7.52604 6.66862 7.31250 6.61133 7.06250 6.61133  c
6.62500 6.61133 6.26302 6.75716 5.97656 7.04883  c
5.69010 7.34049 5.54688 7.80924 5.54688 8.45508  c
5.54688 12.0645 l
4.48438 12.0645 l
4.48438 8.01758 l
4.48438 7.54883 4.39844 7.19727 4.22656 6.96289  c
4.05469 6.72852 3.77604 6.61133 3.39062 6.61133  c
3.08854 6.61133 2.81250 6.68945 2.56250 6.84570  c
2.31250 7.00195 2.13021 7.23112 2.01562 7.53320  c
1.90104 7.83529 1.84375 8.26758 1.84375 8.83008  c
1.84375 12.0645 l
.796875 12.0645 l
h
14.8555 11.2988 m
14.4596 11.6322 14.0820 11.8665 13.7227 12.0020  c
13.3633 12.1374 12.9753 12.2051 12.5586 12.2051  c
11.8711 12.2051 11.3451 12.0384 10.9805 11.7051  c
10.6159 11.3717 10.4336 10.9447 10.4336 10.4238  c
10.4336 10.1217 10.5013 9.84310 10.6367 9.58789  c
10.7721 9.33268 10.9544 9.12956 11.1836 8.97852  c
11.4128 8.82747 11.6680 8.71549 11.9492 8.64258  c
12.1471 8.58008 12.4596 8.52279 12.8867 8.47070  c
13.7305 8.37695 14.3555 8.25716 14.7617 8.11133  c
14.7617 7.96549 14.7617 7.87695 14.7617 7.84570  c
14.7617 7.40820 14.6628 7.10091 14.4648 6.92383  c
14.1940 6.69466 13.7930 6.58008 13.2617 6.58008  c
12.7721 6.58008 12.4076 6.66602 12.1680 6.83789  c
11.9284 7.00977 11.7513 7.31445 11.6367 7.75195  c
10.6055 7.61133 l
10.6992 7.17383 10.8555 6.81966 11.0742 6.54883  c
11.2930 6.27799 11.6055 6.06966 12.0117 5.92383  c
12.4180 5.77799 12.8867 5.70508 13.4180 5.70508  c
13.9492 5.70508 14.3815 5.76758 14.7148 5.89258  c
15.0482 6.01758 15.2930 6.17383 15.4492 6.36133  c
15.6055 6.54883 15.7148 6.78841 15.7773 7.08008  c
15.8086 7.25716 15.8242 7.58008 15.8242 8.04883  c
15.8242 9.45508 l
15.8242 10.4342 15.8477 11.0540 15.8945 11.3145  c
15.9414 11.5749 16.0326 11.8249 16.1680 12.0645  c
15.0586 12.0645 l
14.9544 11.8457 14.8867 11.5905 14.8555 11.2988  c
h
14.7617 8.93945 m
14.3763 9.09570 13.8034 9.23112 13.0430 9.34570  c
12.6055 9.40820 12.2982 9.47852 12.1211 9.55664  c
11.9440 9.63477 11.8060 9.74674 11.7070 9.89258  c
11.6081 10.0384 11.5586 10.2051 11.5586 10.3926  c
11.5586 10.6738 11.6654 10.9082 11.8789 11.0957  c
12.0924 11.2832 12.4023 11.3770 12.8086 11.3770  c
13.2148 11.3770 13.5768 11.2884 13.8945 11.1113  c
14.2122 10.9342 14.4440 10.6895 14.5898 10.3770  c
14.7044 10.1374 14.7617 9.78841 14.7617 9.33008  c
14.7617 8.93945 l
h
17.4668 4.68945 m
17.4668 3.47070 l
18.5293 3.47070 l
18.5293 4.68945 l
17.4668 4.68945 l
h
17.4668 12.0645 m
17.4668 5.84570 l
18.5293 5.84570 l
18.5293 12.0645 l
17.4668 12.0645 l
h
20.1328 12.0645 m
20.1328 5.84570 l
21.0703 5.84570 l
21.0703 6.72070 l
21.5286 6.04362 22.1901 5.70508 23.0547 5.70508  c
23.4297 5.70508 23.7760 5.77279 24.0938 5.90820  c
24.4115 6.04362 24.6484 6.22070 24.8047 6.43945  c
24.9609 6.65820 25.0703 6.91341 25.1328 7.20508  c
25.1641 7.40299 25.1797 7.74674 25.1797 8.23633  c
25.1797 12.0645 l
24.1328 12.0645 l
24.1328 8.28320 l
24.1328 7.84570 24.0911 7.52279 24.0078 7.31445  c
23.9245 7.10612 23.7786 6.93685 23.5703 6.80664  c
23.3620 6.67643 23.1172 6.61133 22.8359 6.61133  c
22.3880 6.61133 22.0000 6.75456 21.6719 7.04102  c
21.3438 7.32747 21.1797 7.86654 21.1797 8.65820  c
21.1797 12.0645 l
20.1328 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 204.000 l
369.000 204.000 l
369.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 204.000 l
369.000 204.000 l
369.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
