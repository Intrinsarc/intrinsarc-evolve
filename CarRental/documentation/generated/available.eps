%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 191 261 404 530
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Thursday, 2 September 2010 20:59:07 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
213 268 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
213.000 0.00000 l
213.000 268.000 l
0.00000 268.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 237 292 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 239.000 294.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 241.000 296.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 41.5000 184.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.27148 12.0645 m
4.27148 3.47070 l
8.08398 3.47070 l
8.85482 3.47070 9.43815 3.54883 9.83398 3.70508  c
10.2298 3.86133 10.5475 4.13477 10.7871 4.52539  c
11.0267 4.91602 11.1465 5.34570 11.1465 5.81445  c
11.1465 6.42904 10.9486 6.94466 10.5527 7.36133  c
10.1569 7.77799 9.54753 8.04362 8.72461 8.15820  c
9.02669 8.30404 9.25586 8.44466 9.41211 8.58008  c
9.74544 8.88216 10.0579 9.26237 10.3496 9.72070  c
11.8496 12.0645 l
10.4121 12.0645 l
9.28711 10.2832 l
8.95378 9.76237 8.68034 9.36654 8.46680 9.09570  c
8.25326 8.82487 8.06055 8.63477 7.88867 8.52539  c
7.71680 8.41602 7.54232 8.33529 7.36523 8.28320  c
7.24023 8.26237 7.03190 8.25195 6.74023 8.25195  c
5.41211 8.25195 l
5.41211 12.0645 l
4.27148 12.0645 l
h
5.41211 7.26758 m
7.86523 7.26758 l
8.37565 7.26758 8.77930 7.21289 9.07617 7.10352  c
9.37305 6.99414 9.59701 6.82227 9.74805 6.58789  c
9.89909 6.35352 9.97461 6.09570 9.97461 5.81445  c
9.97461 5.40820 9.82617 5.07487 9.52930 4.81445  c
9.23242 4.55404 8.76628 4.42383 8.13086 4.42383  c
5.41211 4.42383 l
5.41211 7.26758 l
h
17.0469 10.0645 m
18.1406 10.1895 l
17.9740 10.8249 17.6562 11.3197 17.1875 11.6738  c
16.7188 12.0280 16.1250 12.2051 15.4062 12.2051  c
14.5000 12.2051 13.7786 11.9238 13.2422 11.3613  c
12.7057 10.7988 12.4375 10.0124 12.4375 9.00195  c
12.4375 7.96029 12.7083 7.15039 13.2500 6.57227  c
13.7917 5.99414 14.4896 5.70508 15.3438 5.70508  c
16.1771 5.70508 16.8568 5.98633 17.3828 6.54883  c
17.9089 7.11133 18.1719 7.90820 18.1719 8.93945  c
18.1719 9.00195 18.1719 9.09570 18.1719 9.22070  c
13.5312 9.22070 l
13.5729 9.90820 13.7656 10.4316 14.1094 10.7910  c
14.4531 11.1504 14.8854 11.3301 15.4062 11.3301  c
15.7917 11.3301 16.1224 11.2285 16.3984 11.0254  c
16.6745 10.8223 16.8906 10.5020 17.0469 10.0645  c
h
13.5938 8.36133 m
17.0625 8.36133 l
17.0208 7.83008 16.8906 7.43424 16.6719 7.17383  c
16.3281 6.76758 15.8906 6.56445 15.3594 6.56445  c
14.8698 6.56445 14.4609 6.72591 14.1328 7.04883  c
13.8047 7.37174 13.6250 7.80924 13.5938 8.36133  c
h
19.4707 12.0645 m
19.4707 5.84570 l
20.4082 5.84570 l
20.4082 6.72070 l
20.8665 6.04362 21.5280 5.70508 22.3926 5.70508  c
22.7676 5.70508 23.1139 5.77279 23.4316 5.90820  c
23.7493 6.04362 23.9863 6.22070 24.1426 6.43945  c
24.2988 6.65820 24.4082 6.91341 24.4707 7.20508  c
24.5020 7.40299 24.5176 7.74674 24.5176 8.23633  c
24.5176 12.0645 l
23.4707 12.0645 l
23.4707 8.28320 l
23.4707 7.84570 23.4290 7.52279 23.3457 7.31445  c
23.2624 7.10612 23.1165 6.93685 22.9082 6.80664  c
22.6999 6.67643 22.4551 6.61133 22.1738 6.61133  c
21.7259 6.61133 21.3379 6.75456 21.0098 7.04102  c
20.6816 7.32747 20.5176 7.86654 20.5176 8.65820  c
20.5176 12.0645 l
19.4707 12.0645 l
h
28.4414 11.1270 m
28.5977 12.0488 l
28.2956 12.1113 28.0299 12.1426 27.8008 12.1426  c
27.4154 12.1426 27.1185 12.0827 26.9102 11.9629  c
26.7018 11.8431 26.5534 11.6842 26.4648 11.4863  c
26.3763 11.2884 26.3320 10.8717 26.3320 10.2363  c
26.3320 6.65820 l
25.5664 6.65820 l
25.5664 5.84570 l
26.3320 5.84570 l
26.3320 4.29883 l
27.3789 3.67383 l
27.3789 5.84570 l
28.4414 5.84570 l
28.4414 6.65820 l
27.3789 6.65820 l
27.3789 10.2988 l
27.3789 10.6009 27.3971 10.7936 27.4336 10.8770  c
27.4701 10.9603 27.5299 11.0280 27.6133 11.0801  c
27.6966 11.1322 27.8164 11.1582 27.9727 11.1582  c
28.0977 11.1582 28.2539 11.1478 28.4414 11.1270  c
h
33.5410 11.2988 m
33.1452 11.6322 32.7676 11.8665 32.4082 12.0020  c
32.0488 12.1374 31.6608 12.2051 31.2441 12.2051  c
30.5566 12.2051 30.0306 12.0384 29.6660 11.7051  c
29.3014 11.3717 29.1191 10.9447 29.1191 10.4238  c
29.1191 10.1217 29.1868 9.84310 29.3223 9.58789  c
29.4577 9.33268 29.6400 9.12956 29.8691 8.97852  c
30.0983 8.82747 30.3535 8.71549 30.6348 8.64258  c
30.8327 8.58008 31.1452 8.52279 31.5723 8.47070  c
32.4160 8.37695 33.0410 8.25716 33.4473 8.11133  c
33.4473 7.96549 33.4473 7.87695 33.4473 7.84570  c
33.4473 7.40820 33.3483 7.10091 33.1504 6.92383  c
32.8796 6.69466 32.4785 6.58008 31.9473 6.58008  c
31.4577 6.58008 31.0931 6.66602 30.8535 6.83789  c
30.6139 7.00977 30.4368 7.31445 30.3223 7.75195  c
29.2910 7.61133 l
29.3848 7.17383 29.5410 6.81966 29.7598 6.54883  c
29.9785 6.27799 30.2910 6.06966 30.6973 5.92383  c
31.1035 5.77799 31.5723 5.70508 32.1035 5.70508  c
32.6348 5.70508 33.0671 5.76758 33.4004 5.89258  c
33.7337 6.01758 33.9785 6.17383 34.1348 6.36133  c
34.2910 6.54883 34.4004 6.78841 34.4629 7.08008  c
34.4941 7.25716 34.5098 7.58008 34.5098 8.04883  c
34.5098 9.45508 l
34.5098 10.4342 34.5332 11.0540 34.5801 11.3145  c
34.6270 11.5749 34.7181 11.8249 34.8535 12.0645  c
33.7441 12.0645 l
33.6400 11.8457 33.5723 11.5905 33.5410 11.2988  c
h
33.4473 8.93945 m
33.0618 9.09570 32.4889 9.23112 31.7285 9.34570  c
31.2910 9.40820 30.9837 9.47852 30.8066 9.55664  c
30.6296 9.63477 30.4915 9.74674 30.3926 9.89258  c
30.2936 10.0384 30.2441 10.2051 30.2441 10.3926  c
30.2441 10.6738 30.3509 10.9082 30.5645 11.0957  c
30.7780 11.2832 31.0879 11.3770 31.4941 11.3770  c
31.9004 11.3770 32.2624 11.2884 32.5801 11.1113  c
32.8978 10.9342 33.1296 10.6895 33.2754 10.3770  c
33.3900 10.1374 33.4473 9.78841 33.4473 9.33008  c
33.4473 8.93945 l
h
36.1211 12.0645 m
36.1211 3.47070 l
37.1836 3.47070 l
37.1836 12.0645 l
36.1211 12.0645 l
h
38.9746 12.0645 m
38.9746 3.47070 l
45.1777 3.47070 l
45.1777 4.48633 l
40.1152 4.48633 l
40.1152 7.11133 l
44.8652 7.11133 l
44.8652 8.12695 l
40.1152 8.12695 l
40.1152 11.0488 l
45.3809 11.0488 l
45.3809 12.0645 l
38.9746 12.0645 l
h
48.5410 12.0645 m
46.1816 5.84570 l
47.2910 5.84570 l
48.6348 9.56445 l
48.7702 9.97070 48.9004 10.3874 49.0254 10.8145  c
49.1191 10.4915 49.2493 10.1009 49.4160 9.64258  c
50.8066 5.84570 l
51.8848 5.84570 l
49.5254 12.0645 l
48.5410 12.0645 l
h
57.0723 10.0645 m
58.1660 10.1895 l
57.9993 10.8249 57.6816 11.3197 57.2129 11.6738  c
56.7441 12.0280 56.1504 12.2051 55.4316 12.2051  c
54.5254 12.2051 53.8040 11.9238 53.2676 11.3613  c
52.7311 10.7988 52.4629 10.0124 52.4629 9.00195  c
52.4629 7.96029 52.7337 7.15039 53.2754 6.57227  c
53.8171 5.99414 54.5150 5.70508 55.3691 5.70508  c
56.2025 5.70508 56.8822 5.98633 57.4082 6.54883  c
57.9342 7.11133 58.1973 7.90820 58.1973 8.93945  c
58.1973 9.00195 58.1973 9.09570 58.1973 9.22070  c
53.5566 9.22070 l
53.5983 9.90820 53.7910 10.4316 54.1348 10.7910  c
54.4785 11.1504 54.9108 11.3301 55.4316 11.3301  c
55.8171 11.3301 56.1478 11.2285 56.4238 11.0254  c
56.6999 10.8223 56.9160 10.5020 57.0723 10.0645  c
h
53.6191 8.36133 m
57.0879 8.36133 l
57.0462 7.83008 56.9160 7.43424 56.6973 7.17383  c
56.3535 6.76758 55.9160 6.56445 55.3848 6.56445  c
54.8952 6.56445 54.4863 6.72591 54.1582 7.04883  c
53.8301 7.37174 53.6504 7.80924 53.6191 8.36133  c
h
59.4961 12.0645 m
59.4961 5.84570 l
60.4336 5.84570 l
60.4336 6.72070 l
60.8919 6.04362 61.5534 5.70508 62.4180 5.70508  c
62.7930 5.70508 63.1393 5.77279 63.4570 5.90820  c
63.7747 6.04362 64.0117 6.22070 64.1680 6.43945  c
64.3242 6.65820 64.4336 6.91341 64.4961 7.20508  c
64.5273 7.40299 64.5430 7.74674 64.5430 8.23633  c
64.5430 12.0645 l
63.4961 12.0645 l
63.4961 8.28320 l
63.4961 7.84570 63.4544 7.52279 63.3711 7.31445  c
63.2878 7.10612 63.1419 6.93685 62.9336 6.80664  c
62.7253 6.67643 62.4805 6.61133 62.1992 6.61133  c
61.7513 6.61133 61.3633 6.75456 61.0352 7.04102  c
60.7070 7.32747 60.5430 7.86654 60.5430 8.65820  c
60.5430 12.0645 l
59.4961 12.0645 l
h
68.4668 11.1270 m
68.6230 12.0488 l
68.3210 12.1113 68.0553 12.1426 67.8262 12.1426  c
67.4408 12.1426 67.1439 12.0827 66.9355 11.9629  c
66.7272 11.8431 66.5788 11.6842 66.4902 11.4863  c
66.4017 11.2884 66.3574 10.8717 66.3574 10.2363  c
66.3574 6.65820 l
65.5918 6.65820 l
65.5918 5.84570 l
66.3574 5.84570 l
66.3574 4.29883 l
67.4043 3.67383 l
67.4043 5.84570 l
68.4668 5.84570 l
68.4668 6.65820 l
67.4043 6.65820 l
67.4043 10.2988 l
67.4043 10.6009 67.4225 10.7936 67.4590 10.8770  c
67.4954 10.9603 67.5553 11.0280 67.6387 11.0801  c
67.7220 11.1322 67.8418 11.1582 67.9980 11.1582  c
68.1230 11.1582 68.2793 11.1478 68.4668 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
88.0000 168.000 m
88.0000 174.627 82.6274 180.000 76.0000 180.000  c
69.3726 180.000 64.0000 174.627 64.0000 168.000  c
64.0000 161.373 69.3726 156.000 76.0000 156.000  c
82.6274 156.000 88.0000 161.373 88.0000 168.000  c
h
f
0 J
2 j
0.00000 0.00000 0.00000 RG
newpath
88.0000 168.000 m
88.0000 174.627 82.6274 180.000 76.0000 180.000  c
69.3726 180.000 64.0000 174.627 64.0000 168.000  c
64.0000 161.373 69.3726 156.000 76.0000 156.000  c
82.6274 156.000 88.0000 161.373 88.0000 168.000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
128.000 136.500 m
128.000 187.900 l
128.000 194.804 133.596 200.400 140.500 200.400  c
223.500 200.400 l
230.404 200.400 236.000 194.804 236.000 187.900  c
236.000 136.500 l
236.000 129.596 230.404 124.000 223.500 124.000  c
140.500 124.000 l
133.596 124.000 128.000 129.596 128.000 136.500  c
h
f
1.50000 w
2 j
.658824 .549020 .549020 RG
newpath
128.000 136.500 m
128.000 187.900 l
128.000 194.804 133.596 200.400 140.500 200.400  c
223.500 200.400 l
230.404 200.400 236.000 194.804 236.000 187.900  c
236.000 136.500 l
236.000 129.596 230.404 124.000 223.500 124.000  c
140.500 124.000 l
133.596 124.000 128.000 129.596 128.000 136.500  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [128.0 124.0 128.0 200.39999389648438]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.9411765 0.78431374 0.78431374]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
130.500 139.000 m
130.500 187.400 l
130.500 194.304 136.096 199.900 143.000 199.900  c
223.000 199.900 l
229.904 199.900 235.500 194.304 235.500 187.400  c
235.500 139.000 l
235.500 132.096 229.904 126.500 223.000 126.500  c
143.000 126.500 l
136.096 126.500 130.500 132.096 130.500 139.000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 151.649 132.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
-.0156250 12.0645 m
3.28125 3.47070 l
4.50000 3.47070 l
8.01562 12.0645 l
6.73438 12.0645 l
5.71875 9.45508 l
2.14062 9.45508 l
1.18750 12.0645 l
-.0156250 12.0645 l
h
2.46875 8.53320 m
5.37500 8.53320 l
4.48438 6.15820 l
4.20312 5.43945 4.00000 4.84570 3.87500 4.37695  c
3.76042 4.92904 3.60417 5.47591 3.40625 6.01758  c
2.46875 8.53320 l
h
10.5195 12.0645 m
8.16016 5.84570 l
9.26953 5.84570 l
10.6133 9.56445 l
10.7487 9.97070 10.8789 10.3874 11.0039 10.8145  c
11.0977 10.4915 11.2279 10.1009 11.3945 9.64258  c
12.7852 5.84570 l
13.8633 5.84570 l
11.5039 12.0645 l
10.5195 12.0645 l
h
18.8633 11.2988 m
18.4674 11.6322 18.0898 11.8665 17.7305 12.0020  c
17.3711 12.1374 16.9831 12.2051 16.5664 12.2051  c
15.8789 12.2051 15.3529 12.0384 14.9883 11.7051  c
14.6237 11.3717 14.4414 10.9447 14.4414 10.4238  c
14.4414 10.1217 14.5091 9.84310 14.6445 9.58789  c
14.7799 9.33268 14.9622 9.12956 15.1914 8.97852  c
15.4206 8.82747 15.6758 8.71549 15.9570 8.64258  c
16.1549 8.58008 16.4674 8.52279 16.8945 8.47070  c
17.7383 8.37695 18.3633 8.25716 18.7695 8.11133  c
18.7695 7.96549 18.7695 7.87695 18.7695 7.84570  c
18.7695 7.40820 18.6706 7.10091 18.4727 6.92383  c
18.2018 6.69466 17.8008 6.58008 17.2695 6.58008  c
16.7799 6.58008 16.4154 6.66602 16.1758 6.83789  c
15.9362 7.00977 15.7591 7.31445 15.6445 7.75195  c
14.6133 7.61133 l
14.7070 7.17383 14.8633 6.81966 15.0820 6.54883  c
15.3008 6.27799 15.6133 6.06966 16.0195 5.92383  c
16.4258 5.77799 16.8945 5.70508 17.4258 5.70508  c
17.9570 5.70508 18.3893 5.76758 18.7227 5.89258  c
19.0560 6.01758 19.3008 6.17383 19.4570 6.36133  c
19.6133 6.54883 19.7227 6.78841 19.7852 7.08008  c
19.8164 7.25716 19.8320 7.58008 19.8320 8.04883  c
19.8320 9.45508 l
19.8320 10.4342 19.8555 11.0540 19.9023 11.3145  c
19.9492 11.5749 20.0404 11.8249 20.1758 12.0645  c
19.0664 12.0645 l
18.9622 11.8457 18.8945 11.5905 18.8633 11.2988  c
h
18.7695 8.93945 m
18.3841 9.09570 17.8112 9.23112 17.0508 9.34570  c
16.6133 9.40820 16.3060 9.47852 16.1289 9.55664  c
15.9518 9.63477 15.8138 9.74674 15.7148 9.89258  c
15.6159 10.0384 15.5664 10.2051 15.5664 10.3926  c
15.5664 10.6738 15.6732 10.9082 15.8867 11.0957  c
16.1003 11.2832 16.4102 11.3770 16.8164 11.3770  c
17.2227 11.3770 17.5846 11.2884 17.9023 11.1113  c
18.2201 10.9342 18.4518 10.6895 18.5977 10.3770  c
18.7122 10.1374 18.7695 9.78841 18.7695 9.33008  c
18.7695 8.93945 l
h
21.4746 4.68945 m
21.4746 3.47070 l
22.5371 3.47070 l
22.5371 4.68945 l
21.4746 4.68945 l
h
21.4746 12.0645 m
21.4746 5.84570 l
22.5371 5.84570 l
22.5371 12.0645 l
21.4746 12.0645 l
h
24.1094 12.0645 m
24.1094 3.47070 l
25.1719 3.47070 l
25.1719 12.0645 l
24.1094 12.0645 l
h
30.8691 11.2988 m
30.4733 11.6322 30.0957 11.8665 29.7363 12.0020  c
29.3770 12.1374 28.9889 12.2051 28.5723 12.2051  c
27.8848 12.2051 27.3587 12.0384 26.9941 11.7051  c
26.6296 11.3717 26.4473 10.9447 26.4473 10.4238  c
26.4473 10.1217 26.5150 9.84310 26.6504 9.58789  c
26.7858 9.33268 26.9681 9.12956 27.1973 8.97852  c
27.4264 8.82747 27.6816 8.71549 27.9629 8.64258  c
28.1608 8.58008 28.4733 8.52279 28.9004 8.47070  c
29.7441 8.37695 30.3691 8.25716 30.7754 8.11133  c
30.7754 7.96549 30.7754 7.87695 30.7754 7.84570  c
30.7754 7.40820 30.6764 7.10091 30.4785 6.92383  c
30.2077 6.69466 29.8066 6.58008 29.2754 6.58008  c
28.7858 6.58008 28.4212 6.66602 28.1816 6.83789  c
27.9421 7.00977 27.7650 7.31445 27.6504 7.75195  c
26.6191 7.61133 l
26.7129 7.17383 26.8691 6.81966 27.0879 6.54883  c
27.3066 6.27799 27.6191 6.06966 28.0254 5.92383  c
28.4316 5.77799 28.9004 5.70508 29.4316 5.70508  c
29.9629 5.70508 30.3952 5.76758 30.7285 5.89258  c
31.0618 6.01758 31.3066 6.17383 31.4629 6.36133  c
31.6191 6.54883 31.7285 6.78841 31.7910 7.08008  c
31.8223 7.25716 31.8379 7.58008 31.8379 8.04883  c
31.8379 9.45508 l
31.8379 10.4342 31.8613 11.0540 31.9082 11.3145  c
31.9551 11.5749 32.0462 11.8249 32.1816 12.0645  c
31.0723 12.0645 l
30.9681 11.8457 30.9004 11.5905 30.8691 11.2988  c
h
30.7754 8.93945 m
30.3900 9.09570 29.8171 9.23112 29.0566 9.34570  c
28.6191 9.40820 28.3118 9.47852 28.1348 9.55664  c
27.9577 9.63477 27.8197 9.74674 27.7207 9.89258  c
27.6217 10.0384 27.5723 10.2051 27.5723 10.3926  c
27.5723 10.6738 27.6790 10.9082 27.8926 11.0957  c
28.1061 11.2832 28.4160 11.3770 28.8223 11.3770  c
29.2285 11.3770 29.5905 11.2884 29.9082 11.1113  c
30.2259 10.9342 30.4577 10.6895 30.6035 10.3770  c
30.7181 10.1374 30.7754 9.78841 30.7754 9.33008  c
30.7754 8.93945 l
h
34.4492 12.0645 m
33.4648 12.0645 l
33.4648 3.47070 l
34.5273 3.47070 l
34.5273 6.53320 l
34.9753 5.98112 35.5430 5.70508 36.2305 5.70508  c
36.6159 5.70508 36.9779 5.78060 37.3164 5.93164  c
37.6549 6.08268 37.9362 6.29883 38.1602 6.58008  c
38.3841 6.86133 38.5586 7.19987 38.6836 7.59570  c
38.8086 7.99154 38.8711 8.41341 38.8711 8.86133  c
38.8711 9.92383 38.6055 10.7467 38.0742 11.3301  c
37.5430 11.9134 36.9128 12.2051 36.1836 12.2051  c
35.4440 12.2051 34.8659 11.8978 34.4492 11.2832  c
34.4492 12.0645 l
h
34.4336 8.90820 m
34.4336 9.64779 34.5378 10.1842 34.7461 10.5176  c
35.0794 11.0592 35.5273 11.3301 36.0898 11.3301  c
36.5482 11.3301 36.9466 11.1322 37.2852 10.7363  c
37.6237 10.3405 37.7930 9.74154 37.7930 8.93945  c
37.7930 8.12695 37.6315 7.52799 37.3086 7.14258  c
36.9857 6.75716 36.5951 6.56445 36.1367 6.56445  c
35.6784 6.56445 35.2799 6.76497 34.9414 7.16602  c
34.6029 7.56706 34.4336 8.14779 34.4336 8.90820  c
h
40.1230 12.0645 m
40.1230 3.47070 l
41.1855 3.47070 l
41.1855 12.0645 l
40.1230 12.0645 l
h
47.0703 10.0645 m
48.1641 10.1895 l
47.9974 10.8249 47.6797 11.3197 47.2109 11.6738  c
46.7422 12.0280 46.1484 12.2051 45.4297 12.2051  c
44.5234 12.2051 43.8021 11.9238 43.2656 11.3613  c
42.7292 10.7988 42.4609 10.0124 42.4609 9.00195  c
42.4609 7.96029 42.7318 7.15039 43.2734 6.57227  c
43.8151 5.99414 44.5130 5.70508 45.3672 5.70508  c
46.2005 5.70508 46.8802 5.98633 47.4062 6.54883  c
47.9323 7.11133 48.1953 7.90820 48.1953 8.93945  c
48.1953 9.00195 48.1953 9.09570 48.1953 9.22070  c
43.5547 9.22070 l
43.5964 9.90820 43.7891 10.4316 44.1328 10.7910  c
44.4766 11.1504 44.9089 11.3301 45.4297 11.3301  c
45.8151 11.3301 46.1458 11.2285 46.4219 11.0254  c
46.6979 10.8223 46.9141 10.5020 47.0703 10.0645  c
h
43.6172 8.36133 m
47.0859 8.36133 l
47.0443 7.83008 46.9141 7.43424 46.6953 7.17383  c
46.3516 6.76758 45.9141 6.56445 45.3828 6.56445  c
44.8932 6.56445 44.4844 6.72591 44.1562 7.04883  c
43.8281 7.37174 43.6484 7.80924 43.6172 8.36133  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
1.00000 w
0 j
2 j
0.00000 0.00000 0.00000 RG
newpath
120.000 168.000 m
88.4901 168.000 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
135.000 43.2988 m
135.000 88.0000 l
135.000 93.5228 139.477 98.0000 145.000 98.0000  c
207.000 98.0000 l
212.523 98.0000 217.000 93.5228 217.000 88.0000  c
217.000 43.2988 l
217.000 37.7760 212.523 33.2988 207.000 33.2988  c
145.000 33.2988 l
139.477 33.2988 135.000 37.7760 135.000 43.2988  c
h
f
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
.921569 .784314 .784314 RG
newpath
135.000 43.2988 m
135.000 88.0000 l
135.000 93.5228 139.477 98.0000 145.000 98.0000  c
207.000 98.0000 l
212.523 98.0000 217.000 93.5228 217.000 88.0000  c
217.000 43.2988 l
217.000 37.7760 212.523 33.2988 207.000 33.2988  c
145.000 33.2988 l
139.477 33.2988 135.000 37.7760 135.000 43.2988  c
h
S
0 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
176.000 124.000 m
176.000 57.2988 l
S
1.00000 1.00000 1.00000 RG
newpath
142.000 69.2988 m
210.000 69.2988 l
210.000 88.0000 l
142.000 88.0000 l
142.000 69.2988 l
h
f
0 j
newpath
142.000 69.2988 m
210.000 69.2988 l
210.000 88.0000 l
142.000 88.0000 l
142.000 69.2988 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 147.000 71.2988 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
6.44336 12.0645 m
6.44336 4.48633 l
3.61523 4.48633 l
3.61523 3.47070 l
10.4277 3.47070 l
10.4277 4.48633 l
7.58398 4.48633 l
7.58398 12.0645 l
6.44336 12.0645 l
h
11.4453 12.0645 m
11.4453 5.84570 l
12.3984 5.84570 l
12.3984 6.78320 l
12.6380 6.34570 12.8594 6.05664 13.0625 5.91602  c
13.2656 5.77539 13.4922 5.70508 13.7422 5.70508  c
14.0964 5.70508 14.4557 5.81445 14.8203 6.03320  c
14.4609 7.01758 l
14.2005 6.86133 13.9453 6.78320 13.6953 6.78320  c
13.4557 6.78320 13.2448 6.85352 13.0625 6.99414  c
12.8802 7.13477 12.7526 7.33008 12.6797 7.58008  c
12.5547 7.95508 12.4922 8.36133 12.4922 8.79883  c
12.4922 12.0645 l
11.4453 12.0645 l
h
19.5195 11.2988 m
19.1237 11.6322 18.7461 11.8665 18.3867 12.0020  c
18.0273 12.1374 17.6393 12.2051 17.2227 12.2051  c
16.5352 12.2051 16.0091 12.0384 15.6445 11.7051  c
15.2799 11.3717 15.0977 10.9447 15.0977 10.4238  c
15.0977 10.1217 15.1654 9.84310 15.3008 9.58789  c
15.4362 9.33268 15.6185 9.12956 15.8477 8.97852  c
16.0768 8.82747 16.3320 8.71549 16.6133 8.64258  c
16.8112 8.58008 17.1237 8.52279 17.5508 8.47070  c
18.3945 8.37695 19.0195 8.25716 19.4258 8.11133  c
19.4258 7.96549 19.4258 7.87695 19.4258 7.84570  c
19.4258 7.40820 19.3268 7.10091 19.1289 6.92383  c
18.8581 6.69466 18.4570 6.58008 17.9258 6.58008  c
17.4362 6.58008 17.0716 6.66602 16.8320 6.83789  c
16.5924 7.00977 16.4154 7.31445 16.3008 7.75195  c
15.2695 7.61133 l
15.3633 7.17383 15.5195 6.81966 15.7383 6.54883  c
15.9570 6.27799 16.2695 6.06966 16.6758 5.92383  c
17.0820 5.77799 17.5508 5.70508 18.0820 5.70508  c
18.6133 5.70508 19.0456 5.76758 19.3789 5.89258  c
19.7122 6.01758 19.9570 6.17383 20.1133 6.36133  c
20.2695 6.54883 20.3789 6.78841 20.4414 7.08008  c
20.4727 7.25716 20.4883 7.58008 20.4883 8.04883  c
20.4883 9.45508 l
20.4883 10.4342 20.5117 11.0540 20.5586 11.3145  c
20.6055 11.5749 20.6966 11.8249 20.8320 12.0645  c
19.7227 12.0645 l
19.6185 11.8457 19.5508 11.5905 19.5195 11.2988  c
h
19.4258 8.93945 m
19.0404 9.09570 18.4674 9.23112 17.7070 9.34570  c
17.2695 9.40820 16.9622 9.47852 16.7852 9.55664  c
16.6081 9.63477 16.4701 9.74674 16.3711 9.89258  c
16.2721 10.0384 16.2227 10.2051 16.2227 10.3926  c
16.2227 10.6738 16.3294 10.9082 16.5430 11.0957  c
16.7565 11.2832 17.0664 11.3770 17.4727 11.3770  c
17.8789 11.3770 18.2409 11.2884 18.5586 11.1113  c
18.8763 10.9342 19.1081 10.6895 19.2539 10.3770  c
19.3685 10.1374 19.4258 9.78841 19.4258 9.33008  c
19.4258 8.93945 l
h
22.1309 12.0645 m
22.1309 5.84570 l
23.0684 5.84570 l
23.0684 6.72070 l
23.5267 6.04362 24.1882 5.70508 25.0527 5.70508  c
25.4277 5.70508 25.7741 5.77279 26.0918 5.90820  c
26.4095 6.04362 26.6465 6.22070 26.8027 6.43945  c
26.9590 6.65820 27.0684 6.91341 27.1309 7.20508  c
27.1621 7.40299 27.1777 7.74674 27.1777 8.23633  c
27.1777 12.0645 l
26.1309 12.0645 l
26.1309 8.28320 l
26.1309 7.84570 26.0892 7.52279 26.0059 7.31445  c
25.9225 7.10612 25.7767 6.93685 25.5684 6.80664  c
25.3600 6.67643 25.1152 6.61133 24.8340 6.61133  c
24.3861 6.61133 23.9980 6.75456 23.6699 7.04102  c
23.3418 7.32747 23.1777 7.86654 23.1777 8.65820  c
23.1777 12.0645 l
22.1309 12.0645 l
h
28.3828 10.2051 m
29.4141 10.0488 l
29.4766 10.4655 29.6406 10.7832 29.9062 11.0020  c
30.1719 11.2207 30.5495 11.3301 31.0391 11.3301  c
31.5182 11.3301 31.8750 11.2337 32.1094 11.0410  c
32.3438 10.8483 32.4609 10.6165 32.4609 10.3457  c
32.4609 10.1061 32.3568 9.91862 32.1484 9.78320  c
32.0026 9.68945 31.6432 9.56966 31.0703 9.42383  c
30.2995 9.22591 29.7656 9.05664 29.4688 8.91602  c
29.1719 8.77539 28.9453 8.58008 28.7891 8.33008  c
28.6328 8.08008 28.5547 7.79883 28.5547 7.48633  c
28.5547 7.21549 28.6172 6.96029 28.7422 6.72070  c
28.8672 6.48112 29.0391 6.28320 29.2578 6.12695  c
29.4245 6.01237 29.6484 5.91341 29.9297 5.83008  c
30.2109 5.74674 30.5182 5.70508 30.8516 5.70508  c
31.3307 5.70508 31.7552 5.77539 32.1250 5.91602  c
32.4948 6.05664 32.7682 6.24674 32.9453 6.48633  c
33.1224 6.72591 33.2422 7.04362 33.3047 7.43945  c
32.2734 7.58008 l
32.2318 7.26758 32.0990 7.02018 31.8750 6.83789  c
31.6510 6.65560 31.3307 6.56445 30.9141 6.56445  c
30.4349 6.56445 30.0911 6.64518 29.8828 6.80664  c
29.6745 6.96810 29.5703 7.15820 29.5703 7.37695  c
29.5703 7.51237 29.6120 7.63216 29.6953 7.73633  c
29.7891 7.85091 29.9245 7.94466 30.1016 8.01758  c
30.2057 8.05924 30.5182 8.14779 31.0391 8.28320  c
31.7891 8.49154 32.3099 8.65820 32.6016 8.78320  c
32.8932 8.90820 33.1224 9.09049 33.2891 9.33008  c
33.4557 9.56966 33.5391 9.87174 33.5391 10.2363  c
33.5391 10.5905 33.4375 10.9212 33.2344 11.2285  c
33.0312 11.5358 32.7370 11.7754 32.3516 11.9473  c
31.9661 12.1191 31.5286 12.2051 31.0391 12.2051  c
30.2266 12.2051 29.6094 12.0358 29.1875 11.6973  c
28.7656 11.3587 28.4974 10.8613 28.3828 10.2051  c
h
34.8047 4.68945 m
34.8047 3.47070 l
35.8672 3.47070 l
35.8672 4.68945 l
34.8047 4.68945 l
h
34.8047 12.0645 m
34.8047 5.84570 l
35.8672 5.84570 l
35.8672 12.0645 l
34.8047 12.0645 l
h
39.7676 11.1270 m
39.9238 12.0488 l
39.6217 12.1113 39.3561 12.1426 39.1270 12.1426  c
38.7415 12.1426 38.4447 12.0827 38.2363 11.9629  c
38.0280 11.8431 37.8796 11.6842 37.7910 11.4863  c
37.7025 11.2884 37.6582 10.8717 37.6582 10.2363  c
37.6582 6.65820 l
36.8926 6.65820 l
36.8926 5.84570 l
37.6582 5.84570 l
37.6582 4.29883 l
38.7051 3.67383 l
38.7051 5.84570 l
39.7676 5.84570 l
39.7676 6.65820 l
38.7051 6.65820 l
38.7051 10.2988 l
38.7051 10.6009 38.7233 10.7936 38.7598 10.8770  c
38.7962 10.9603 38.8561 11.0280 38.9395 11.0801  c
39.0228 11.1322 39.1426 11.1582 39.2988 11.1582  c
39.4238 11.1582 39.5801 11.1478 39.7676 11.1270  c
h
40.8047 4.68945 m
40.8047 3.47070 l
41.8672 3.47070 l
41.8672 4.68945 l
40.8047 4.68945 l
h
40.8047 12.0645 m
40.8047 5.84570 l
41.8672 5.84570 l
41.8672 12.0645 l
40.8047 12.0645 l
h
43.0801 8.95508 m
43.0801 7.79883 43.3978 6.94466 44.0332 6.39258  c
44.5645 5.93424 45.2155 5.70508 45.9863 5.70508  c
46.8405 5.70508 47.5410 5.98372 48.0879 6.54102  c
48.6348 7.09831 48.9082 7.87174 48.9082 8.86133  c
48.9082 9.66341 48.7884 10.2936 48.5488 10.7520  c
48.3092 11.2103 47.9577 11.5671 47.4941 11.8223  c
47.0306 12.0775 46.5280 12.2051 45.9863 12.2051  c
45.1217 12.2051 44.4212 11.9264 43.8848 11.3691  c
43.3483 10.8118 43.0801 10.0072 43.0801 8.95508  c
h
44.1582 8.95508 m
44.1582 9.74674 44.3327 10.3405 44.6816 10.7363  c
45.0306 11.1322 45.4655 11.3301 45.9863 11.3301  c
46.5176 11.3301 46.9551 11.1322 47.2988 10.7363  c
47.6426 10.3405 47.8145 9.73633 47.8145 8.92383  c
47.8145 8.15299 47.6400 7.56966 47.2910 7.17383  c
46.9421 6.77799 46.5072 6.58008 45.9863 6.58008  c
45.4655 6.58008 45.0306 6.77539 44.6816 7.16602  c
44.3327 7.55664 44.1582 8.15299 44.1582 8.95508  c
h
50.1445 12.0645 m
50.1445 5.84570 l
51.0820 5.84570 l
51.0820 6.72070 l
51.5404 6.04362 52.2018 5.70508 53.0664 5.70508  c
53.4414 5.70508 53.7878 5.77279 54.1055 5.90820  c
54.4232 6.04362 54.6602 6.22070 54.8164 6.43945  c
54.9727 6.65820 55.0820 6.91341 55.1445 7.20508  c
55.1758 7.40299 55.1914 7.74674 55.1914 8.23633  c
55.1914 12.0645 l
54.1445 12.0645 l
54.1445 8.28320 l
54.1445 7.84570 54.1029 7.52279 54.0195 7.31445  c
53.9362 7.10612 53.7904 6.93685 53.5820 6.80664  c
53.3737 6.67643 53.1289 6.61133 52.8477 6.61133  c
52.3997 6.61133 52.0117 6.75456 51.6836 7.04102  c
51.3555 7.32747 51.1914 7.86654 51.1914 8.65820  c
51.1914 12.0645 l
50.1445 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
188.000 57.2988 m
188.000 63.9262 182.627 69.2988 176.000 69.2988  c
169.373 69.2988 164.000 63.9262 164.000 57.2988  c
164.000 50.6714 169.373 45.2988 176.000 45.2988  c
182.627 45.2988 188.000 50.6714 188.000 57.2988  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
188.000 57.2988 m
188.000 63.9262 182.627 69.2988 176.000 69.2988  c
169.373 69.2988 164.000 63.9262 164.000 57.2988  c
164.000 50.6714 169.373 45.2988 176.000 45.2988  c
182.627 45.2988 188.000 50.6714 188.000 57.2988  c
h
S
1.00000 1.00000 1.00000 RG
newpath
168.000 118.000 m
168.000 130.000 l
168.000 131.105 168.895 132.000 170.000 132.000  c
182.000 132.000 l
183.105 132.000 184.000 131.105 184.000 130.000  c
184.000 118.000 l
184.000 116.895 183.105 116.000 182.000 116.000  c
170.000 116.000 l
168.895 116.000 168.000 116.895 168.000 118.000  c
h
f
1.50000 w
.525490 .525490 .525490 RG
newpath
168.000 118.000 m
168.000 130.000 l
168.000 131.105 168.895 132.000 170.000 132.000  c
182.000 132.000 l
183.105 132.000 184.000 131.105 184.000 130.000  c
184.000 118.000 l
184.000 116.895 183.105 116.000 182.000 116.000  c
170.000 116.000 l
168.895 116.000 168.000 116.895 168.000 118.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [168.0 116.0 168.0 132.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
170.500 120.500 m
170.500 129.500 l
170.500 130.605 171.395 131.500 172.500 131.500  c
181.500 131.500 l
182.605 131.500 183.500 130.605 183.500 129.500  c
183.500 120.500 l
183.500 119.395 182.605 118.500 181.500 118.500  c
172.500 118.500 l
171.395 118.500 170.500 119.395 170.500 120.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 188.000 100.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.796875 4.68945 m
.796875 3.47070 l
1.85938 3.47070 l
1.85938 4.68945 l
.796875 4.68945 l
h
.796875 12.0645 m
.796875 5.84570 l
1.85938 5.84570 l
1.85938 12.0645 l
.796875 12.0645 l
h
3.46289 12.0645 m
3.46289 5.84570 l
4.40039 5.84570 l
4.40039 6.72070 l
4.85872 6.04362 5.52018 5.70508 6.38477 5.70508  c
6.75977 5.70508 7.10612 5.77279 7.42383 5.90820  c
7.74154 6.04362 7.97852 6.22070 8.13477 6.43945  c
8.29102 6.65820 8.40039 6.91341 8.46289 7.20508  c
8.49414 7.40299 8.50977 7.74674 8.50977 8.23633  c
8.50977 12.0645 l
7.46289 12.0645 l
7.46289 8.28320 l
7.46289 7.84570 7.42122 7.52279 7.33789 7.31445  c
7.25456 7.10612 7.10872 6.93685 6.90039 6.80664  c
6.69206 6.67643 6.44727 6.61133 6.16602 6.61133  c
5.71810 6.61133 5.33008 6.75456 5.00195 7.04102  c
4.67383 7.32747 4.50977 7.86654 4.50977 8.65820  c
4.50977 12.0645 l
3.46289 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
135.000 236.400 m
135.000 281.101 l
135.000 286.624 139.477 291.101 145.000 291.101  c
207.000 291.101 l
212.523 291.101 217.000 286.624 217.000 281.101  c
217.000 236.400 l
217.000 230.877 212.523 226.400 207.000 226.400  c
145.000 226.400 l
139.477 226.400 135.000 230.877 135.000 236.400  c
h
f
1.00000 w
2 J
[ 3.00000 5.00000 ] 0.00000 d
.921569 .784314 .784314 RG
newpath
135.000 236.400 m
135.000 281.101 l
135.000 286.624 139.477 291.101 145.000 291.101  c
207.000 291.101 l
212.523 291.101 217.000 286.624 217.000 281.101  c
217.000 236.400 l
217.000 230.877 212.523 226.400 207.000 226.400  c
145.000 226.400 l
139.477 226.400 135.000 230.877 135.000 236.400  c
h
S
0 J
10.0000 M
[ ] 0.00000 d
0.00000 0.00000 0.00000 RG
newpath
176.000 200.400 m
176.000 250.400 l
S
1.00000 1.00000 1.00000 RG
newpath
142.000 262.400 m
210.000 262.400 l
210.000 281.101 l
142.000 281.101 l
142.000 262.400 l
h
f
0 j
newpath
142.000 262.400 m
210.000 262.400 l
210.000 281.101 l
142.000 281.101 l
142.000 262.400 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 147.000 264.400 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
6.44336 12.0645 m
6.44336 4.48633 l
3.61523 4.48633 l
3.61523 3.47070 l
10.4277 3.47070 l
10.4277 4.48633 l
7.58398 4.48633 l
7.58398 12.0645 l
6.44336 12.0645 l
h
11.4453 12.0645 m
11.4453 5.84570 l
12.3984 5.84570 l
12.3984 6.78320 l
12.6380 6.34570 12.8594 6.05664 13.0625 5.91602  c
13.2656 5.77539 13.4922 5.70508 13.7422 5.70508  c
14.0964 5.70508 14.4557 5.81445 14.8203 6.03320  c
14.4609 7.01758 l
14.2005 6.86133 13.9453 6.78320 13.6953 6.78320  c
13.4557 6.78320 13.2448 6.85352 13.0625 6.99414  c
12.8802 7.13477 12.7526 7.33008 12.6797 7.58008  c
12.5547 7.95508 12.4922 8.36133 12.4922 8.79883  c
12.4922 12.0645 l
11.4453 12.0645 l
h
19.5195 11.2988 m
19.1237 11.6322 18.7461 11.8665 18.3867 12.0020  c
18.0273 12.1374 17.6393 12.2051 17.2227 12.2051  c
16.5352 12.2051 16.0091 12.0384 15.6445 11.7051  c
15.2799 11.3717 15.0977 10.9447 15.0977 10.4238  c
15.0977 10.1217 15.1654 9.84310 15.3008 9.58789  c
15.4362 9.33268 15.6185 9.12956 15.8477 8.97852  c
16.0768 8.82747 16.3320 8.71549 16.6133 8.64258  c
16.8112 8.58008 17.1237 8.52279 17.5508 8.47070  c
18.3945 8.37695 19.0195 8.25716 19.4258 8.11133  c
19.4258 7.96549 19.4258 7.87695 19.4258 7.84570  c
19.4258 7.40820 19.3268 7.10091 19.1289 6.92383  c
18.8581 6.69466 18.4570 6.58008 17.9258 6.58008  c
17.4362 6.58008 17.0716 6.66602 16.8320 6.83789  c
16.5924 7.00977 16.4154 7.31445 16.3008 7.75195  c
15.2695 7.61133 l
15.3633 7.17383 15.5195 6.81966 15.7383 6.54883  c
15.9570 6.27799 16.2695 6.06966 16.6758 5.92383  c
17.0820 5.77799 17.5508 5.70508 18.0820 5.70508  c
18.6133 5.70508 19.0456 5.76758 19.3789 5.89258  c
19.7122 6.01758 19.9570 6.17383 20.1133 6.36133  c
20.2695 6.54883 20.3789 6.78841 20.4414 7.08008  c
20.4727 7.25716 20.4883 7.58008 20.4883 8.04883  c
20.4883 9.45508 l
20.4883 10.4342 20.5117 11.0540 20.5586 11.3145  c
20.6055 11.5749 20.6966 11.8249 20.8320 12.0645  c
19.7227 12.0645 l
19.6185 11.8457 19.5508 11.5905 19.5195 11.2988  c
h
19.4258 8.93945 m
19.0404 9.09570 18.4674 9.23112 17.7070 9.34570  c
17.2695 9.40820 16.9622 9.47852 16.7852 9.55664  c
16.6081 9.63477 16.4701 9.74674 16.3711 9.89258  c
16.2721 10.0384 16.2227 10.2051 16.2227 10.3926  c
16.2227 10.6738 16.3294 10.9082 16.5430 11.0957  c
16.7565 11.2832 17.0664 11.3770 17.4727 11.3770  c
17.8789 11.3770 18.2409 11.2884 18.5586 11.1113  c
18.8763 10.9342 19.1081 10.6895 19.2539 10.3770  c
19.3685 10.1374 19.4258 9.78841 19.4258 9.33008  c
19.4258 8.93945 l
h
22.1309 12.0645 m
22.1309 5.84570 l
23.0684 5.84570 l
23.0684 6.72070 l
23.5267 6.04362 24.1882 5.70508 25.0527 5.70508  c
25.4277 5.70508 25.7741 5.77279 26.0918 5.90820  c
26.4095 6.04362 26.6465 6.22070 26.8027 6.43945  c
26.9590 6.65820 27.0684 6.91341 27.1309 7.20508  c
27.1621 7.40299 27.1777 7.74674 27.1777 8.23633  c
27.1777 12.0645 l
26.1309 12.0645 l
26.1309 8.28320 l
26.1309 7.84570 26.0892 7.52279 26.0059 7.31445  c
25.9225 7.10612 25.7767 6.93685 25.5684 6.80664  c
25.3600 6.67643 25.1152 6.61133 24.8340 6.61133  c
24.3861 6.61133 23.9980 6.75456 23.6699 7.04102  c
23.3418 7.32747 23.1777 7.86654 23.1777 8.65820  c
23.1777 12.0645 l
22.1309 12.0645 l
h
28.3828 10.2051 m
29.4141 10.0488 l
29.4766 10.4655 29.6406 10.7832 29.9062 11.0020  c
30.1719 11.2207 30.5495 11.3301 31.0391 11.3301  c
31.5182 11.3301 31.8750 11.2337 32.1094 11.0410  c
32.3438 10.8483 32.4609 10.6165 32.4609 10.3457  c
32.4609 10.1061 32.3568 9.91862 32.1484 9.78320  c
32.0026 9.68945 31.6432 9.56966 31.0703 9.42383  c
30.2995 9.22591 29.7656 9.05664 29.4688 8.91602  c
29.1719 8.77539 28.9453 8.58008 28.7891 8.33008  c
28.6328 8.08008 28.5547 7.79883 28.5547 7.48633  c
28.5547 7.21549 28.6172 6.96029 28.7422 6.72070  c
28.8672 6.48112 29.0391 6.28320 29.2578 6.12695  c
29.4245 6.01237 29.6484 5.91341 29.9297 5.83008  c
30.2109 5.74674 30.5182 5.70508 30.8516 5.70508  c
31.3307 5.70508 31.7552 5.77539 32.1250 5.91602  c
32.4948 6.05664 32.7682 6.24674 32.9453 6.48633  c
33.1224 6.72591 33.2422 7.04362 33.3047 7.43945  c
32.2734 7.58008 l
32.2318 7.26758 32.0990 7.02018 31.8750 6.83789  c
31.6510 6.65560 31.3307 6.56445 30.9141 6.56445  c
30.4349 6.56445 30.0911 6.64518 29.8828 6.80664  c
29.6745 6.96810 29.5703 7.15820 29.5703 7.37695  c
29.5703 7.51237 29.6120 7.63216 29.6953 7.73633  c
29.7891 7.85091 29.9245 7.94466 30.1016 8.01758  c
30.2057 8.05924 30.5182 8.14779 31.0391 8.28320  c
31.7891 8.49154 32.3099 8.65820 32.6016 8.78320  c
32.8932 8.90820 33.1224 9.09049 33.2891 9.33008  c
33.4557 9.56966 33.5391 9.87174 33.5391 10.2363  c
33.5391 10.5905 33.4375 10.9212 33.2344 11.2285  c
33.0312 11.5358 32.7370 11.7754 32.3516 11.9473  c
31.9661 12.1191 31.5286 12.2051 31.0391 12.2051  c
30.2266 12.2051 29.6094 12.0358 29.1875 11.6973  c
28.7656 11.3587 28.4974 10.8613 28.3828 10.2051  c
h
34.8047 4.68945 m
34.8047 3.47070 l
35.8672 3.47070 l
35.8672 4.68945 l
34.8047 4.68945 l
h
34.8047 12.0645 m
34.8047 5.84570 l
35.8672 5.84570 l
35.8672 12.0645 l
34.8047 12.0645 l
h
39.7676 11.1270 m
39.9238 12.0488 l
39.6217 12.1113 39.3561 12.1426 39.1270 12.1426  c
38.7415 12.1426 38.4447 12.0827 38.2363 11.9629  c
38.0280 11.8431 37.8796 11.6842 37.7910 11.4863  c
37.7025 11.2884 37.6582 10.8717 37.6582 10.2363  c
37.6582 6.65820 l
36.8926 6.65820 l
36.8926 5.84570 l
37.6582 5.84570 l
37.6582 4.29883 l
38.7051 3.67383 l
38.7051 5.84570 l
39.7676 5.84570 l
39.7676 6.65820 l
38.7051 6.65820 l
38.7051 10.2988 l
38.7051 10.6009 38.7233 10.7936 38.7598 10.8770  c
38.7962 10.9603 38.8561 11.0280 38.9395 11.0801  c
39.0228 11.1322 39.1426 11.1582 39.2988 11.1582  c
39.4238 11.1582 39.5801 11.1478 39.7676 11.1270  c
h
40.8047 4.68945 m
40.8047 3.47070 l
41.8672 3.47070 l
41.8672 4.68945 l
40.8047 4.68945 l
h
40.8047 12.0645 m
40.8047 5.84570 l
41.8672 5.84570 l
41.8672 12.0645 l
40.8047 12.0645 l
h
43.0801 8.95508 m
43.0801 7.79883 43.3978 6.94466 44.0332 6.39258  c
44.5645 5.93424 45.2155 5.70508 45.9863 5.70508  c
46.8405 5.70508 47.5410 5.98372 48.0879 6.54102  c
48.6348 7.09831 48.9082 7.87174 48.9082 8.86133  c
48.9082 9.66341 48.7884 10.2936 48.5488 10.7520  c
48.3092 11.2103 47.9577 11.5671 47.4941 11.8223  c
47.0306 12.0775 46.5280 12.2051 45.9863 12.2051  c
45.1217 12.2051 44.4212 11.9264 43.8848 11.3691  c
43.3483 10.8118 43.0801 10.0072 43.0801 8.95508  c
h
44.1582 8.95508 m
44.1582 9.74674 44.3327 10.3405 44.6816 10.7363  c
45.0306 11.1322 45.4655 11.3301 45.9863 11.3301  c
46.5176 11.3301 46.9551 11.1322 47.2988 10.7363  c
47.6426 10.3405 47.8145 9.73633 47.8145 8.92383  c
47.8145 8.15299 47.6400 7.56966 47.2910 7.17383  c
46.9421 6.77799 46.5072 6.58008 45.9863 6.58008  c
45.4655 6.58008 45.0306 6.77539 44.6816 7.16602  c
44.3327 7.55664 44.1582 8.15299 44.1582 8.95508  c
h
50.1445 12.0645 m
50.1445 5.84570 l
51.0820 5.84570 l
51.0820 6.72070 l
51.5404 6.04362 52.2018 5.70508 53.0664 5.70508  c
53.4414 5.70508 53.7878 5.77279 54.1055 5.90820  c
54.4232 6.04362 54.6602 6.22070 54.8164 6.43945  c
54.9727 6.65820 55.0820 6.91341 55.1445 7.20508  c
55.1758 7.40299 55.1914 7.74674 55.1914 8.23633  c
55.1914 12.0645 l
54.1445 12.0645 l
54.1445 8.28320 l
54.1445 7.84570 54.1029 7.52279 54.0195 7.31445  c
53.9362 7.10612 53.7904 6.93685 53.5820 6.80664  c
53.3737 6.67643 53.1289 6.61133 52.8477 6.61133  c
52.3997 6.61133 52.0117 6.75456 51.6836 7.04102  c
51.3555 7.32747 51.1914 7.86654 51.1914 8.65820  c
51.1914 12.0645 l
50.1445 12.0645 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
187.954 251.446 m
188.350 246.926 186.162 242.569 182.300 240.187  c
178.438 237.804 173.562 237.804 169.700 240.187  c
165.838 242.569 163.650 246.926 164.046 251.446  c
f
2 j
0.00000 0.00000 0.00000 RG
newpath
187.954 251.446 m
188.350 246.926 186.162 242.569 182.300 240.187  c
178.438 237.804 173.562 237.804 169.700 240.187  c
165.838 242.569 163.650 246.926 164.046 251.446  c
S
1.00000 1.00000 1.00000 RG
newpath
168.000 194.400 m
168.000 206.400 l
168.000 207.505 168.895 208.400 170.000 208.400  c
182.000 208.400 l
183.105 208.400 184.000 207.505 184.000 206.400  c
184.000 194.400 l
184.000 193.295 183.105 192.400 182.000 192.400  c
170.000 192.400 l
168.895 192.400 168.000 193.295 168.000 194.400  c
h
f
1.50000 w
.525490 .525490 .525490 RG
newpath
168.000 194.400 m
168.000 206.400 l
168.000 207.505 168.895 208.400 170.000 208.400  c
182.000 208.400 l
183.105 208.400 184.000 207.505 184.000 206.400  c
184.000 194.400 l
184.000 193.295 183.105 192.400 182.000 192.400  c
170.000 192.400 l
168.895 192.400 168.000 193.295 168.000 194.400  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [168.0 192.39999389648438 168.0 208.39999389648438]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
170.500 196.900 m
170.500 205.900 l
170.500 207.005 171.395 207.900 172.500 207.900  c
181.500 207.900 l
182.605 207.900 183.500 207.005 183.500 205.900  c
183.500 196.900 l
183.500 195.795 182.605 194.900 181.500 194.900  c
172.500 194.900 l
171.395 194.900 170.500 195.795 170.500 196.900  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 188.000 204.400 ] concat
0.00000 0.00000 0.00000 RG
newpath
.406250 8.95508 m
.406250 7.79883 .723958 6.94466 1.35938 6.39258  c
1.89062 5.93424 2.54167 5.70508 3.31250 5.70508  c
4.16667 5.70508 4.86719 5.98372 5.41406 6.54102  c
5.96094 7.09831 6.23438 7.87174 6.23438 8.86133  c
6.23438 9.66341 6.11458 10.2936 5.87500 10.7520  c
5.63542 11.2103 5.28385 11.5671 4.82031 11.8223  c
4.35677 12.0775 3.85417 12.2051 3.31250 12.2051  c
2.44792 12.2051 1.74740 11.9264 1.21094 11.3691  c
.674479 10.8118 .406250 10.0072 .406250 8.95508  c
h
1.48438 8.95508 m
1.48438 9.74674 1.65885 10.3405 2.00781 10.7363  c
2.35677 11.1322 2.79167 11.3301 3.31250 11.3301  c
3.84375 11.3301 4.28125 11.1322 4.62500 10.7363  c
4.96875 10.3405 5.14062 9.73633 5.14062 8.92383  c
5.14062 8.15299 4.96615 7.56966 4.61719 7.17383  c
4.26823 6.77799 3.83333 6.58008 3.31250 6.58008  c
2.79167 6.58008 2.35677 6.77539 2.00781 7.16602  c
1.65885 7.55664 1.48438 8.15299 1.48438 8.95508  c
h
11.5488 12.0645 m
11.5488 11.1426 l
11.0592 11.8509 10.3978 12.2051 9.56445 12.2051  c
9.19987 12.2051 8.85872 12.1348 8.54102 11.9941  c
8.22331 11.8535 7.98633 11.6764 7.83008 11.4629  c
7.67383 11.2493 7.56445 10.9863 7.50195 10.6738  c
7.46029 10.4759 7.43945 10.1478 7.43945 9.68945  c
7.43945 5.84570 l
8.50195 5.84570 l
8.50195 9.29883 l
8.50195 9.84049 8.52279 10.2103 8.56445 10.4082  c
8.62695 10.6790 8.76497 10.8952 8.97852 11.0566  c
9.19206 11.2181 9.46029 11.2988 9.78320 11.2988  c
10.0957 11.2988 10.3900 11.2181 10.6660 11.0566  c
10.9421 10.8952 11.1400 10.6738 11.2598 10.3926  c
11.3796 10.1113 11.4395 9.70508 11.4395 9.17383  c
11.4395 5.84570 l
12.4863 5.84570 l
12.4863 12.0645 l
11.5488 12.0645 l
h
16.4414 11.1270 m
16.5977 12.0488 l
16.2956 12.1113 16.0299 12.1426 15.8008 12.1426  c
15.4154 12.1426 15.1185 12.0827 14.9102 11.9629  c
14.7018 11.8431 14.5534 11.6842 14.4648 11.4863  c
14.3763 11.2884 14.3320 10.8717 14.3320 10.2363  c
14.3320 6.65820 l
13.5664 6.65820 l
13.5664 5.84570 l
14.3320 5.84570 l
14.3320 4.29883 l
15.3789 3.67383 l
15.3789 5.84570 l
16.4414 5.84570 l
16.4414 6.65820 l
15.3789 6.65820 l
15.3789 10.2988 l
15.3789 10.6009 15.3971 10.7936 15.4336 10.8770  c
15.4701 10.9603 15.5299 11.0280 15.6133 11.0801  c
15.6966 11.1322 15.8164 11.1582 15.9727 11.1582  c
16.0977 11.1582 16.2539 11.1478 16.4414 11.1270  c
h
20.8281 14.4551 m
20.8281 3.47070 l
23.1562 3.47070 l
23.1562 4.34570 l
21.8906 4.34570 l
21.8906 13.5801 l
23.1562 13.5801 l
23.1562 14.4551 l
20.8281 14.4551 l
h
23.8496 7.83008 m
23.8496 6.80924 23.9538 5.98893 24.1621 5.36914  c
24.3704 4.74935 24.6803 4.27279 25.0918 3.93945  c
25.5033 3.60612 26.0215 3.43945 26.6465 3.43945  c
27.1048 3.43945 27.5085 3.53320 27.8574 3.72070  c
28.2064 3.90820 28.4954 4.17643 28.7246 4.52539  c
28.9538 4.87435 29.1309 5.29883 29.2559 5.79883  c
29.3809 6.29883 29.4434 6.97591 29.4434 7.83008  c
29.4434 8.84049 29.3418 9.65299 29.1387 10.2676  c
28.9355 10.8822 28.6283 11.3587 28.2168 11.6973  c
27.8053 12.0358 27.2819 12.2051 26.6465 12.2051  c
25.8236 12.2051 25.1725 11.9082 24.6934 11.3145  c
24.1309 10.6061 23.8496 9.44466 23.8496 7.83008  c
h
24.9277 7.83008 m
24.9277 9.23633 25.0944 10.1738 25.4277 10.6426  c
25.7611 11.1113 26.1673 11.3457 26.6465 11.3457  c
27.1361 11.3457 27.5449 11.1113 27.8730 10.6426  c
28.2012 10.1738 28.3652 9.23633 28.3652 7.83008  c
28.3652 6.41341 28.2012 5.47331 27.8730 5.00977  c
27.5449 4.54622 27.1309 4.31445 26.6309 4.31445  c
26.1517 4.31445 25.7663 4.51758 25.4746 4.92383  c
25.1100 5.44466 24.9277 6.41341 24.9277 7.83008  c
h
31.1172 12.0645 m
31.1172 10.8613 l
32.3203 10.8613 l
32.3203 12.0645 l
31.1172 12.0645 l
h
34.4512 12.0645 m
34.4512 10.8613 l
35.6543 10.8613 l
35.6543 12.0645 l
34.4512 12.0645 l
h
41.1602 12.0645 m
40.1133 12.0645 l
40.1133 5.34570 l
39.8529 5.58529 39.5169 5.82747 39.1055 6.07227  c
38.6940 6.31706 38.3268 6.49674 38.0039 6.61133  c
38.0039 5.59570 l
38.5872 5.31445 39.1003 4.97852 39.5430 4.58789  c
39.9857 4.19727 40.3008 3.81445 40.4883 3.43945  c
41.1602 3.43945 l
41.1602 12.0645 l
h
45.9277 14.4551 m
43.5996 14.4551 l
43.5996 13.5801 l
44.8652 13.5801 l
44.8652 4.34570 l
43.5996 4.34570 l
43.5996 3.47070 l
45.9277 3.47070 l
45.9277 14.4551 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
120.000 162.000 m
120.000 174.000 l
120.000 175.105 120.895 176.000 122.000 176.000  c
134.000 176.000 l
135.105 176.000 136.000 175.105 136.000 174.000  c
136.000 162.000 l
136.000 160.895 135.105 160.000 134.000 160.000  c
122.000 160.000 l
120.895 160.000 120.000 160.895 120.000 162.000  c
h
f
.525490 .525490 .525490 RG
newpath
120.000 162.000 m
120.000 174.000 l
120.000 175.105 120.895 176.000 122.000 176.000  c
134.000 176.000 l
135.105 176.000 136.000 175.105 136.000 174.000  c
136.000 162.000 l
136.000 160.895 135.105 160.000 134.000 160.000  c
122.000 160.000 l
120.895 160.000 120.000 160.895 120.000 162.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [120.0 160.0 120.0 176.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
122.500 164.500 m
122.500 173.500 l
122.500 174.605 123.395 175.500 124.500 175.500  c
133.500 175.500 l
134.605 175.500 135.500 174.605 135.500 173.500  c
135.500 164.500 l
135.500 163.395 134.605 162.500 133.500 162.500  c
124.500 162.500 l
123.395 162.500 122.500 163.395 122.500 164.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 88.0000 132.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
5.04688 10.0645 m
6.14062 10.1895 l
5.97396 10.8249 5.65625 11.3197 5.18750 11.6738  c
4.71875 12.0280 4.12500 12.2051 3.40625 12.2051  c
2.50000 12.2051 1.77865 11.9238 1.24219 11.3613  c
.705729 10.7988 .437500 10.0124 .437500 9.00195  c
.437500 7.96029 .708333 7.15039 1.25000 6.57227  c
1.79167 5.99414 2.48958 5.70508 3.34375 5.70508  c
4.17708 5.70508 4.85677 5.98633 5.38281 6.54883  c
5.90885 7.11133 6.17188 7.90820 6.17188 8.93945  c
6.17188 9.00195 6.17188 9.09570 6.17188 9.22070  c
1.53125 9.22070 l
1.57292 9.90820 1.76562 10.4316 2.10938 10.7910  c
2.45312 11.1504 2.88542 11.3301 3.40625 11.3301  c
3.79167 11.3301 4.12240 11.2285 4.39844 11.0254  c
4.67448 10.8223 4.89062 10.5020 5.04688 10.0645  c
h
1.59375 8.36133 m
5.06250 8.36133 l
5.02083 7.83008 4.89062 7.43424 4.67188 7.17383  c
4.32812 6.76758 3.89062 6.56445 3.35938 6.56445  c
2.86979 6.56445 2.46094 6.72591 2.13281 7.04883  c
1.80469 7.37174 1.62500 7.80924 1.59375 8.36133  c
h
9.18945 12.0645 m
6.83008 5.84570 l
7.93945 5.84570 l
9.28320 9.56445 l
9.41862 9.97070 9.54883 10.3874 9.67383 10.8145  c
9.76758 10.4915 9.89779 10.1009 10.0645 9.64258  c
11.4551 5.84570 l
12.5332 5.84570 l
10.1738 12.0645 l
9.18945 12.0645 l
h
17.7207 10.0645 m
18.8145 10.1895 l
18.6478 10.8249 18.3301 11.3197 17.8613 11.6738  c
17.3926 12.0280 16.7988 12.2051 16.0801 12.2051  c
15.1738 12.2051 14.4525 11.9238 13.9160 11.3613  c
13.3796 10.7988 13.1113 10.0124 13.1113 9.00195  c
13.1113 7.96029 13.3822 7.15039 13.9238 6.57227  c
14.4655 5.99414 15.1634 5.70508 16.0176 5.70508  c
16.8509 5.70508 17.5306 5.98633 18.0566 6.54883  c
18.5827 7.11133 18.8457 7.90820 18.8457 8.93945  c
18.8457 9.00195 18.8457 9.09570 18.8457 9.22070  c
14.2051 9.22070 l
14.2467 9.90820 14.4395 10.4316 14.7832 10.7910  c
15.1270 11.1504 15.5592 11.3301 16.0801 11.3301  c
16.4655 11.3301 16.7962 11.2285 17.0723 11.0254  c
17.3483 10.8223 17.5645 10.5020 17.7207 10.0645  c
h
14.2676 8.36133 m
17.7363 8.36133 l
17.6947 7.83008 17.5645 7.43424 17.3457 7.17383  c
17.0020 6.76758 16.5645 6.56445 16.0332 6.56445  c
15.5436 6.56445 15.1348 6.72591 14.8066 7.04883  c
14.4785 7.37174 14.2988 7.80924 14.2676 8.36133  c
h
20.1445 12.0645 m
20.1445 5.84570 l
21.0820 5.84570 l
21.0820 6.72070 l
21.5404 6.04362 22.2018 5.70508 23.0664 5.70508  c
23.4414 5.70508 23.7878 5.77279 24.1055 5.90820  c
24.4232 6.04362 24.6602 6.22070 24.8164 6.43945  c
24.9727 6.65820 25.0820 6.91341 25.1445 7.20508  c
25.1758 7.40299 25.1914 7.74674 25.1914 8.23633  c
25.1914 12.0645 l
24.1445 12.0645 l
24.1445 8.28320 l
24.1445 7.84570 24.1029 7.52279 24.0195 7.31445  c
23.9362 7.10612 23.7904 6.93685 23.5820 6.80664  c
23.3737 6.67643 23.1289 6.61133 22.8477 6.61133  c
22.3997 6.61133 22.0117 6.75456 21.6836 7.04102  c
21.3555 7.32747 21.1914 7.86654 21.1914 8.65820  c
21.1914 12.0645 l
20.1445 12.0645 l
h
29.1152 11.1270 m
29.2715 12.0488 l
28.9694 12.1113 28.7038 12.1426 28.4746 12.1426  c
28.0892 12.1426 27.7923 12.0827 27.5840 11.9629  c
27.3757 11.8431 27.2272 11.6842 27.1387 11.4863  c
27.0501 11.2884 27.0059 10.8717 27.0059 10.2363  c
27.0059 6.65820 l
26.2402 6.65820 l
26.2402 5.84570 l
27.0059 5.84570 l
27.0059 4.29883 l
28.0527 3.67383 l
28.0527 5.84570 l
29.1152 5.84570 l
29.1152 6.65820 l
28.0527 6.65820 l
28.0527 10.2988 l
28.0527 10.6009 28.0710 10.7936 28.1074 10.8770  c
28.1439 10.9603 28.2038 11.0280 28.2871 11.0801  c
28.3704 11.1322 28.4902 11.1582 28.6465 11.1582  c
28.7715 11.1582 28.9277 11.1478 29.1152 11.1270  c
h
29.7305 10.2051 m
30.7617 10.0488 l
30.8242 10.4655 30.9883 10.7832 31.2539 11.0020  c
31.5195 11.2207 31.8971 11.3301 32.3867 11.3301  c
32.8659 11.3301 33.2227 11.2337 33.4570 11.0410  c
33.6914 10.8483 33.8086 10.6165 33.8086 10.3457  c
33.8086 10.1061 33.7044 9.91862 33.4961 9.78320  c
33.3503 9.68945 32.9909 9.56966 32.4180 9.42383  c
31.6471 9.22591 31.1133 9.05664 30.8164 8.91602  c
30.5195 8.77539 30.2930 8.58008 30.1367 8.33008  c
29.9805 8.08008 29.9023 7.79883 29.9023 7.48633  c
29.9023 7.21549 29.9648 6.96029 30.0898 6.72070  c
30.2148 6.48112 30.3867 6.28320 30.6055 6.12695  c
30.7721 6.01237 30.9961 5.91341 31.2773 5.83008  c
31.5586 5.74674 31.8659 5.70508 32.1992 5.70508  c
32.6784 5.70508 33.1029 5.77539 33.4727 5.91602  c
33.8424 6.05664 34.1159 6.24674 34.2930 6.48633  c
34.4701 6.72591 34.5898 7.04362 34.6523 7.43945  c
33.6211 7.58008 l
33.5794 7.26758 33.4466 7.02018 33.2227 6.83789  c
32.9987 6.65560 32.6784 6.56445 32.2617 6.56445  c
31.7826 6.56445 31.4388 6.64518 31.2305 6.80664  c
31.0221 6.96810 30.9180 7.15820 30.9180 7.37695  c
30.9180 7.51237 30.9596 7.63216 31.0430 7.73633  c
31.1367 7.85091 31.2721 7.94466 31.4492 8.01758  c
31.5534 8.05924 31.8659 8.14779 32.3867 8.28320  c
33.1367 8.49154 33.6576 8.65820 33.9492 8.78320  c
34.2409 8.90820 34.4701 9.09049 34.6367 9.33008  c
34.8034 9.56966 34.8867 9.87174 34.8867 10.2363  c
34.8867 10.5905 34.7852 10.9212 34.5820 11.2285  c
34.3789 11.5358 34.0846 11.7754 33.6992 11.9473  c
33.3138 12.1191 32.8763 12.2051 32.3867 12.2051  c
31.5742 12.2051 30.9570 12.0358 30.5352 11.6973  c
30.1133 11.3587 29.8451 10.8613 29.7305 10.2051  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 292.000 l
237.000 292.000 l
237.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 292.000 l
237.000 292.000 l
237.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
