%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 203 329 392 462
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Monday, 20 September 2010 00:42:54 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
189 133 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
189.000 0.00000 l
189.000 133.000 l
0.00000 133.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 213 157 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 215.000 159.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 217.000 161.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 76.5000 60.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.27148 12.0645 m
4.27148 3.47070 l
8.08398 3.47070 l
8.85482 3.47070 9.43815 3.54883 9.83398 3.70508  c
10.2298 3.86133 10.5475 4.13477 10.7871 4.52539  c
11.0267 4.91602 11.1465 5.34570 11.1465 5.81445  c
11.1465 6.42904 10.9486 6.94466 10.5527 7.36133  c
10.1569 7.77799 9.54753 8.04362 8.72461 8.15820  c
9.02669 8.30404 9.25586 8.44466 9.41211 8.58008  c
9.74544 8.88216 10.0579 9.26237 10.3496 9.72070  c
11.8496 12.0645 l
10.4121 12.0645 l
9.28711 10.2832 l
8.95378 9.76237 8.68034 9.36654 8.46680 9.09570  c
8.25326 8.82487 8.06055 8.63477 7.88867 8.52539  c
7.71680 8.41602 7.54232 8.33529 7.36523 8.28320  c
7.24023 8.26237 7.03190 8.25195 6.74023 8.25195  c
5.41211 8.25195 l
5.41211 12.0645 l
4.27148 12.0645 l
h
5.41211 7.26758 m
7.86523 7.26758 l
8.37565 7.26758 8.77930 7.21289 9.07617 7.10352  c
9.37305 6.99414 9.59701 6.82227 9.74805 6.58789  c
9.89909 6.35352 9.97461 6.09570 9.97461 5.81445  c
9.97461 5.40820 9.82617 5.07487 9.52930 4.81445  c
9.23242 4.55404 8.76628 4.42383 8.13086 4.42383  c
5.41211 4.42383 l
5.41211 7.26758 l
h
17.0469 10.0645 m
18.1406 10.1895 l
17.9740 10.8249 17.6562 11.3197 17.1875 11.6738  c
16.7188 12.0280 16.1250 12.2051 15.4062 12.2051  c
14.5000 12.2051 13.7786 11.9238 13.2422 11.3613  c
12.7057 10.7988 12.4375 10.0124 12.4375 9.00195  c
12.4375 7.96029 12.7083 7.15039 13.2500 6.57227  c
13.7917 5.99414 14.4896 5.70508 15.3438 5.70508  c
16.1771 5.70508 16.8568 5.98633 17.3828 6.54883  c
17.9089 7.11133 18.1719 7.90820 18.1719 8.93945  c
18.1719 9.00195 18.1719 9.09570 18.1719 9.22070  c
13.5312 9.22070 l
13.5729 9.90820 13.7656 10.4316 14.1094 10.7910  c
14.4531 11.1504 14.8854 11.3301 15.4062 11.3301  c
15.7917 11.3301 16.1224 11.2285 16.3984 11.0254  c
16.6745 10.8223 16.8906 10.5020 17.0469 10.0645  c
h
13.5938 8.36133 m
17.0625 8.36133 l
17.0208 7.83008 16.8906 7.43424 16.6719 7.17383  c
16.3281 6.76758 15.8906 6.56445 15.3594 6.56445  c
14.8698 6.56445 14.4609 6.72591 14.1328 7.04883  c
13.8047 7.37174 13.6250 7.80924 13.5938 8.36133  c
h
19.4707 12.0645 m
19.4707 5.84570 l
20.4082 5.84570 l
20.4082 6.72070 l
20.8665 6.04362 21.5280 5.70508 22.3926 5.70508  c
22.7676 5.70508 23.1139 5.77279 23.4316 5.90820  c
23.7493 6.04362 23.9863 6.22070 24.1426 6.43945  c
24.2988 6.65820 24.4082 6.91341 24.4707 7.20508  c
24.5020 7.40299 24.5176 7.74674 24.5176 8.23633  c
24.5176 12.0645 l
23.4707 12.0645 l
23.4707 8.28320 l
23.4707 7.84570 23.4290 7.52279 23.3457 7.31445  c
23.2624 7.10612 23.1165 6.93685 22.9082 6.80664  c
22.6999 6.67643 22.4551 6.61133 22.1738 6.61133  c
21.7259 6.61133 21.3379 6.75456 21.0098 7.04102  c
20.6816 7.32747 20.5176 7.86654 20.5176 8.65820  c
20.5176 12.0645 l
19.4707 12.0645 l
h
28.4414 11.1270 m
28.5977 12.0488 l
28.2956 12.1113 28.0299 12.1426 27.8008 12.1426  c
27.4154 12.1426 27.1185 12.0827 26.9102 11.9629  c
26.7018 11.8431 26.5534 11.6842 26.4648 11.4863  c
26.3763 11.2884 26.3320 10.8717 26.3320 10.2363  c
26.3320 6.65820 l
25.5664 6.65820 l
25.5664 5.84570 l
26.3320 5.84570 l
26.3320 4.29883 l
27.3789 3.67383 l
27.3789 5.84570 l
28.4414 5.84570 l
28.4414 6.65820 l
27.3789 6.65820 l
27.3789 10.2988 l
27.3789 10.6009 27.3971 10.7936 27.4336 10.8770  c
27.4701 10.9603 27.5299 11.0280 27.6133 11.0801  c
27.6966 11.1322 27.8164 11.1582 27.9727 11.1582  c
28.0977 11.1582 28.2539 11.1478 28.4414 11.1270  c
h
33.7285 10.0645 m
34.8223 10.1895 l
34.6556 10.8249 34.3379 11.3197 33.8691 11.6738  c
33.4004 12.0280 32.8066 12.2051 32.0879 12.2051  c
31.1816 12.2051 30.4603 11.9238 29.9238 11.3613  c
29.3874 10.7988 29.1191 10.0124 29.1191 9.00195  c
29.1191 7.96029 29.3900 7.15039 29.9316 6.57227  c
30.4733 5.99414 31.1712 5.70508 32.0254 5.70508  c
32.8587 5.70508 33.5384 5.98633 34.0645 6.54883  c
34.5905 7.11133 34.8535 7.90820 34.8535 8.93945  c
34.8535 9.00195 34.8535 9.09570 34.8535 9.22070  c
30.2129 9.22070 l
30.2546 9.90820 30.4473 10.4316 30.7910 10.7910  c
31.1348 11.1504 31.5671 11.3301 32.0879 11.3301  c
32.4733 11.3301 32.8040 11.2285 33.0801 11.0254  c
33.3561 10.8223 33.5723 10.5020 33.7285 10.0645  c
h
30.2754 8.36133 m
33.7441 8.36133 l
33.7025 7.83008 33.5723 7.43424 33.3535 7.17383  c
33.0098 6.76758 32.5723 6.56445 32.0410 6.56445  c
31.5514 6.56445 31.1426 6.72591 30.8145 7.04883  c
30.4863 7.37174 30.3066 7.80924 30.2754 8.36133  c
h
36.1367 12.0645 m
36.1367 5.84570 l
37.0898 5.84570 l
37.0898 6.78320 l
37.3294 6.34570 37.5508 6.05664 37.7539 5.91602  c
37.9570 5.77539 38.1836 5.70508 38.4336 5.70508  c
38.7878 5.70508 39.1471 5.81445 39.5117 6.03320  c
39.1523 7.01758 l
38.8919 6.86133 38.6367 6.78320 38.3867 6.78320  c
38.1471 6.78320 37.9362 6.85352 37.7539 6.99414  c
37.5716 7.13477 37.4440 7.33008 37.3711 7.58008  c
37.2461 7.95508 37.1836 8.36133 37.1836 8.79883  c
37.1836 12.0645 l
36.1367 12.0645 l
h
40.2734 12.0645 m
40.2734 3.47070 l
43.2422 3.47070 l
43.9089 3.47070 44.4193 3.51237 44.7734 3.59570  c
45.2630 3.71029 45.6797 3.91341 46.0234 4.20508  c
46.4818 4.59049 46.8229 5.08268 47.0469 5.68164  c
47.2708 6.28060 47.3828 6.96029 47.3828 7.72070  c
47.3828 8.37695 47.3073 8.95508 47.1562 9.45508  c
47.0052 9.95508 46.8099 10.3717 46.5703 10.7051  c
46.3307 11.0384 46.0677 11.2988 45.7812 11.4863  c
45.4948 11.6738 45.1536 11.8171 44.7578 11.9160  c
44.3620 12.0150 43.9036 12.0645 43.3828 12.0645  c
40.2734 12.0645 l
h
41.4141 11.0488 m
43.2422 11.0488 l
43.8151 11.0488 44.2630 10.9967 44.5859 10.8926  c
44.9089 10.7884 45.1641 10.6374 45.3516 10.4395  c
45.6224 10.1790 45.8333 9.81966 45.9844 9.36133  c
46.1354 8.90299 46.2109 8.35091 46.2109 7.70508  c
46.2109 6.80924 46.0625 6.11914 45.7656 5.63477  c
45.4688 5.15039 45.1120 4.82487 44.6953 4.65820  c
44.3828 4.54362 43.8932 4.48633 43.2266 4.48633  c
41.4141 4.48633 l
41.4141 11.0488 l
h
53.0645 10.0645 m
54.1582 10.1895 l
53.9915 10.8249 53.6738 11.3197 53.2051 11.6738  c
52.7363 12.0280 52.1426 12.2051 51.4238 12.2051  c
50.5176 12.2051 49.7962 11.9238 49.2598 11.3613  c
48.7233 10.7988 48.4551 10.0124 48.4551 9.00195  c
48.4551 7.96029 48.7259 7.15039 49.2676 6.57227  c
49.8092 5.99414 50.5072 5.70508 51.3613 5.70508  c
52.1947 5.70508 52.8743 5.98633 53.4004 6.54883  c
53.9264 7.11133 54.1895 7.90820 54.1895 8.93945  c
54.1895 9.00195 54.1895 9.09570 54.1895 9.22070  c
49.5488 9.22070 l
49.5905 9.90820 49.7832 10.4316 50.1270 10.7910  c
50.4707 11.1504 50.9030 11.3301 51.4238 11.3301  c
51.8092 11.3301 52.1400 11.2285 52.4160 11.0254  c
52.6921 10.8223 52.9082 10.5020 53.0645 10.0645  c
h
49.6113 8.36133 m
53.0801 8.36133 l
53.0384 7.83008 52.9082 7.43424 52.6895 7.17383  c
52.3457 6.76758 51.9082 6.56445 51.3770 6.56445  c
50.8874 6.56445 50.4785 6.72591 50.1504 7.04883  c
49.8223 7.37174 49.6426 7.80924 49.6113 8.36133  c
h
57.7852 11.1270 m
57.9414 12.0488 l
57.6393 12.1113 57.3737 12.1426 57.1445 12.1426  c
56.7591 12.1426 56.4622 12.0827 56.2539 11.9629  c
56.0456 11.8431 55.8971 11.6842 55.8086 11.4863  c
55.7201 11.2884 55.6758 10.8717 55.6758 10.2363  c
55.6758 6.65820 l
54.9102 6.65820 l
54.9102 5.84570 l
55.6758 5.84570 l
55.6758 4.29883 l
56.7227 3.67383 l
56.7227 5.84570 l
57.7852 5.84570 l
57.7852 6.65820 l
56.7227 6.65820 l
56.7227 10.2988 l
56.7227 10.6009 56.7409 10.7936 56.7773 10.8770  c
56.8138 10.9603 56.8737 11.0280 56.9570 11.0801  c
57.0404 11.1322 57.1602 11.1582 57.3164 11.1582  c
57.4414 11.1582 57.5977 11.1478 57.7852 11.1270  c
h
62.8848 11.2988 m
62.4889 11.6322 62.1113 11.8665 61.7520 12.0020  c
61.3926 12.1374 61.0046 12.2051 60.5879 12.2051  c
59.9004 12.2051 59.3743 12.0384 59.0098 11.7051  c
58.6452 11.3717 58.4629 10.9447 58.4629 10.4238  c
58.4629 10.1217 58.5306 9.84310 58.6660 9.58789  c
58.8014 9.33268 58.9837 9.12956 59.2129 8.97852  c
59.4421 8.82747 59.6973 8.71549 59.9785 8.64258  c
60.1764 8.58008 60.4889 8.52279 60.9160 8.47070  c
61.7598 8.37695 62.3848 8.25716 62.7910 8.11133  c
62.7910 7.96549 62.7910 7.87695 62.7910 7.84570  c
62.7910 7.40820 62.6921 7.10091 62.4941 6.92383  c
62.2233 6.69466 61.8223 6.58008 61.2910 6.58008  c
60.8014 6.58008 60.4368 6.66602 60.1973 6.83789  c
59.9577 7.00977 59.7806 7.31445 59.6660 7.75195  c
58.6348 7.61133 l
58.7285 7.17383 58.8848 6.81966 59.1035 6.54883  c
59.3223 6.27799 59.6348 6.06966 60.0410 5.92383  c
60.4473 5.77799 60.9160 5.70508 61.4473 5.70508  c
61.9785 5.70508 62.4108 5.76758 62.7441 5.89258  c
63.0775 6.01758 63.3223 6.17383 63.4785 6.36133  c
63.6348 6.54883 63.7441 6.78841 63.8066 7.08008  c
63.8379 7.25716 63.8535 7.58008 63.8535 8.04883  c
63.8535 9.45508 l
63.8535 10.4342 63.8770 11.0540 63.9238 11.3145  c
63.9707 11.5749 64.0618 11.8249 64.1973 12.0645  c
63.0879 12.0645 l
62.9837 11.8457 62.9160 11.5905 62.8848 11.2988  c
h
62.7910 8.93945 m
62.4056 9.09570 61.8327 9.23112 61.0723 9.34570  c
60.6348 9.40820 60.3275 9.47852 60.1504 9.55664  c
59.9733 9.63477 59.8353 9.74674 59.7363 9.89258  c
59.6374 10.0384 59.5879 10.2051 59.5879 10.3926  c
59.5879 10.6738 59.6947 10.9082 59.9082 11.0957  c
60.1217 11.2832 60.4316 11.3770 60.8379 11.3770  c
61.2441 11.3770 61.6061 11.2884 61.9238 11.1113  c
62.2415 10.9342 62.4733 10.6895 62.6191 10.3770  c
62.7337 10.1374 62.7910 9.78841 62.7910 9.33008  c
62.7910 8.93945 l
h
65.4961 4.68945 m
65.4961 3.47070 l
66.5586 3.47070 l
66.5586 4.68945 l
65.4961 4.68945 l
h
65.4961 12.0645 m
65.4961 5.84570 l
66.5586 5.84570 l
66.5586 12.0645 l
65.4961 12.0645 l
h
68.1309 12.0645 m
68.1309 3.47070 l
69.1934 3.47070 l
69.1934 12.0645 l
68.1309 12.0645 l
h
70.4062 10.2051 m
71.4375 10.0488 l
71.5000 10.4655 71.6641 10.7832 71.9297 11.0020  c
72.1953 11.2207 72.5729 11.3301 73.0625 11.3301  c
73.5417 11.3301 73.8984 11.2337 74.1328 11.0410  c
74.3672 10.8483 74.4844 10.6165 74.4844 10.3457  c
74.4844 10.1061 74.3802 9.91862 74.1719 9.78320  c
74.0260 9.68945 73.6667 9.56966 73.0938 9.42383  c
72.3229 9.22591 71.7891 9.05664 71.4922 8.91602  c
71.1953 8.77539 70.9688 8.58008 70.8125 8.33008  c
70.6562 8.08008 70.5781 7.79883 70.5781 7.48633  c
70.5781 7.21549 70.6406 6.96029 70.7656 6.72070  c
70.8906 6.48112 71.0625 6.28320 71.2812 6.12695  c
71.4479 6.01237 71.6719 5.91341 71.9531 5.83008  c
72.2344 5.74674 72.5417 5.70508 72.8750 5.70508  c
73.3542 5.70508 73.7786 5.77539 74.1484 5.91602  c
74.5182 6.05664 74.7917 6.24674 74.9688 6.48633  c
75.1458 6.72591 75.2656 7.04362 75.3281 7.43945  c
74.2969 7.58008 l
74.2552 7.26758 74.1224 7.02018 73.8984 6.83789  c
73.6745 6.65560 73.3542 6.56445 72.9375 6.56445  c
72.4583 6.56445 72.1146 6.64518 71.9062 6.80664  c
71.6979 6.96810 71.5938 7.15820 71.5938 7.37695  c
71.5938 7.51237 71.6354 7.63216 71.7188 7.73633  c
71.8125 7.85091 71.9479 7.94466 72.1250 8.01758  c
72.2292 8.05924 72.5417 8.14779 73.0625 8.28320  c
73.8125 8.49154 74.3333 8.65820 74.6250 8.78320  c
74.9167 8.90820 75.1458 9.09049 75.3125 9.33008  c
75.4792 9.56966 75.5625 9.87174 75.5625 10.2363  c
75.5625 10.5905 75.4609 10.9212 75.2578 11.2285  c
75.0547 11.5358 74.7604 11.7754 74.3750 11.9473  c
73.9896 12.1191 73.5521 12.2051 73.0625 12.2051  c
72.2500 12.2051 71.6328 12.0358 71.2109 11.6973  c
70.7891 11.3587 70.5208 10.8613 70.4062 10.2051  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
128.000 44.0000 m
128.000 50.6274 122.627 56.0000 116.000 56.0000  c
109.373 56.0000 104.000 50.6274 104.000 44.0000  c
104.000 37.3726 109.373 32.0000 116.000 32.0000  c
122.627 32.0000 128.000 37.3726 128.000 44.0000  c
h
f
0 J
2 j
0.00000 0.00000 0.00000 RG
newpath
128.000 44.0000 m
128.000 50.6274 122.627 56.0000 116.000 56.0000  c
109.373 56.0000 104.000 50.6274 104.000 44.0000  c
104.000 37.3726 109.373 32.0000 116.000 32.0000  c
122.627 32.0000 128.000 37.3726 128.000 44.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
32.0000 103.000 m
32.0000 153.000 l
32.0000 154.657 33.3431 156.000 35.0000 156.000  c
209.000 156.000 l
210.657 156.000 212.000 154.657 212.000 153.000  c
212.000 103.000 l
212.000 101.343 210.657 100.000 209.000 100.000  c
35.0000 100.000 l
33.3431 100.000 32.0000 101.343 32.0000 103.000  c
h
f
1.50000 w
2 j
.576471 .576471 .643137 RG
newpath
32.0000 103.000 m
32.0000 153.000 l
32.0000 154.657 33.3431 156.000 35.0000 156.000  c
209.000 156.000 l
210.657 156.000 212.000 154.657 212.000 153.000  c
212.000 103.000 l
212.000 101.343 210.657 100.000 209.000 100.000  c
35.0000 100.000 l
33.3431 100.000 32.0000 101.343 32.0000 103.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [32.0 100.0 32.0 156.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
34.5000 105.500 m
34.5000 152.500 l
34.5000 154.157 35.8431 155.500 37.5000 155.500  c
208.500 155.500 l
210.157 155.500 211.500 154.157 211.500 152.500  c
211.500 105.500 l
211.500 103.843 210.157 102.500 208.500 102.500  c
37.5000 102.500 l
35.8431 102.500 34.5000 103.843 34.5000 105.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 78.1494 108.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.937500 12.0645 m
.937500 3.47070 l
4.75000 3.47070 l
5.52083 3.47070 6.10417 3.54883 6.50000 3.70508  c
6.89583 3.86133 7.21354 4.13477 7.45312 4.52539  c
7.69271 4.91602 7.81250 5.34570 7.81250 5.81445  c
7.81250 6.42904 7.61458 6.94466 7.21875 7.36133  c
6.82292 7.77799 6.21354 8.04362 5.39062 8.15820  c
5.69271 8.30404 5.92188 8.44466 6.07812 8.58008  c
6.41146 8.88216 6.72396 9.26237 7.01562 9.72070  c
8.51562 12.0645 l
7.07812 12.0645 l
5.95312 10.2832 l
5.61979 9.76237 5.34635 9.36654 5.13281 9.09570  c
4.91927 8.82487 4.72656 8.63477 4.55469 8.52539  c
4.38281 8.41602 4.20833 8.33529 4.03125 8.28320  c
3.90625 8.26237 3.69792 8.25195 3.40625 8.25195  c
2.07812 8.25195 l
2.07812 12.0645 l
.937500 12.0645 l
h
2.07812 7.26758 m
4.53125 7.26758 l
5.04167 7.26758 5.44531 7.21289 5.74219 7.10352  c
6.03906 6.99414 6.26302 6.82227 6.41406 6.58789  c
6.56510 6.35352 6.64062 6.09570 6.64062 5.81445  c
6.64062 5.40820 6.49219 5.07487 6.19531 4.81445  c
5.89844 4.55404 5.43229 4.42383 4.79688 4.42383  c
2.07812 4.42383 l
2.07812 7.26758 l
h
13.7129 10.0645 m
14.8066 10.1895 l
14.6400 10.8249 14.3223 11.3197 13.8535 11.6738  c
13.3848 12.0280 12.7910 12.2051 12.0723 12.2051  c
11.1660 12.2051 10.4447 11.9238 9.90820 11.3613  c
9.37174 10.7988 9.10352 10.0124 9.10352 9.00195  c
9.10352 7.96029 9.37435 7.15039 9.91602 6.57227  c
10.4577 5.99414 11.1556 5.70508 12.0098 5.70508  c
12.8431 5.70508 13.5228 5.98633 14.0488 6.54883  c
14.5749 7.11133 14.8379 7.90820 14.8379 8.93945  c
14.8379 9.00195 14.8379 9.09570 14.8379 9.22070  c
10.1973 9.22070 l
10.2389 9.90820 10.4316 10.4316 10.7754 10.7910  c
11.1191 11.1504 11.5514 11.3301 12.0723 11.3301  c
12.4577 11.3301 12.7884 11.2285 13.0645 11.0254  c
13.3405 10.8223 13.5566 10.5020 13.7129 10.0645  c
h
10.2598 8.36133 m
13.7285 8.36133 l
13.6868 7.83008 13.5566 7.43424 13.3379 7.17383  c
12.9941 6.76758 12.5566 6.56445 12.0254 6.56445  c
11.5358 6.56445 11.1270 6.72591 10.7988 7.04883  c
10.4707 7.37174 10.2910 7.80924 10.2598 8.36133  c
h
16.1367 12.0645 m
16.1367 5.84570 l
17.0742 5.84570 l
17.0742 6.72070 l
17.5326 6.04362 18.1940 5.70508 19.0586 5.70508  c
19.4336 5.70508 19.7799 5.77279 20.0977 5.90820  c
20.4154 6.04362 20.6523 6.22070 20.8086 6.43945  c
20.9648 6.65820 21.0742 6.91341 21.1367 7.20508  c
21.1680 7.40299 21.1836 7.74674 21.1836 8.23633  c
21.1836 12.0645 l
20.1367 12.0645 l
20.1367 8.28320 l
20.1367 7.84570 20.0951 7.52279 20.0117 7.31445  c
19.9284 7.10612 19.7826 6.93685 19.5742 6.80664  c
19.3659 6.67643 19.1211 6.61133 18.8398 6.61133  c
18.3919 6.61133 18.0039 6.75456 17.6758 7.04102  c
17.3477 7.32747 17.1836 7.86654 17.1836 8.65820  c
17.1836 12.0645 l
16.1367 12.0645 l
h
25.1074 11.1270 m
25.2637 12.0488 l
24.9616 12.1113 24.6960 12.1426 24.4668 12.1426  c
24.0814 12.1426 23.7845 12.0827 23.5762 11.9629  c
23.3678 11.8431 23.2194 11.6842 23.1309 11.4863  c
23.0423 11.2884 22.9980 10.8717 22.9980 10.2363  c
22.9980 6.65820 l
22.2324 6.65820 l
22.2324 5.84570 l
22.9980 5.84570 l
22.9980 4.29883 l
24.0449 3.67383 l
24.0449 5.84570 l
25.1074 5.84570 l
25.1074 6.65820 l
24.0449 6.65820 l
24.0449 10.2988 l
24.0449 10.6009 24.0632 10.7936 24.0996 10.8770  c
24.1361 10.9603 24.1960 11.0280 24.2793 11.0801  c
24.3626 11.1322 24.4824 11.1582 24.6387 11.1582  c
24.7637 11.1582 24.9199 11.1478 25.1074 11.1270  c
h
30.3945 10.0645 m
31.4883 10.1895 l
31.3216 10.8249 31.0039 11.3197 30.5352 11.6738  c
30.0664 12.0280 29.4727 12.2051 28.7539 12.2051  c
27.8477 12.2051 27.1263 11.9238 26.5898 11.3613  c
26.0534 10.7988 25.7852 10.0124 25.7852 9.00195  c
25.7852 7.96029 26.0560 7.15039 26.5977 6.57227  c
27.1393 5.99414 27.8372 5.70508 28.6914 5.70508  c
29.5247 5.70508 30.2044 5.98633 30.7305 6.54883  c
31.2565 7.11133 31.5195 7.90820 31.5195 8.93945  c
31.5195 9.00195 31.5195 9.09570 31.5195 9.22070  c
26.8789 9.22070 l
26.9206 9.90820 27.1133 10.4316 27.4570 10.7910  c
27.8008 11.1504 28.2331 11.3301 28.7539 11.3301  c
29.1393 11.3301 29.4701 11.2285 29.7461 11.0254  c
30.0221 10.8223 30.2383 10.5020 30.3945 10.0645  c
h
26.9414 8.36133 m
30.4102 8.36133 l
30.3685 7.83008 30.2383 7.43424 30.0195 7.17383  c
29.6758 6.76758 29.2383 6.56445 28.7070 6.56445  c
28.2174 6.56445 27.8086 6.72591 27.4805 7.04883  c
27.1523 7.37174 26.9727 7.80924 26.9414 8.36133  c
h
32.8027 12.0645 m
32.8027 5.84570 l
33.7559 5.84570 l
33.7559 6.78320 l
33.9954 6.34570 34.2168 6.05664 34.4199 5.91602  c
34.6230 5.77539 34.8496 5.70508 35.0996 5.70508  c
35.4538 5.70508 35.8132 5.81445 36.1777 6.03320  c
35.8184 7.01758 l
35.5579 6.86133 35.3027 6.78320 35.0527 6.78320  c
34.8132 6.78320 34.6022 6.85352 34.4199 6.99414  c
34.2376 7.13477 34.1100 7.33008 34.0371 7.58008  c
33.9121 7.95508 33.8496 8.36133 33.8496 8.79883  c
33.8496 12.0645 l
32.8027 12.0645 l
h
36.9395 12.0645 m
36.9395 3.47070 l
39.9082 3.47070 l
40.5749 3.47070 41.0853 3.51237 41.4395 3.59570  c
41.9290 3.71029 42.3457 3.91341 42.6895 4.20508  c
43.1478 4.59049 43.4889 5.08268 43.7129 5.68164  c
43.9368 6.28060 44.0488 6.96029 44.0488 7.72070  c
44.0488 8.37695 43.9733 8.95508 43.8223 9.45508  c
43.6712 9.95508 43.4759 10.3717 43.2363 10.7051  c
42.9967 11.0384 42.7337 11.2988 42.4473 11.4863  c
42.1608 11.6738 41.8197 11.8171 41.4238 11.9160  c
41.0280 12.0150 40.5697 12.0645 40.0488 12.0645  c
36.9395 12.0645 l
h
38.0801 11.0488 m
39.9082 11.0488 l
40.4811 11.0488 40.9290 10.9967 41.2520 10.8926  c
41.5749 10.7884 41.8301 10.6374 42.0176 10.4395  c
42.2884 10.1790 42.4993 9.81966 42.6504 9.36133  c
42.8014 8.90299 42.8770 8.35091 42.8770 7.70508  c
42.8770 6.80924 42.7285 6.11914 42.4316 5.63477  c
42.1348 5.15039 41.7780 4.82487 41.3613 4.65820  c
41.0488 4.54362 40.5592 4.48633 39.8926 4.48633  c
38.0801 4.48633 l
38.0801 11.0488 l
h
49.7305 10.0645 m
50.8242 10.1895 l
50.6576 10.8249 50.3398 11.3197 49.8711 11.6738  c
49.4023 12.0280 48.8086 12.2051 48.0898 12.2051  c
47.1836 12.2051 46.4622 11.9238 45.9258 11.3613  c
45.3893 10.7988 45.1211 10.0124 45.1211 9.00195  c
45.1211 7.96029 45.3919 7.15039 45.9336 6.57227  c
46.4753 5.99414 47.1732 5.70508 48.0273 5.70508  c
48.8607 5.70508 49.5404 5.98633 50.0664 6.54883  c
50.5924 7.11133 50.8555 7.90820 50.8555 8.93945  c
50.8555 9.00195 50.8555 9.09570 50.8555 9.22070  c
46.2148 9.22070 l
46.2565 9.90820 46.4492 10.4316 46.7930 10.7910  c
47.1367 11.1504 47.5690 11.3301 48.0898 11.3301  c
48.4753 11.3301 48.8060 11.2285 49.0820 11.0254  c
49.3581 10.8223 49.5742 10.5020 49.7305 10.0645  c
h
46.2773 8.36133 m
49.7461 8.36133 l
49.7044 7.83008 49.5742 7.43424 49.3555 7.17383  c
49.0117 6.76758 48.5742 6.56445 48.0430 6.56445  c
47.5534 6.56445 47.1445 6.72591 46.8164 7.04883  c
46.4883 7.37174 46.3086 7.80924 46.2773 8.36133  c
h
54.4512 11.1270 m
54.6074 12.0488 l
54.3053 12.1113 54.0397 12.1426 53.8105 12.1426  c
53.4251 12.1426 53.1283 12.0827 52.9199 11.9629  c
52.7116 11.8431 52.5632 11.6842 52.4746 11.4863  c
52.3861 11.2884 52.3418 10.8717 52.3418 10.2363  c
52.3418 6.65820 l
51.5762 6.65820 l
51.5762 5.84570 l
52.3418 5.84570 l
52.3418 4.29883 l
53.3887 3.67383 l
53.3887 5.84570 l
54.4512 5.84570 l
54.4512 6.65820 l
53.3887 6.65820 l
53.3887 10.2988 l
53.3887 10.6009 53.4069 10.7936 53.4434 10.8770  c
53.4798 10.9603 53.5397 11.0280 53.6230 11.0801  c
53.7064 11.1322 53.8262 11.1582 53.9824 11.1582  c
54.1074 11.1582 54.2637 11.1478 54.4512 11.1270  c
h
59.5508 11.2988 m
59.1549 11.6322 58.7773 11.8665 58.4180 12.0020  c
58.0586 12.1374 57.6706 12.2051 57.2539 12.2051  c
56.5664 12.2051 56.0404 12.0384 55.6758 11.7051  c
55.3112 11.3717 55.1289 10.9447 55.1289 10.4238  c
55.1289 10.1217 55.1966 9.84310 55.3320 9.58789  c
55.4674 9.33268 55.6497 9.12956 55.8789 8.97852  c
56.1081 8.82747 56.3633 8.71549 56.6445 8.64258  c
56.8424 8.58008 57.1549 8.52279 57.5820 8.47070  c
58.4258 8.37695 59.0508 8.25716 59.4570 8.11133  c
59.4570 7.96549 59.4570 7.87695 59.4570 7.84570  c
59.4570 7.40820 59.3581 7.10091 59.1602 6.92383  c
58.8893 6.69466 58.4883 6.58008 57.9570 6.58008  c
57.4674 6.58008 57.1029 6.66602 56.8633 6.83789  c
56.6237 7.00977 56.4466 7.31445 56.3320 7.75195  c
55.3008 7.61133 l
55.3945 7.17383 55.5508 6.81966 55.7695 6.54883  c
55.9883 6.27799 56.3008 6.06966 56.7070 5.92383  c
57.1133 5.77799 57.5820 5.70508 58.1133 5.70508  c
58.6445 5.70508 59.0768 5.76758 59.4102 5.89258  c
59.7435 6.01758 59.9883 6.17383 60.1445 6.36133  c
60.3008 6.54883 60.4102 6.78841 60.4727 7.08008  c
60.5039 7.25716 60.5195 7.58008 60.5195 8.04883  c
60.5195 9.45508 l
60.5195 10.4342 60.5430 11.0540 60.5898 11.3145  c
60.6367 11.5749 60.7279 11.8249 60.8633 12.0645  c
59.7539 12.0645 l
59.6497 11.8457 59.5820 11.5905 59.5508 11.2988  c
h
59.4570 8.93945 m
59.0716 9.09570 58.4987 9.23112 57.7383 9.34570  c
57.3008 9.40820 56.9935 9.47852 56.8164 9.55664  c
56.6393 9.63477 56.5013 9.74674 56.4023 9.89258  c
56.3034 10.0384 56.2539 10.2051 56.2539 10.3926  c
56.2539 10.6738 56.3607 10.9082 56.5742 11.0957  c
56.7878 11.2832 57.0977 11.3770 57.5039 11.3770  c
57.9102 11.3770 58.2721 11.2884 58.5898 11.1113  c
58.9076 10.9342 59.1393 10.6895 59.2852 10.3770  c
59.3997 10.1374 59.4570 9.78841 59.4570 9.33008  c
59.4570 8.93945 l
h
62.1621 4.68945 m
62.1621 3.47070 l
63.2246 3.47070 l
63.2246 4.68945 l
62.1621 4.68945 l
h
62.1621 12.0645 m
62.1621 5.84570 l
63.2246 5.84570 l
63.2246 12.0645 l
62.1621 12.0645 l
h
64.7969 12.0645 m
64.7969 3.47070 l
65.8594 3.47070 l
65.8594 12.0645 l
64.7969 12.0645 l
h
67.0723 10.2051 m
68.1035 10.0488 l
68.1660 10.4655 68.3301 10.7832 68.5957 11.0020  c
68.8613 11.2207 69.2389 11.3301 69.7285 11.3301  c
70.2077 11.3301 70.5645 11.2337 70.7988 11.0410  c
71.0332 10.8483 71.1504 10.6165 71.1504 10.3457  c
71.1504 10.1061 71.0462 9.91862 70.8379 9.78320  c
70.6921 9.68945 70.3327 9.56966 69.7598 9.42383  c
68.9889 9.22591 68.4551 9.05664 68.1582 8.91602  c
67.8613 8.77539 67.6348 8.58008 67.4785 8.33008  c
67.3223 8.08008 67.2441 7.79883 67.2441 7.48633  c
67.2441 7.21549 67.3066 6.96029 67.4316 6.72070  c
67.5566 6.48112 67.7285 6.28320 67.9473 6.12695  c
68.1139 6.01237 68.3379 5.91341 68.6191 5.83008  c
68.9004 5.74674 69.2077 5.70508 69.5410 5.70508  c
70.0202 5.70508 70.4447 5.77539 70.8145 5.91602  c
71.1842 6.05664 71.4577 6.24674 71.6348 6.48633  c
71.8118 6.72591 71.9316 7.04362 71.9941 7.43945  c
70.9629 7.58008 l
70.9212 7.26758 70.7884 7.02018 70.5645 6.83789  c
70.3405 6.65560 70.0202 6.56445 69.6035 6.56445  c
69.1243 6.56445 68.7806 6.64518 68.5723 6.80664  c
68.3639 6.96810 68.2598 7.15820 68.2598 7.37695  c
68.2598 7.51237 68.3014 7.63216 68.3848 7.73633  c
68.4785 7.85091 68.6139 7.94466 68.7910 8.01758  c
68.8952 8.05924 69.2077 8.14779 69.7285 8.28320  c
70.4785 8.49154 70.9993 8.65820 71.2910 8.78320  c
71.5827 8.90820 71.8118 9.09049 71.9785 9.33008  c
72.1452 9.56966 72.2285 9.87174 72.2285 10.2363  c
72.2285 10.5905 72.1270 10.9212 71.9238 11.2285  c
71.7207 11.5358 71.4264 11.7754 71.0410 11.9473  c
70.6556 12.1191 70.2181 12.2051 69.7285 12.2051  c
68.9160 12.2051 68.2988 12.0358 67.8770 11.6973  c
67.4551 11.3587 67.1868 10.8613 67.0723 10.2051  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
188.799 108.000 m
200.000 108.000 l
200.000 122.701 l
188.799 122.701 l
188.799 108.000 l
h
f
1.00000 w
0 j
newpath
188.799 108.000 m
200.000 108.000 l
200.000 122.701 l
188.799 122.701 l
188.799 108.000 l
h
S
newpath
185.299 111.351 m
192.299 111.351 l
192.299 114.351 l
185.299 114.351 l
185.299 111.351 l
h
f
.752941 .752941 .752941 RG
newpath
185.299 111.351 m
192.299 111.351 l
192.299 114.351 l
185.299 114.351 l
185.299 111.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
185.299 116.351 m
192.299 116.351 l
192.299 119.351 l
185.299 119.351 l
185.299 116.351 l
h
f
.752941 .752941 .752941 RG
newpath
185.299 116.351 m
192.299 116.351 l
192.299 119.351 l
185.299 119.351 l
185.299 116.351 l
h
S
2 j
.576471 .576471 .643137 RG
newpath
32.0000 126.701 m
212.000 126.701 l
S
0.00000 0.00000 0.00000 RG
0 j
1.00000 1.00000 1.00000 RG
newpath
43.0000 132.700 m
43.0000 140.401 l
43.0000 140.953 43.4477 141.401 44.0000 141.401  c
52.7012 141.401 l
53.2535 141.401 53.7012 140.953 53.7012 140.401  c
53.7012 132.700 l
53.7012 132.148 53.2535 131.700 52.7012 131.700  c
44.0000 131.700 l
43.4477 131.700 43.0000 132.148 43.0000 132.700  c
h
f
1.50000 w
2 j
.211765 .337255 .211765 RG
newpath
43.0000 132.700 m
43.0000 140.401 l
43.0000 140.953 43.4477 141.401 44.0000 141.401  c
52.7012 141.401 l
53.2535 141.401 53.7012 140.953 53.7012 140.401  c
53.7012 132.700 l
53.7012 132.148 53.2535 131.700 52.7012 131.700  c
44.0000 131.700 l
43.4477 131.700 43.0000 132.148 43.0000 132.700  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [43.0 131.6999969482422 43.0 141.4011688232422]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.30588236 0.4862745 0.30588236]
         /C1 [0.61960787 0.9882353 0.61960787]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
45.0000 134.700 m
45.0000 139.901 l
45.0000 140.453 45.4477 140.901 46.0000 140.901  c
52.2012 140.901 l
52.7535 140.901 53.2012 140.453 53.2012 139.901  c
53.2012 134.700 l
53.2012 134.148 52.7535 133.700 52.2012 133.700  c
46.0000 133.700 l
45.4477 133.700 45.0000 134.148 45.0000 134.700  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 57.0000 128.700 ] concat
0.00000 0.00000 0.00000 RG
newpath
.781250 12.0645 m
.781250 5.84570 l
1.73438 5.84570 l
1.73438 6.78320 l
1.97396 6.34570 2.19531 6.05664 2.39844 5.91602  c
2.60156 5.77539 2.82812 5.70508 3.07812 5.70508  c
3.43229 5.70508 3.79167 5.81445 4.15625 6.03320  c
3.79688 7.01758 l
3.53646 6.86133 3.28125 6.78320 3.03125 6.78320  c
2.79167 6.78320 2.58073 6.85352 2.39844 6.99414  c
2.21615 7.13477 2.08854 7.33008 2.01562 7.58008  c
1.89062 7.95508 1.82812 8.36133 1.82812 8.79883  c
1.82812 12.0645 l
.781250 12.0645 l
h
9.04297 10.0645 m
10.1367 10.1895 l
9.97005 10.8249 9.65234 11.3197 9.18359 11.6738  c
8.71484 12.0280 8.12109 12.2051 7.40234 12.2051  c
6.49609 12.2051 5.77474 11.9238 5.23828 11.3613  c
4.70182 10.7988 4.43359 10.0124 4.43359 9.00195  c
4.43359 7.96029 4.70443 7.15039 5.24609 6.57227  c
5.78776 5.99414 6.48568 5.70508 7.33984 5.70508  c
8.17318 5.70508 8.85286 5.98633 9.37891 6.54883  c
9.90495 7.11133 10.1680 7.90820 10.1680 8.93945  c
10.1680 9.00195 10.1680 9.09570 10.1680 9.22070  c
5.52734 9.22070 l
5.56901 9.90820 5.76172 10.4316 6.10547 10.7910  c
6.44922 11.1504 6.88151 11.3301 7.40234 11.3301  c
7.78776 11.3301 8.11849 11.2285 8.39453 11.0254  c
8.67057 10.8223 8.88672 10.5020 9.04297 10.0645  c
h
5.58984 8.36133 m
9.05859 8.36133 l
9.01693 7.83008 8.88672 7.43424 8.66797 7.17383  c
8.32422 6.76758 7.88672 6.56445 7.35547 6.56445  c
6.86589 6.56445 6.45703 6.72591 6.12891 7.04883  c
5.80078 7.37174 5.62109 7.80924 5.58984 8.36133  c
h
11.4668 12.0645 m
11.4668 5.84570 l
12.4043 5.84570 l
12.4043 6.72070 l
12.8626 6.04362 13.5241 5.70508 14.3887 5.70508  c
14.7637 5.70508 15.1100 5.77279 15.4277 5.90820  c
15.7454 6.04362 15.9824 6.22070 16.1387 6.43945  c
16.2949 6.65820 16.4043 6.91341 16.4668 7.20508  c
16.4980 7.40299 16.5137 7.74674 16.5137 8.23633  c
16.5137 12.0645 l
15.4668 12.0645 l
15.4668 8.28320 l
15.4668 7.84570 15.4251 7.52279 15.3418 7.31445  c
15.2585 7.10612 15.1126 6.93685 14.9043 6.80664  c
14.6960 6.67643 14.4512 6.61133 14.1699 6.61133  c
13.7220 6.61133 13.3340 6.75456 13.0059 7.04102  c
12.6777 7.32747 12.5137 7.86654 12.5137 8.65820  c
12.5137 12.0645 l
11.4668 12.0645 l
h
20.4375 11.1270 m
20.5938 12.0488 l
20.2917 12.1113 20.0260 12.1426 19.7969 12.1426  c
19.4115 12.1426 19.1146 12.0827 18.9062 11.9629  c
18.6979 11.8431 18.5495 11.6842 18.4609 11.4863  c
18.3724 11.2884 18.3281 10.8717 18.3281 10.2363  c
18.3281 6.65820 l
17.5625 6.65820 l
17.5625 5.84570 l
18.3281 5.84570 l
18.3281 4.29883 l
19.3750 3.67383 l
19.3750 5.84570 l
20.4375 5.84570 l
20.4375 6.65820 l
19.3750 6.65820 l
19.3750 10.2988 l
19.3750 10.6009 19.3932 10.7936 19.4297 10.8770  c
19.4661 10.9603 19.5260 11.0280 19.6094 11.0801  c
19.6927 11.1322 19.8125 11.1582 19.9688 11.1582  c
20.0938 11.1582 20.2500 11.1478 20.4375 11.1270  c
h
25.7246 10.0645 m
26.8184 10.1895 l
26.6517 10.8249 26.3340 11.3197 25.8652 11.6738  c
25.3965 12.0280 24.8027 12.2051 24.0840 12.2051  c
23.1777 12.2051 22.4564 11.9238 21.9199 11.3613  c
21.3835 10.7988 21.1152 10.0124 21.1152 9.00195  c
21.1152 7.96029 21.3861 7.15039 21.9277 6.57227  c
22.4694 5.99414 23.1673 5.70508 24.0215 5.70508  c
24.8548 5.70508 25.5345 5.98633 26.0605 6.54883  c
26.5866 7.11133 26.8496 7.90820 26.8496 8.93945  c
26.8496 9.00195 26.8496 9.09570 26.8496 9.22070  c
22.2090 9.22070 l
22.2507 9.90820 22.4434 10.4316 22.7871 10.7910  c
23.1309 11.1504 23.5632 11.3301 24.0840 11.3301  c
24.4694 11.3301 24.8001 11.2285 25.0762 11.0254  c
25.3522 10.8223 25.5684 10.5020 25.7246 10.0645  c
h
22.2715 8.36133 m
25.7402 8.36133 l
25.6986 7.83008 25.5684 7.43424 25.3496 7.17383  c
25.0059 6.76758 24.5684 6.56445 24.0371 6.56445  c
23.5475 6.56445 23.1387 6.72591 22.8105 7.04883  c
22.4824 7.37174 22.3027 7.80924 22.2715 8.36133  c
h
28.1328 12.0645 m
28.1328 5.84570 l
29.0859 5.84570 l
29.0859 6.78320 l
29.3255 6.34570 29.5469 6.05664 29.7500 5.91602  c
29.9531 5.77539 30.1797 5.70508 30.4297 5.70508  c
30.7839 5.70508 31.1432 5.81445 31.5078 6.03320  c
31.1484 7.01758 l
30.8880 6.86133 30.6328 6.78320 30.3828 6.78320  c
30.1432 6.78320 29.9323 6.85352 29.7500 6.99414  c
29.5677 7.13477 29.4401 7.33008 29.3672 7.58008  c
29.2422 7.95508 29.1797 8.36133 29.1797 8.79883  c
29.1797 12.0645 l
28.1328 12.0645 l
h
32.2695 12.0645 m
32.2695 3.47070 l
33.4258 3.47070 l
37.9414 10.2207 l
37.9414 3.47070 l
39.0352 3.47070 l
39.0352 12.0645 l
37.8633 12.0645 l
33.3477 5.31445 l
33.3477 12.0645 l
32.2695 12.0645 l
h
44.8730 11.2988 m
44.4772 11.6322 44.0996 11.8665 43.7402 12.0020  c
43.3809 12.1374 42.9928 12.2051 42.5762 12.2051  c
41.8887 12.2051 41.3626 12.0384 40.9980 11.7051  c
40.6335 11.3717 40.4512 10.9447 40.4512 10.4238  c
40.4512 10.1217 40.5189 9.84310 40.6543 9.58789  c
40.7897 9.33268 40.9720 9.12956 41.2012 8.97852  c
41.4303 8.82747 41.6855 8.71549 41.9668 8.64258  c
42.1647 8.58008 42.4772 8.52279 42.9043 8.47070  c
43.7480 8.37695 44.3730 8.25716 44.7793 8.11133  c
44.7793 7.96549 44.7793 7.87695 44.7793 7.84570  c
44.7793 7.40820 44.6803 7.10091 44.4824 6.92383  c
44.2116 6.69466 43.8105 6.58008 43.2793 6.58008  c
42.7897 6.58008 42.4251 6.66602 42.1855 6.83789  c
41.9460 7.00977 41.7689 7.31445 41.6543 7.75195  c
40.6230 7.61133 l
40.7168 7.17383 40.8730 6.81966 41.0918 6.54883  c
41.3105 6.27799 41.6230 6.06966 42.0293 5.92383  c
42.4355 5.77799 42.9043 5.70508 43.4355 5.70508  c
43.9668 5.70508 44.3991 5.76758 44.7324 5.89258  c
45.0658 6.01758 45.3105 6.17383 45.4668 6.36133  c
45.6230 6.54883 45.7324 6.78841 45.7949 7.08008  c
45.8262 7.25716 45.8418 7.58008 45.8418 8.04883  c
45.8418 9.45508 l
45.8418 10.4342 45.8652 11.0540 45.9121 11.3145  c
45.9590 11.5749 46.0501 11.8249 46.1855 12.0645  c
45.0762 12.0645 l
44.9720 11.8457 44.9043 11.5905 44.8730 11.2988  c
h
44.7793 8.93945 m
44.3939 9.09570 43.8210 9.23112 43.0605 9.34570  c
42.6230 9.40820 42.3158 9.47852 42.1387 9.55664  c
41.9616 9.63477 41.8236 9.74674 41.7246 9.89258  c
41.6257 10.0384 41.5762 10.2051 41.5762 10.3926  c
41.5762 10.6738 41.6829 10.9082 41.8965 11.0957  c
42.1100 11.2832 42.4199 11.3770 42.8262 11.3770  c
43.2324 11.3770 43.5944 11.2884 43.9121 11.1113  c
44.2298 10.9342 44.4616 10.6895 44.6074 10.3770  c
44.7220 10.1374 44.7793 9.78841 44.7793 9.33008  c
44.7793 8.93945 l
h
47.4844 12.0645 m
47.4844 5.84570 l
48.4219 5.84570 l
48.4219 6.72070 l
48.6198 6.40820 48.8802 6.16081 49.2031 5.97852  c
49.5260 5.79622 49.8958 5.70508 50.3125 5.70508  c
50.7708 5.70508 51.1484 5.79883 51.4453 5.98633  c
51.7422 6.17383 51.9479 6.43945 52.0625 6.78320  c
52.5625 6.06445 53.2031 5.70508 53.9844 5.70508  c
54.6094 5.70508 55.0859 5.87435 55.4141 6.21289  c
55.7422 6.55143 55.9062 7.08008 55.9062 7.79883  c
55.9062 12.0645 l
54.8594 12.0645 l
54.8594 8.14258 l
54.8594 7.72591 54.8255 7.42383 54.7578 7.23633  c
54.6901 7.04883 54.5677 6.89779 54.3906 6.78320  c
54.2135 6.66862 54.0000 6.61133 53.7500 6.61133  c
53.3125 6.61133 52.9505 6.75716 52.6641 7.04883  c
52.3776 7.34049 52.2344 7.80924 52.2344 8.45508  c
52.2344 12.0645 l
51.1719 12.0645 l
51.1719 8.01758 l
51.1719 7.54883 51.0859 7.19727 50.9141 6.96289  c
50.7422 6.72852 50.4635 6.61133 50.0781 6.61133  c
49.7760 6.61133 49.5000 6.68945 49.2500 6.84570  c
49.0000 7.00195 48.8177 7.23112 48.7031 7.53320  c
48.5885 7.83529 48.5312 8.26758 48.5312 8.83008  c
48.5312 12.0645 l
47.4844 12.0645 l
h
61.7305 10.0645 m
62.8242 10.1895 l
62.6576 10.8249 62.3398 11.3197 61.8711 11.6738  c
61.4023 12.0280 60.8086 12.2051 60.0898 12.2051  c
59.1836 12.2051 58.4622 11.9238 57.9258 11.3613  c
57.3893 10.7988 57.1211 10.0124 57.1211 9.00195  c
57.1211 7.96029 57.3919 7.15039 57.9336 6.57227  c
58.4753 5.99414 59.1732 5.70508 60.0273 5.70508  c
60.8607 5.70508 61.5404 5.98633 62.0664 6.54883  c
62.5924 7.11133 62.8555 7.90820 62.8555 8.93945  c
62.8555 9.00195 62.8555 9.09570 62.8555 9.22070  c
58.2148 9.22070 l
58.2565 9.90820 58.4492 10.4316 58.7930 10.7910  c
59.1367 11.1504 59.5690 11.3301 60.0898 11.3301  c
60.4753 11.3301 60.8060 11.2285 61.0820 11.0254  c
61.3581 10.8223 61.5742 10.5020 61.7305 10.0645  c
h
58.2773 8.36133 m
61.7461 8.36133 l
61.7044 7.83008 61.5742 7.43424 61.3555 7.17383  c
61.0117 6.76758 60.5742 6.56445 60.0430 6.56445  c
59.5534 6.56445 59.1445 6.72591 58.8164 7.04883  c
58.4883 7.37174 58.3086 7.80924 58.2773 8.36133  c
h
67.7695 7.04883 m
67.7695 5.84570 l
68.9727 5.84570 l
68.9727 7.04883 l
67.7695 7.04883 l
h
67.7695 12.0645 m
67.7695 10.8613 l
68.9727 10.8613 l
68.9727 12.0645 l
67.7695 12.0645 l
h
73.9062 9.29883 m
74.9688 9.20508 l
75.0208 9.64258 75.1406 9.99674 75.3281 10.2676  c
75.5156 10.5384 75.8047 10.7598 76.1953 10.9316  c
76.5859 11.1035 77.0260 11.1895 77.5156 11.1895  c
77.9427 11.1895 78.3229 11.1243 78.6562 10.9941  c
78.9896 10.8639 79.2370 10.6868 79.3984 10.4629  c
79.5599 10.2389 79.6406 9.99674 79.6406 9.73633  c
79.6406 9.46549 79.5625 9.22852 79.4062 9.02539  c
79.2500 8.82227 78.9948 8.65299 78.6406 8.51758  c
78.4010 8.42383 77.8880 8.28320 77.1016 8.09570  c
76.3151 7.90820 75.7656 7.73112 75.4531 7.56445  c
75.0365 7.34570 74.7292 7.07747 74.5312 6.75977  c
74.3333 6.44206 74.2344 6.08529 74.2344 5.68945  c
74.2344 5.26237 74.3568 4.85872 74.6016 4.47852  c
74.8464 4.09831 75.2057 3.81185 75.6797 3.61914  c
76.1536 3.42643 76.6771 3.33008 77.2500 3.33008  c
77.8854 3.33008 78.4479 3.43164 78.9375 3.63477  c
79.4271 3.83789 79.8021 4.13997 80.0625 4.54102  c
80.3229 4.94206 80.4635 5.39258 80.4844 5.89258  c
79.3906 5.97070 l
79.3281 5.42904 79.1276 5.02018 78.7891 4.74414  c
78.4505 4.46810 77.9531 4.33008 77.2969 4.33008  c
76.6094 4.33008 76.1094 4.45508 75.7969 4.70508  c
75.4844 4.95508 75.3281 5.25716 75.3281 5.61133  c
75.3281 5.92383 75.4375 6.17904 75.6562 6.37695  c
75.8750 6.57487 76.4453 6.77799 77.3672 6.98633  c
78.2891 7.19466 78.9219 7.37695 79.2656 7.53320  c
79.7656 7.77279 80.1354 8.06706 80.3750 8.41602  c
80.6146 8.76497 80.7344 9.17383 80.7344 9.64258  c
80.7344 10.1009 80.6042 10.5306 80.3438 10.9316  c
80.0833 11.3327 79.7083 11.6452 79.2188 11.8691  c
78.7292 12.0931 78.1771 12.2051 77.5625 12.2051  c
76.7812 12.2051 76.1276 12.0931 75.6016 11.8691  c
75.0755 11.6452 74.6641 11.3040 74.3672 10.8457  c
74.0703 10.3874 73.9167 9.87174 73.9062 9.29883  c
h
84.4570 11.1270 m
84.6133 12.0488 l
84.3112 12.1113 84.0456 12.1426 83.8164 12.1426  c
83.4310 12.1426 83.1341 12.0827 82.9258 11.9629  c
82.7174 11.8431 82.5690 11.6842 82.4805 11.4863  c
82.3919 11.2884 82.3477 10.8717 82.3477 10.2363  c
82.3477 6.65820 l
81.5820 6.65820 l
81.5820 5.84570 l
82.3477 5.84570 l
82.3477 4.29883 l
83.3945 3.67383 l
83.3945 5.84570 l
84.4570 5.84570 l
84.4570 6.65820 l
83.3945 6.65820 l
83.3945 10.2988 l
83.3945 10.6009 83.4128 10.7936 83.4492 10.8770  c
83.4857 10.9603 83.5456 11.0280 83.6289 11.0801  c
83.7122 11.1322 83.8320 11.1582 83.9883 11.1582  c
84.1133 11.1582 84.2695 11.1478 84.4570 11.1270  c
h
85.4785 12.0645 m
85.4785 5.84570 l
86.4316 5.84570 l
86.4316 6.78320 l
86.6712 6.34570 86.8926 6.05664 87.0957 5.91602  c
87.2988 5.77539 87.5254 5.70508 87.7754 5.70508  c
88.1296 5.70508 88.4889 5.81445 88.8535 6.03320  c
88.4941 7.01758 l
88.2337 6.86133 87.9785 6.78320 87.7285 6.78320  c
87.4889 6.78320 87.2780 6.85352 87.0957 6.99414  c
86.9134 7.13477 86.7858 7.33008 86.7129 7.58008  c
86.5879 7.95508 86.5254 8.36133 86.5254 8.79883  c
86.5254 12.0645 l
85.4785 12.0645 l
h
89.4902 4.68945 m
89.4902 3.47070 l
90.5527 3.47070 l
90.5527 4.68945 l
89.4902 4.68945 l
h
89.4902 12.0645 m
89.4902 5.84570 l
90.5527 5.84570 l
90.5527 12.0645 l
89.4902 12.0645 l
h
92.1562 12.0645 m
92.1562 5.84570 l
93.0938 5.84570 l
93.0938 6.72070 l
93.5521 6.04362 94.2135 5.70508 95.0781 5.70508  c
95.4531 5.70508 95.7995 5.77279 96.1172 5.90820  c
96.4349 6.04362 96.6719 6.22070 96.8281 6.43945  c
96.9844 6.65820 97.0938 6.91341 97.1562 7.20508  c
97.1875 7.40299 97.2031 7.74674 97.2031 8.23633  c
97.2031 12.0645 l
96.1562 12.0645 l
96.1562 8.28320 l
96.1562 7.84570 96.1146 7.52279 96.0312 7.31445  c
95.9479 7.10612 95.8021 6.93685 95.5938 6.80664  c
95.3854 6.67643 95.1406 6.61133 94.8594 6.61133  c
94.4115 6.61133 94.0234 6.75456 93.6953 7.04102  c
93.3672 7.32747 93.2031 7.86654 93.2031 8.65820  c
93.2031 12.0645 l
92.1562 12.0645 l
h
98.6270 12.5801 m
99.6582 12.7363 l
99.6999 13.0488 99.8197 13.2780 100.018 13.4238  c
100.278 13.6217 100.632 13.7207 101.080 13.7207  c
101.570 13.7207 101.947 13.6217 102.213 13.4238  c
102.479 13.2259 102.658 12.9551 102.752 12.6113  c
102.814 12.3926 102.840 11.9395 102.830 11.2520  c
102.372 11.7936 101.799 12.0645 101.111 12.0645  c
100.257 12.0645 99.5957 11.7546 99.1270 11.1348  c
98.6582 10.5150 98.4238 9.77799 98.4238 8.92383  c
98.4238 8.33008 98.5306 7.78060 98.7441 7.27539  c
98.9577 6.77018 99.2676 6.38216 99.6738 6.11133  c
100.080 5.84049 100.559 5.70508 101.111 5.70508  c
101.851 5.70508 102.460 6.00195 102.939 6.59570  c
102.939 5.84570 l
103.908 5.84570 l
103.908 11.2207 l
103.908 12.1895 103.809 12.8770 103.611 13.2832  c
103.413 13.6895 103.101 14.0098 102.674 14.2441  c
102.247 14.4785 101.721 14.5957 101.096 14.5957  c
100.356 14.5957 99.7572 14.4290 99.2988 14.0957  c
98.8405 13.7624 98.6165 13.2572 98.6270 12.5801  c
h
99.5020 8.84570 m
99.5020 9.65820 99.6634 10.2520 99.9863 10.6270  c
100.309 11.0020 100.715 11.1895 101.205 11.1895  c
101.695 11.1895 102.104 11.0020 102.432 10.6270  c
102.760 10.2520 102.924 9.66862 102.924 8.87695  c
102.924 8.11654 102.755 7.54362 102.416 7.15820  c
102.077 6.77279 101.669 6.58008 101.189 6.58008  c
100.721 6.58008 100.322 6.77018 99.9941 7.15039  c
99.6660 7.53060 99.5020 8.09570 99.5020 8.84570  c
h
114.385 7.01758 m
108.713 7.01758 l
108.713 6.03320 l
114.385 6.03320 l
114.385 7.01758 l
h
114.385 9.62695 m
108.713 9.62695 l
108.713 8.64258 l
114.385 8.64258 l
114.385 9.62695 l
h
119.227 6.51758 m
118.930 4.87695 l
118.930 3.47070 l
120.133 3.47070 l
120.133 4.87695 l
119.867 6.51758 l
119.227 6.51758 l
h
121.164 6.51758 m
120.883 4.87695 l
120.883 3.47070 l
122.086 3.47070 l
122.086 4.87695 l
121.805 6.51758 l
121.164 6.51758 l
h
123.486 6.51758 m
123.189 4.87695 l
123.189 3.47070 l
124.393 3.47070 l
124.393 4.87695 l
124.127 6.51758 l
123.486 6.51758 l
h
125.424 6.51758 m
125.143 4.87695 l
125.143 3.47070 l
126.346 3.47070 l
126.346 4.87695 l
126.064 6.51758 l
125.424 6.51758 l
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
1.00000 w
0 j
2 j
0.00000 0.00000 0.00000 RG
newpath
116.000 92.0000 m
116.000 74.6675 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 1.00000 1.00000 RG
newpath
108.000 94.0000 m
108.000 106.000 l
108.000 107.105 108.895 108.000 110.000 108.000  c
122.000 108.000 l
123.105 108.000 124.000 107.105 124.000 106.000  c
124.000 94.0000 l
124.000 92.8954 123.105 92.0000 122.000 92.0000  c
110.000 92.0000 l
108.895 92.0000 108.000 92.8954 108.000 94.0000  c
h
f
1.50000 w
.525490 .525490 .525490 RG
newpath
108.000 94.0000 m
108.000 106.000 l
108.000 107.105 108.895 108.000 110.000 108.000  c
122.000 108.000 l
123.105 108.000 124.000 107.105 124.000 106.000  c
124.000 94.0000 l
124.000 92.8954 123.105 92.0000 122.000 92.0000  c
110.000 92.0000 l
108.895 92.0000 108.000 92.8954 108.000 94.0000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [108.0 92.0 108.0 108.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
110.500 96.5000 m
110.500 105.500 l
110.500 106.605 111.395 107.500 112.500 107.500  c
121.500 107.500 l
122.605 107.500 123.500 106.605 123.500 105.500  c
123.500 96.5000 l
123.500 95.3954 122.605 94.5000 121.500 94.5000  c
112.500 94.5000 l
111.395 94.5000 110.500 95.3954 110.500 96.5000  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 128.000 80.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
4.82812 12.0645 m
4.82812 11.2832 l
4.43229 11.8978 3.85417 12.2051 3.09375 12.2051  c
2.59375 12.2051 2.13542 12.0671 1.71875 11.7910  c
1.30208 11.5150 .979167 11.1322 .750000 10.6426  c
.520833 10.1530 .406250 9.59049 .406250 8.95508  c
.406250 8.34049 .510417 7.77799 .718750 7.26758  c
.927083 6.75716 1.23958 6.36914 1.65625 6.10352  c
2.07292 5.83789 2.53646 5.70508 3.04688 5.70508  c
3.42188 5.70508 3.75521 5.78320 4.04688 5.93945  c
4.33854 6.09570 4.57812 6.29883 4.76562 6.54883  c
4.76562 3.47070 l
5.81250 3.47070 l
5.81250 12.0645 l
4.82812 12.0645 l
h
1.50000 8.95508 m
1.50000 9.75716 1.66667 10.3535 2.00000 10.7441  c
2.33333 11.1348 2.72917 11.3301 3.18750 11.3301  c
3.64583 11.3301 4.03646 11.1426 4.35938 10.7676  c
4.68229 10.3926 4.84375 9.81966 4.84375 9.04883  c
4.84375 8.19466 4.67969 7.56966 4.35156 7.17383  c
4.02344 6.77799 3.61979 6.58008 3.14062 6.58008  c
2.67188 6.58008 2.28125 6.77018 1.96875 7.15039  c
1.65625 7.53060 1.50000 8.13216 1.50000 8.95508  c
h
11.7207 10.0645 m
12.8145 10.1895 l
12.6478 10.8249 12.3301 11.3197 11.8613 11.6738  c
11.3926 12.0280 10.7988 12.2051 10.0801 12.2051  c
9.17383 12.2051 8.45247 11.9238 7.91602 11.3613  c
7.37956 10.7988 7.11133 10.0124 7.11133 9.00195  c
7.11133 7.96029 7.38216 7.15039 7.92383 6.57227  c
8.46549 5.99414 9.16341 5.70508 10.0176 5.70508  c
10.8509 5.70508 11.5306 5.98633 12.0566 6.54883  c
12.5827 7.11133 12.8457 7.90820 12.8457 8.93945  c
12.8457 9.00195 12.8457 9.09570 12.8457 9.22070  c
8.20508 9.22070 l
8.24674 9.90820 8.43945 10.4316 8.78320 10.7910  c
9.12695 11.1504 9.55924 11.3301 10.0801 11.3301  c
10.4655 11.3301 10.7962 11.2285 11.0723 11.0254  c
11.3483 10.8223 11.5645 10.5020 11.7207 10.0645  c
h
8.26758 8.36133 m
11.7363 8.36133 l
11.6947 7.83008 11.5645 7.43424 11.3457 7.17383  c
11.0020 6.76758 10.5645 6.56445 10.0332 6.56445  c
9.54362 6.56445 9.13477 6.72591 8.80664 7.04883  c
8.47852 7.37174 8.29883 7.80924 8.26758 8.36133  c
h
16.4414 11.1270 m
16.5977 12.0488 l
16.2956 12.1113 16.0299 12.1426 15.8008 12.1426  c
15.4154 12.1426 15.1185 12.0827 14.9102 11.9629  c
14.7018 11.8431 14.5534 11.6842 14.4648 11.4863  c
14.3763 11.2884 14.3320 10.8717 14.3320 10.2363  c
14.3320 6.65820 l
13.5664 6.65820 l
13.5664 5.84570 l
14.3320 5.84570 l
14.3320 4.29883 l
15.3789 3.67383 l
15.3789 5.84570 l
16.4414 5.84570 l
16.4414 6.65820 l
15.3789 6.65820 l
15.3789 10.2988 l
15.3789 10.6009 15.3971 10.7936 15.4336 10.8770  c
15.4701 10.9603 15.5299 11.0280 15.6133 11.0801  c
15.6966 11.1322 15.8164 11.1582 15.9727 11.1582  c
16.0977 11.1582 16.2539 11.1478 16.4414 11.1270  c
h
21.5410 11.2988 m
21.1452 11.6322 20.7676 11.8665 20.4082 12.0020  c
20.0488 12.1374 19.6608 12.2051 19.2441 12.2051  c
18.5566 12.2051 18.0306 12.0384 17.6660 11.7051  c
17.3014 11.3717 17.1191 10.9447 17.1191 10.4238  c
17.1191 10.1217 17.1868 9.84310 17.3223 9.58789  c
17.4577 9.33268 17.6400 9.12956 17.8691 8.97852  c
18.0983 8.82747 18.3535 8.71549 18.6348 8.64258  c
18.8327 8.58008 19.1452 8.52279 19.5723 8.47070  c
20.4160 8.37695 21.0410 8.25716 21.4473 8.11133  c
21.4473 7.96549 21.4473 7.87695 21.4473 7.84570  c
21.4473 7.40820 21.3483 7.10091 21.1504 6.92383  c
20.8796 6.69466 20.4785 6.58008 19.9473 6.58008  c
19.4577 6.58008 19.0931 6.66602 18.8535 6.83789  c
18.6139 7.00977 18.4368 7.31445 18.3223 7.75195  c
17.2910 7.61133 l
17.3848 7.17383 17.5410 6.81966 17.7598 6.54883  c
17.9785 6.27799 18.2910 6.06966 18.6973 5.92383  c
19.1035 5.77799 19.5723 5.70508 20.1035 5.70508  c
20.6348 5.70508 21.0671 5.76758 21.4004 5.89258  c
21.7337 6.01758 21.9785 6.17383 22.1348 6.36133  c
22.2910 6.54883 22.4004 6.78841 22.4629 7.08008  c
22.4941 7.25716 22.5098 7.58008 22.5098 8.04883  c
22.5098 9.45508 l
22.5098 10.4342 22.5332 11.0540 22.5801 11.3145  c
22.6270 11.5749 22.7181 11.8249 22.8535 12.0645  c
21.7441 12.0645 l
21.6400 11.8457 21.5723 11.5905 21.5410 11.2988  c
h
21.4473 8.93945 m
21.0618 9.09570 20.4889 9.23112 19.7285 9.34570  c
19.2910 9.40820 18.9837 9.47852 18.8066 9.55664  c
18.6296 9.63477 18.4915 9.74674 18.3926 9.89258  c
18.2936 10.0384 18.2441 10.2051 18.2441 10.3926  c
18.2441 10.6738 18.3509 10.9082 18.5645 11.0957  c
18.7780 11.2832 19.0879 11.3770 19.4941 11.3770  c
19.9004 11.3770 20.2624 11.2884 20.5801 11.1113  c
20.8978 10.9342 21.1296 10.6895 21.2754 10.3770  c
21.3900 10.1374 21.4473 9.78841 21.4473 9.33008  c
21.4473 8.93945 l
h
24.1523 4.68945 m
24.1523 3.47070 l
25.2148 3.47070 l
25.2148 4.68945 l
24.1523 4.68945 l
h
24.1523 12.0645 m
24.1523 5.84570 l
25.2148 5.84570 l
25.2148 12.0645 l
24.1523 12.0645 l
h
26.7871 12.0645 m
26.7871 3.47070 l
27.8496 3.47070 l
27.8496 12.0645 l
26.7871 12.0645 l
h
29.0625 10.2051 m
30.0938 10.0488 l
30.1562 10.4655 30.3203 10.7832 30.5859 11.0020  c
30.8516 11.2207 31.2292 11.3301 31.7188 11.3301  c
32.1979 11.3301 32.5547 11.2337 32.7891 11.0410  c
33.0234 10.8483 33.1406 10.6165 33.1406 10.3457  c
33.1406 10.1061 33.0365 9.91862 32.8281 9.78320  c
32.6823 9.68945 32.3229 9.56966 31.7500 9.42383  c
30.9792 9.22591 30.4453 9.05664 30.1484 8.91602  c
29.8516 8.77539 29.6250 8.58008 29.4688 8.33008  c
29.3125 8.08008 29.2344 7.79883 29.2344 7.48633  c
29.2344 7.21549 29.2969 6.96029 29.4219 6.72070  c
29.5469 6.48112 29.7188 6.28320 29.9375 6.12695  c
30.1042 6.01237 30.3281 5.91341 30.6094 5.83008  c
30.8906 5.74674 31.1979 5.70508 31.5312 5.70508  c
32.0104 5.70508 32.4349 5.77539 32.8047 5.91602  c
33.1745 6.05664 33.4479 6.24674 33.6250 6.48633  c
33.8021 6.72591 33.9219 7.04362 33.9844 7.43945  c
32.9531 7.58008 l
32.9115 7.26758 32.7786 7.02018 32.5547 6.83789  c
32.3307 6.65560 32.0104 6.56445 31.5938 6.56445  c
31.1146 6.56445 30.7708 6.64518 30.5625 6.80664  c
30.3542 6.96810 30.2500 7.15820 30.2500 7.37695  c
30.2500 7.51237 30.2917 7.63216 30.3750 7.73633  c
30.4688 7.85091 30.6042 7.94466 30.7812 8.01758  c
30.8854 8.05924 31.1979 8.14779 31.7188 8.28320  c
32.4688 8.49154 32.9896 8.65820 33.2812 8.78320  c
33.5729 8.90820 33.8021 9.09049 33.9688 9.33008  c
34.1354 9.56966 34.2188 9.87174 34.2188 10.2363  c
34.2188 10.5905 34.1172 10.9212 33.9141 11.2285  c
33.7109 11.5358 33.4167 11.7754 33.0312 11.9473  c
32.6458 12.1191 32.2083 12.2051 31.7188 12.2051  c
30.9062 12.2051 30.2891 12.0358 29.8672 11.6973  c
29.4453 11.3587 29.1771 10.8613 29.0625 10.2051  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 157.000 l
213.000 157.000 l
213.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 157.000 l
213.000 157.000 l
213.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
