%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 153 273 442 518
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Tuesday, 31 August 2010 11:35:50 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
289 244 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
289.000 0.00000 l
289.000 244.000 l
0.00000 244.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 313 268 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 315.000 270.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 317.000 272.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
1.00000 1.00000 1.00000 RG
newpath
156.000 111.000 m
156.000 189.000 l
156.000 190.657 157.343 192.000 159.000 192.000  c
309.000 192.000 l
310.657 192.000 312.000 190.657 312.000 189.000  c
312.000 111.000 l
312.000 109.343 310.657 108.000 309.000 108.000  c
159.000 108.000 l
157.343 108.000 156.000 109.343 156.000 111.000  c
h
f
1.50000 w
0 J
2 j
.576471 .576471 .643137 RG
newpath
156.000 111.000 m
156.000 189.000 l
156.000 190.657 157.343 192.000 159.000 192.000  c
309.000 192.000 l
310.657 192.000 312.000 190.657 312.000 189.000  c
312.000 111.000 l
312.000 109.343 310.657 108.000 309.000 108.000  c
159.000 108.000 l
157.343 108.000 156.000 109.343 156.000 111.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [156.0 108.0 156.0 192.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.8235294 0.8235294 0.92156863]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
158.500 113.500 m
158.500 188.500 l
158.500 190.157 159.843 191.500 161.500 191.500  c
308.500 191.500 l
310.157 191.500 311.500 190.157 311.500 188.500  c
311.500 113.500 l
311.500 111.843 310.157 110.500 308.500 110.500  c
161.500 110.500 l
159.843 110.500 158.500 111.843 158.500 113.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 199.649 116.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.921875 12.0645 m
.921875 3.47070 l
3.89062 3.47070 l
4.55729 3.47070 5.06771 3.51237 5.42188 3.59570  c
5.91146 3.71029 6.32812 3.91341 6.67188 4.20508  c
7.13021 4.59049 7.47135 5.08268 7.69531 5.68164  c
7.91927 6.28060 8.03125 6.96029 8.03125 7.72070  c
8.03125 8.37695 7.95573 8.95508 7.80469 9.45508  c
7.65365 9.95508 7.45833 10.3717 7.21875 10.7051  c
6.97917 11.0384 6.71615 11.2988 6.42969 11.4863  c
6.14323 11.6738 5.80208 11.8171 5.40625 11.9160  c
5.01042 12.0150 4.55208 12.0645 4.03125 12.0645  c
.921875 12.0645 l
h
2.06250 11.0488 m
3.89062 11.0488 l
4.46354 11.0488 4.91146 10.9967 5.23438 10.8926  c
5.55729 10.7884 5.81250 10.6374 6.00000 10.4395  c
6.27083 10.1790 6.48177 9.81966 6.63281 9.36133  c
6.78385 8.90299 6.85938 8.35091 6.85938 7.70508  c
6.85938 6.80924 6.71094 6.11914 6.41406 5.63477  c
6.11719 5.15039 5.76042 4.82487 5.34375 4.65820  c
5.03125 4.54362 4.54167 4.48633 3.87500 4.48633  c
2.06250 4.48633 l
2.06250 11.0488 l
h
9.07227 8.95508 m
9.07227 7.79883 9.38997 6.94466 10.0254 6.39258  c
10.5566 5.93424 11.2077 5.70508 11.9785 5.70508  c
12.8327 5.70508 13.5332 5.98372 14.0801 6.54102  c
14.6270 7.09831 14.9004 7.87174 14.9004 8.86133  c
14.9004 9.66341 14.7806 10.2936 14.5410 10.7520  c
14.3014 11.2103 13.9499 11.5671 13.4863 11.8223  c
13.0228 12.0775 12.5202 12.2051 11.9785 12.2051  c
11.1139 12.2051 10.4134 11.9264 9.87695 11.3691  c
9.34049 10.8118 9.07227 10.0072 9.07227 8.95508  c
h
10.1504 8.95508 m
10.1504 9.74674 10.3249 10.3405 10.6738 10.7363  c
11.0228 11.1322 11.4577 11.3301 11.9785 11.3301  c
12.5098 11.3301 12.9473 11.1322 13.2910 10.7363  c
13.6348 10.3405 13.8066 9.73633 13.8066 8.92383  c
13.8066 8.15299 13.6322 7.56966 13.2832 7.17383  c
12.9342 6.77799 12.4993 6.58008 11.9785 6.58008  c
11.4577 6.58008 11.0228 6.77539 10.6738 7.16602  c
10.3249 7.55664 10.1504 8.15299 10.1504 8.95508  c
h
20.1992 9.78320 m
21.2305 9.92383 l
21.1159 10.6322 20.8242 11.1895 20.3555 11.5957  c
19.8867 12.0020 19.3138 12.2051 18.6367 12.2051  c
17.7826 12.2051 17.0977 11.9264 16.5820 11.3691  c
16.0664 10.8118 15.8086 10.0124 15.8086 8.97070  c
15.8086 8.30404 15.9206 7.71810 16.1445 7.21289  c
16.3685 6.70768 16.7070 6.33008 17.1602 6.08008  c
17.6133 5.83008 18.1107 5.70508 18.6523 5.70508  c
19.3190 5.70508 19.8685 5.87435 20.3008 6.21289  c
20.7331 6.55143 21.0117 7.03841 21.1367 7.67383  c
20.1055 7.83008 l
20.0117 7.41341 19.8398 7.09831 19.5898 6.88477  c
19.3398 6.67122 19.0378 6.56445 18.6836 6.56445  c
18.1523 6.56445 17.7201 6.75456 17.3867 7.13477  c
17.0534 7.51497 16.8867 8.11654 16.8867 8.93945  c
16.8867 9.78320 17.0482 10.3926 17.3711 10.7676  c
17.6940 11.1426 18.1107 11.3301 18.6211 11.3301  c
19.0378 11.3301 19.3841 11.2051 19.6602 10.9551  c
19.9362 10.7051 20.1159 10.3145 20.1992 9.78320  c
h
26.2148 12.0645 m
26.2148 11.1426 l
25.7253 11.8509 25.0638 12.2051 24.2305 12.2051  c
23.8659 12.2051 23.5247 12.1348 23.2070 11.9941  c
22.8893 11.8535 22.6523 11.6764 22.4961 11.4629  c
22.3398 11.2493 22.2305 10.9863 22.1680 10.6738  c
22.1263 10.4759 22.1055 10.1478 22.1055 9.68945  c
22.1055 5.84570 l
23.1680 5.84570 l
23.1680 9.29883 l
23.1680 9.84049 23.1888 10.2103 23.2305 10.4082  c
23.2930 10.6790 23.4310 10.8952 23.6445 11.0566  c
23.8581 11.2181 24.1263 11.2988 24.4492 11.2988  c
24.7617 11.2988 25.0560 11.2181 25.3320 11.0566  c
25.6081 10.8952 25.8060 10.6738 25.9258 10.3926  c
26.0456 10.1113 26.1055 9.70508 26.1055 9.17383  c
26.1055 5.84570 l
27.1523 5.84570 l
27.1523 12.0645 l
26.2148 12.0645 l
h
28.8105 12.0645 m
28.8105 5.84570 l
29.7480 5.84570 l
29.7480 6.72070 l
29.9460 6.40820 30.2064 6.16081 30.5293 5.97852  c
30.8522 5.79622 31.2220 5.70508 31.6387 5.70508  c
32.0970 5.70508 32.4746 5.79883 32.7715 5.98633  c
33.0684 6.17383 33.2741 6.43945 33.3887 6.78320  c
33.8887 6.06445 34.5293 5.70508 35.3105 5.70508  c
35.9355 5.70508 36.4121 5.87435 36.7402 6.21289  c
37.0684 6.55143 37.2324 7.08008 37.2324 7.79883  c
37.2324 12.0645 l
36.1855 12.0645 l
36.1855 8.14258 l
36.1855 7.72591 36.1517 7.42383 36.0840 7.23633  c
36.0163 7.04883 35.8939 6.89779 35.7168 6.78320  c
35.5397 6.66862 35.3262 6.61133 35.0762 6.61133  c
34.6387 6.61133 34.2767 6.75716 33.9902 7.04883  c
33.7038 7.34049 33.5605 7.80924 33.5605 8.45508  c
33.5605 12.0645 l
32.4980 12.0645 l
32.4980 8.01758 l
32.4980 7.54883 32.4121 7.19727 32.2402 6.96289  c
32.0684 6.72852 31.7897 6.61133 31.4043 6.61133  c
31.1022 6.61133 30.8262 6.68945 30.5762 6.84570  c
30.3262 7.00195 30.1439 7.23112 30.0293 7.53320  c
29.9147 7.83529 29.8574 8.26758 29.8574 8.83008  c
29.8574 12.0645 l
28.8105 12.0645 l
h
43.0566 10.0645 m
44.1504 10.1895 l
43.9837 10.8249 43.6660 11.3197 43.1973 11.6738  c
42.7285 12.0280 42.1348 12.2051 41.4160 12.2051  c
40.5098 12.2051 39.7884 11.9238 39.2520 11.3613  c
38.7155 10.7988 38.4473 10.0124 38.4473 9.00195  c
38.4473 7.96029 38.7181 7.15039 39.2598 6.57227  c
39.8014 5.99414 40.4993 5.70508 41.3535 5.70508  c
42.1868 5.70508 42.8665 5.98633 43.3926 6.54883  c
43.9186 7.11133 44.1816 7.90820 44.1816 8.93945  c
44.1816 9.00195 44.1816 9.09570 44.1816 9.22070  c
39.5410 9.22070 l
39.5827 9.90820 39.7754 10.4316 40.1191 10.7910  c
40.4629 11.1504 40.8952 11.3301 41.4160 11.3301  c
41.8014 11.3301 42.1322 11.2285 42.4082 11.0254  c
42.6842 10.8223 42.9004 10.5020 43.0566 10.0645  c
h
39.6035 8.36133 m
43.0723 8.36133 l
43.0306 7.83008 42.9004 7.43424 42.6816 7.17383  c
42.3379 6.76758 41.9004 6.56445 41.3691 6.56445  c
40.8796 6.56445 40.4707 6.72591 40.1426 7.04883  c
39.8145 7.37174 39.6348 7.80924 39.6035 8.36133  c
h
45.4805 12.0645 m
45.4805 5.84570 l
46.4180 5.84570 l
46.4180 6.72070 l
46.8763 6.04362 47.5378 5.70508 48.4023 5.70508  c
48.7773 5.70508 49.1237 5.77279 49.4414 5.90820  c
49.7591 6.04362 49.9961 6.22070 50.1523 6.43945  c
50.3086 6.65820 50.4180 6.91341 50.4805 7.20508  c
50.5117 7.40299 50.5273 7.74674 50.5273 8.23633  c
50.5273 12.0645 l
49.4805 12.0645 l
49.4805 8.28320 l
49.4805 7.84570 49.4388 7.52279 49.3555 7.31445  c
49.2721 7.10612 49.1263 6.93685 48.9180 6.80664  c
48.7096 6.67643 48.4648 6.61133 48.1836 6.61133  c
47.7357 6.61133 47.3477 6.75456 47.0195 7.04102  c
46.6914 7.32747 46.5273 7.86654 46.5273 8.65820  c
46.5273 12.0645 l
45.4805 12.0645 l
h
54.4512 11.1270 m
54.6074 12.0488 l
54.3053 12.1113 54.0397 12.1426 53.8105 12.1426  c
53.4251 12.1426 53.1283 12.0827 52.9199 11.9629  c
52.7116 11.8431 52.5632 11.6842 52.4746 11.4863  c
52.3861 11.2884 52.3418 10.8717 52.3418 10.2363  c
52.3418 6.65820 l
51.5762 6.65820 l
51.5762 5.84570 l
52.3418 5.84570 l
52.3418 4.29883 l
53.3887 3.67383 l
53.3887 5.84570 l
54.4512 5.84570 l
54.4512 6.65820 l
53.3887 6.65820 l
53.3887 10.2988 l
53.3887 10.6009 53.4069 10.7936 53.4434 10.8770  c
53.4798 10.9603 53.5397 11.0280 53.6230 11.0801  c
53.7064 11.1322 53.8262 11.1582 53.9824 11.1582  c
54.1074 11.1582 54.2637 11.1478 54.4512 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
newpath
288.799 116.000 m
300.000 116.000 l
300.000 130.701 l
288.799 130.701 l
288.799 116.000 l
h
f
1.00000 w
0 j
newpath
288.799 116.000 m
300.000 116.000 l
300.000 130.701 l
288.799 130.701 l
288.799 116.000 l
h
S
newpath
285.299 119.351 m
292.299 119.351 l
292.299 122.351 l
285.299 122.351 l
285.299 119.351 l
h
f
.752941 .752941 .752941 RG
newpath
285.299 119.351 m
292.299 119.351 l
292.299 122.351 l
285.299 122.351 l
285.299 119.351 l
h
S
0.00000 0.00000 0.00000 RG
newpath
285.299 124.351 m
292.299 124.351 l
292.299 127.351 l
285.299 127.351 l
285.299 124.351 l
h
f
.752941 .752941 .752941 RG
newpath
285.299 124.351 m
292.299 124.351 l
292.299 127.351 l
285.299 127.351 l
285.299 124.351 l
h
S
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 162.000 60.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.25586 12.0645 m
4.25586 3.47070 l
7.22461 3.47070 l
7.89128 3.47070 8.40169 3.51237 8.75586 3.59570  c
9.24544 3.71029 9.66211 3.91341 10.0059 4.20508  c
10.4642 4.59049 10.8053 5.08268 11.0293 5.68164  c
11.2533 6.28060 11.3652 6.96029 11.3652 7.72070  c
11.3652 8.37695 11.2897 8.95508 11.1387 9.45508  c
10.9876 9.95508 10.7923 10.3717 10.5527 10.7051  c
10.3132 11.0384 10.0501 11.2988 9.76367 11.4863  c
9.47721 11.6738 9.13607 11.8171 8.74023 11.9160  c
8.34440 12.0150 7.88607 12.0645 7.36523 12.0645  c
4.25586 12.0645 l
h
5.39648 11.0488 m
7.22461 11.0488 l
7.79753 11.0488 8.24544 10.9967 8.56836 10.8926  c
8.89128 10.7884 9.14648 10.6374 9.33398 10.4395  c
9.60482 10.1790 9.81576 9.81966 9.96680 9.36133  c
10.1178 8.90299 10.1934 8.35091 10.1934 7.70508  c
10.1934 6.80924 10.0449 6.11914 9.74805 5.63477  c
9.45117 5.15039 9.09440 4.82487 8.67773 4.65820  c
8.36523 4.54362 7.87565 4.48633 7.20898 4.48633  c
5.39648 4.48633 l
5.39648 11.0488 l
h
12.4062 8.95508 m
12.4062 7.79883 12.7240 6.94466 13.3594 6.39258  c
13.8906 5.93424 14.5417 5.70508 15.3125 5.70508  c
16.1667 5.70508 16.8672 5.98372 17.4141 6.54102  c
17.9609 7.09831 18.2344 7.87174 18.2344 8.86133  c
18.2344 9.66341 18.1146 10.2936 17.8750 10.7520  c
17.6354 11.2103 17.2839 11.5671 16.8203 11.8223  c
16.3568 12.0775 15.8542 12.2051 15.3125 12.2051  c
14.4479 12.2051 13.7474 11.9264 13.2109 11.3691  c
12.6745 10.8118 12.4062 10.0072 12.4062 8.95508  c
h
13.4844 8.95508 m
13.4844 9.74674 13.6589 10.3405 14.0078 10.7363  c
14.3568 11.1322 14.7917 11.3301 15.3125 11.3301  c
15.8438 11.3301 16.2812 11.1322 16.6250 10.7363  c
16.9688 10.3405 17.1406 9.73633 17.1406 8.92383  c
17.1406 8.15299 16.9661 7.56966 16.6172 7.17383  c
16.2682 6.77799 15.8333 6.58008 15.3125 6.58008  c
14.7917 6.58008 14.3568 6.77539 14.0078 7.16602  c
13.6589 7.55664 13.4844 8.15299 13.4844 8.95508  c
h
23.5332 9.78320 m
24.5645 9.92383 l
24.4499 10.6322 24.1582 11.1895 23.6895 11.5957  c
23.2207 12.0020 22.6478 12.2051 21.9707 12.2051  c
21.1165 12.2051 20.4316 11.9264 19.9160 11.3691  c
19.4004 10.8118 19.1426 10.0124 19.1426 8.97070  c
19.1426 8.30404 19.2546 7.71810 19.4785 7.21289  c
19.7025 6.70768 20.0410 6.33008 20.4941 6.08008  c
20.9473 5.83008 21.4447 5.70508 21.9863 5.70508  c
22.6530 5.70508 23.2025 5.87435 23.6348 6.21289  c
24.0671 6.55143 24.3457 7.03841 24.4707 7.67383  c
23.4395 7.83008 l
23.3457 7.41341 23.1738 7.09831 22.9238 6.88477  c
22.6738 6.67122 22.3717 6.56445 22.0176 6.56445  c
21.4863 6.56445 21.0540 6.75456 20.7207 7.13477  c
20.3874 7.51497 20.2207 8.11654 20.2207 8.93945  c
20.2207 9.78320 20.3822 10.3926 20.7051 10.7676  c
21.0280 11.1426 21.4447 11.3301 21.9551 11.3301  c
22.3717 11.3301 22.7181 11.2051 22.9941 10.9551  c
23.2702 10.7051 23.4499 10.3145 23.5332 9.78320  c
h
29.5488 12.0645 m
29.5488 11.1426 l
29.0592 11.8509 28.3978 12.2051 27.5645 12.2051  c
27.1999 12.2051 26.8587 12.1348 26.5410 11.9941  c
26.2233 11.8535 25.9863 11.6764 25.8301 11.4629  c
25.6738 11.2493 25.5645 10.9863 25.5020 10.6738  c
25.4603 10.4759 25.4395 10.1478 25.4395 9.68945  c
25.4395 5.84570 l
26.5020 5.84570 l
26.5020 9.29883 l
26.5020 9.84049 26.5228 10.2103 26.5645 10.4082  c
26.6270 10.6790 26.7650 10.8952 26.9785 11.0566  c
27.1921 11.2181 27.4603 11.2988 27.7832 11.2988  c
28.0957 11.2988 28.3900 11.2181 28.6660 11.0566  c
28.9421 10.8952 29.1400 10.6738 29.2598 10.3926  c
29.3796 10.1113 29.4395 9.70508 29.4395 9.17383  c
29.4395 5.84570 l
30.4863 5.84570 l
30.4863 12.0645 l
29.5488 12.0645 l
h
32.1445 12.0645 m
32.1445 5.84570 l
33.0820 5.84570 l
33.0820 6.72070 l
33.2799 6.40820 33.5404 6.16081 33.8633 5.97852  c
34.1862 5.79622 34.5560 5.70508 34.9727 5.70508  c
35.4310 5.70508 35.8086 5.79883 36.1055 5.98633  c
36.4023 6.17383 36.6081 6.43945 36.7227 6.78320  c
37.2227 6.06445 37.8633 5.70508 38.6445 5.70508  c
39.2695 5.70508 39.7461 5.87435 40.0742 6.21289  c
40.4023 6.55143 40.5664 7.08008 40.5664 7.79883  c
40.5664 12.0645 l
39.5195 12.0645 l
39.5195 8.14258 l
39.5195 7.72591 39.4857 7.42383 39.4180 7.23633  c
39.3503 7.04883 39.2279 6.89779 39.0508 6.78320  c
38.8737 6.66862 38.6602 6.61133 38.4102 6.61133  c
37.9727 6.61133 37.6107 6.75716 37.3242 7.04883  c
37.0378 7.34049 36.8945 7.80924 36.8945 8.45508  c
36.8945 12.0645 l
35.8320 12.0645 l
35.8320 8.01758 l
35.8320 7.54883 35.7461 7.19727 35.5742 6.96289  c
35.4023 6.72852 35.1237 6.61133 34.7383 6.61133  c
34.4362 6.61133 34.1602 6.68945 33.9102 6.84570  c
33.6602 7.00195 33.4779 7.23112 33.3633 7.53320  c
33.2487 7.83529 33.1914 8.26758 33.1914 8.83008  c
33.1914 12.0645 l
32.1445 12.0645 l
h
46.3906 10.0645 m
47.4844 10.1895 l
47.3177 10.8249 47.0000 11.3197 46.5312 11.6738  c
46.0625 12.0280 45.4688 12.2051 44.7500 12.2051  c
43.8438 12.2051 43.1224 11.9238 42.5859 11.3613  c
42.0495 10.7988 41.7812 10.0124 41.7812 9.00195  c
41.7812 7.96029 42.0521 7.15039 42.5938 6.57227  c
43.1354 5.99414 43.8333 5.70508 44.6875 5.70508  c
45.5208 5.70508 46.2005 5.98633 46.7266 6.54883  c
47.2526 7.11133 47.5156 7.90820 47.5156 8.93945  c
47.5156 9.00195 47.5156 9.09570 47.5156 9.22070  c
42.8750 9.22070 l
42.9167 9.90820 43.1094 10.4316 43.4531 10.7910  c
43.7969 11.1504 44.2292 11.3301 44.7500 11.3301  c
45.1354 11.3301 45.4661 11.2285 45.7422 11.0254  c
46.0182 10.8223 46.2344 10.5020 46.3906 10.0645  c
h
42.9375 8.36133 m
46.4062 8.36133 l
46.3646 7.83008 46.2344 7.43424 46.0156 7.17383  c
45.6719 6.76758 45.2344 6.56445 44.7031 6.56445  c
44.2135 6.56445 43.8047 6.72591 43.4766 7.04883  c
43.1484 7.37174 42.9688 7.80924 42.9375 8.36133  c
h
48.8145 12.0645 m
48.8145 5.84570 l
49.7520 5.84570 l
49.7520 6.72070 l
50.2103 6.04362 50.8717 5.70508 51.7363 5.70508  c
52.1113 5.70508 52.4577 5.77279 52.7754 5.90820  c
53.0931 6.04362 53.3301 6.22070 53.4863 6.43945  c
53.6426 6.65820 53.7520 6.91341 53.8145 7.20508  c
53.8457 7.40299 53.8613 7.74674 53.8613 8.23633  c
53.8613 12.0645 l
52.8145 12.0645 l
52.8145 8.28320 l
52.8145 7.84570 52.7728 7.52279 52.6895 7.31445  c
52.6061 7.10612 52.4603 6.93685 52.2520 6.80664  c
52.0436 6.67643 51.7988 6.61133 51.5176 6.61133  c
51.0697 6.61133 50.6816 6.75456 50.3535 7.04102  c
50.0254 7.32747 49.8613 7.86654 49.8613 8.65820  c
49.8613 12.0645 l
48.8145 12.0645 l
h
57.7852 11.1270 m
57.9414 12.0488 l
57.6393 12.1113 57.3737 12.1426 57.1445 12.1426  c
56.7591 12.1426 56.4622 12.0827 56.2539 11.9629  c
56.0456 11.8431 55.8971 11.6842 55.8086 11.4863  c
55.7201 11.2884 55.6758 10.8717 55.6758 10.2363  c
55.6758 6.65820 l
54.9102 6.65820 l
54.9102 5.84570 l
55.6758 5.84570 l
55.6758 4.29883 l
56.7227 3.67383 l
56.7227 5.84570 l
57.7852 5.84570 l
57.7852 6.65820 l
56.7227 6.65820 l
56.7227 10.2988 l
56.7227 10.6009 56.7409 10.7936 56.7773 10.8770  c
56.8138 10.9603 56.8737 11.0280 56.9570 11.0801  c
57.0404 11.1322 57.1602 11.1582 57.3164 11.1582  c
57.4414 11.1582 57.5977 11.1478 57.7852 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
204.000 44.0000 m
204.000 50.6274 198.627 56.0000 192.000 56.0000  c
185.373 56.0000 180.000 50.6274 180.000 44.0000  c
180.000 37.3726 185.373 32.0000 192.000 32.0000  c
198.627 32.0000 204.000 37.3726 204.000 44.0000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
204.000 44.0000 m
204.000 50.6274 198.627 56.0000 192.000 56.0000  c
185.373 56.0000 180.000 50.6274 180.000 44.0000  c
180.000 37.3726 185.373 32.0000 192.000 32.0000  c
198.627 32.0000 204.000 37.3726 204.000 44.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
[ 1.00000 0.00000 0.00000 1.00000 42.0000 156.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.25586 12.0645 m
4.25586 3.47070 l
7.22461 3.47070 l
7.89128 3.47070 8.40169 3.51237 8.75586 3.59570  c
9.24544 3.71029 9.66211 3.91341 10.0059 4.20508  c
10.4642 4.59049 10.8053 5.08268 11.0293 5.68164  c
11.2533 6.28060 11.3652 6.96029 11.3652 7.72070  c
11.3652 8.37695 11.2897 8.95508 11.1387 9.45508  c
10.9876 9.95508 10.7923 10.3717 10.5527 10.7051  c
10.3132 11.0384 10.0501 11.2988 9.76367 11.4863  c
9.47721 11.6738 9.13607 11.8171 8.74023 11.9160  c
8.34440 12.0150 7.88607 12.0645 7.36523 12.0645  c
4.25586 12.0645 l
h
5.39648 11.0488 m
7.22461 11.0488 l
7.79753 11.0488 8.24544 10.9967 8.56836 10.8926  c
8.89128 10.7884 9.14648 10.6374 9.33398 10.4395  c
9.60482 10.1790 9.81576 9.81966 9.96680 9.36133  c
10.1178 8.90299 10.1934 8.35091 10.1934 7.70508  c
10.1934 6.80924 10.0449 6.11914 9.74805 5.63477  c
9.45117 5.15039 9.09440 4.82487 8.67773 4.65820  c
8.36523 4.54362 7.87565 4.48633 7.20898 4.48633  c
5.39648 4.48633 l
5.39648 11.0488 l
h
12.4062 8.95508 m
12.4062 7.79883 12.7240 6.94466 13.3594 6.39258  c
13.8906 5.93424 14.5417 5.70508 15.3125 5.70508  c
16.1667 5.70508 16.8672 5.98372 17.4141 6.54102  c
17.9609 7.09831 18.2344 7.87174 18.2344 8.86133  c
18.2344 9.66341 18.1146 10.2936 17.8750 10.7520  c
17.6354 11.2103 17.2839 11.5671 16.8203 11.8223  c
16.3568 12.0775 15.8542 12.2051 15.3125 12.2051  c
14.4479 12.2051 13.7474 11.9264 13.2109 11.3691  c
12.6745 10.8118 12.4062 10.0072 12.4062 8.95508  c
h
13.4844 8.95508 m
13.4844 9.74674 13.6589 10.3405 14.0078 10.7363  c
14.3568 11.1322 14.7917 11.3301 15.3125 11.3301  c
15.8438 11.3301 16.2812 11.1322 16.6250 10.7363  c
16.9688 10.3405 17.1406 9.73633 17.1406 8.92383  c
17.1406 8.15299 16.9661 7.56966 16.6172 7.17383  c
16.2682 6.77799 15.8333 6.58008 15.3125 6.58008  c
14.7917 6.58008 14.3568 6.77539 14.0078 7.16602  c
13.6589 7.55664 13.4844 8.15299 13.4844 8.95508  c
h
23.5332 9.78320 m
24.5645 9.92383 l
24.4499 10.6322 24.1582 11.1895 23.6895 11.5957  c
23.2207 12.0020 22.6478 12.2051 21.9707 12.2051  c
21.1165 12.2051 20.4316 11.9264 19.9160 11.3691  c
19.4004 10.8118 19.1426 10.0124 19.1426 8.97070  c
19.1426 8.30404 19.2546 7.71810 19.4785 7.21289  c
19.7025 6.70768 20.0410 6.33008 20.4941 6.08008  c
20.9473 5.83008 21.4447 5.70508 21.9863 5.70508  c
22.6530 5.70508 23.2025 5.87435 23.6348 6.21289  c
24.0671 6.55143 24.3457 7.03841 24.4707 7.67383  c
23.4395 7.83008 l
23.3457 7.41341 23.1738 7.09831 22.9238 6.88477  c
22.6738 6.67122 22.3717 6.56445 22.0176 6.56445  c
21.4863 6.56445 21.0540 6.75456 20.7207 7.13477  c
20.3874 7.51497 20.2207 8.11654 20.2207 8.93945  c
20.2207 9.78320 20.3822 10.3926 20.7051 10.7676  c
21.0280 11.1426 21.4447 11.3301 21.9551 11.3301  c
22.3717 11.3301 22.7181 11.2051 22.9941 10.9551  c
23.2702 10.7051 23.4499 10.3145 23.5332 9.78320  c
h
29.5488 12.0645 m
29.5488 11.1426 l
29.0592 11.8509 28.3978 12.2051 27.5645 12.2051  c
27.1999 12.2051 26.8587 12.1348 26.5410 11.9941  c
26.2233 11.8535 25.9863 11.6764 25.8301 11.4629  c
25.6738 11.2493 25.5645 10.9863 25.5020 10.6738  c
25.4603 10.4759 25.4395 10.1478 25.4395 9.68945  c
25.4395 5.84570 l
26.5020 5.84570 l
26.5020 9.29883 l
26.5020 9.84049 26.5228 10.2103 26.5645 10.4082  c
26.6270 10.6790 26.7650 10.8952 26.9785 11.0566  c
27.1921 11.2181 27.4603 11.2988 27.7832 11.2988  c
28.0957 11.2988 28.3900 11.2181 28.6660 11.0566  c
28.9421 10.8952 29.1400 10.6738 29.2598 10.3926  c
29.3796 10.1113 29.4395 9.70508 29.4395 9.17383  c
29.4395 5.84570 l
30.4863 5.84570 l
30.4863 12.0645 l
29.5488 12.0645 l
h
32.1445 12.0645 m
32.1445 5.84570 l
33.0820 5.84570 l
33.0820 6.72070 l
33.2799 6.40820 33.5404 6.16081 33.8633 5.97852  c
34.1862 5.79622 34.5560 5.70508 34.9727 5.70508  c
35.4310 5.70508 35.8086 5.79883 36.1055 5.98633  c
36.4023 6.17383 36.6081 6.43945 36.7227 6.78320  c
37.2227 6.06445 37.8633 5.70508 38.6445 5.70508  c
39.2695 5.70508 39.7461 5.87435 40.0742 6.21289  c
40.4023 6.55143 40.5664 7.08008 40.5664 7.79883  c
40.5664 12.0645 l
39.5195 12.0645 l
39.5195 8.14258 l
39.5195 7.72591 39.4857 7.42383 39.4180 7.23633  c
39.3503 7.04883 39.2279 6.89779 39.0508 6.78320  c
38.8737 6.66862 38.6602 6.61133 38.4102 6.61133  c
37.9727 6.61133 37.6107 6.75716 37.3242 7.04883  c
37.0378 7.34049 36.8945 7.80924 36.8945 8.45508  c
36.8945 12.0645 l
35.8320 12.0645 l
35.8320 8.01758 l
35.8320 7.54883 35.7461 7.19727 35.5742 6.96289  c
35.4023 6.72852 35.1237 6.61133 34.7383 6.61133  c
34.4362 6.61133 34.1602 6.68945 33.9102 6.84570  c
33.6602 7.00195 33.4779 7.23112 33.3633 7.53320  c
33.2487 7.83529 33.1914 8.26758 33.1914 8.83008  c
33.1914 12.0645 l
32.1445 12.0645 l
h
46.3906 10.0645 m
47.4844 10.1895 l
47.3177 10.8249 47.0000 11.3197 46.5312 11.6738  c
46.0625 12.0280 45.4688 12.2051 44.7500 12.2051  c
43.8438 12.2051 43.1224 11.9238 42.5859 11.3613  c
42.0495 10.7988 41.7812 10.0124 41.7812 9.00195  c
41.7812 7.96029 42.0521 7.15039 42.5938 6.57227  c
43.1354 5.99414 43.8333 5.70508 44.6875 5.70508  c
45.5208 5.70508 46.2005 5.98633 46.7266 6.54883  c
47.2526 7.11133 47.5156 7.90820 47.5156 8.93945  c
47.5156 9.00195 47.5156 9.09570 47.5156 9.22070  c
42.8750 9.22070 l
42.9167 9.90820 43.1094 10.4316 43.4531 10.7910  c
43.7969 11.1504 44.2292 11.3301 44.7500 11.3301  c
45.1354 11.3301 45.4661 11.2285 45.7422 11.0254  c
46.0182 10.8223 46.2344 10.5020 46.3906 10.0645  c
h
42.9375 8.36133 m
46.4062 8.36133 l
46.3646 7.83008 46.2344 7.43424 46.0156 7.17383  c
45.6719 6.76758 45.2344 6.56445 44.7031 6.56445  c
44.2135 6.56445 43.8047 6.72591 43.4766 7.04883  c
43.1484 7.37174 42.9688 7.80924 42.9375 8.36133  c
h
48.8145 12.0645 m
48.8145 5.84570 l
49.7520 5.84570 l
49.7520 6.72070 l
50.2103 6.04362 50.8717 5.70508 51.7363 5.70508  c
52.1113 5.70508 52.4577 5.77279 52.7754 5.90820  c
53.0931 6.04362 53.3301 6.22070 53.4863 6.43945  c
53.6426 6.65820 53.7520 6.91341 53.8145 7.20508  c
53.8457 7.40299 53.8613 7.74674 53.8613 8.23633  c
53.8613 12.0645 l
52.8145 12.0645 l
52.8145 8.28320 l
52.8145 7.84570 52.7728 7.52279 52.6895 7.31445  c
52.6061 7.10612 52.4603 6.93685 52.2520 6.80664  c
52.0436 6.67643 51.7988 6.61133 51.5176 6.61133  c
51.0697 6.61133 50.6816 6.75456 50.3535 7.04102  c
50.0254 7.32747 49.8613 7.86654 49.8613 8.65820  c
49.8613 12.0645 l
48.8145 12.0645 l
h
57.7852 11.1270 m
57.9414 12.0488 l
57.6393 12.1113 57.3737 12.1426 57.1445 12.1426  c
56.7591 12.1426 56.4622 12.0827 56.2539 11.9629  c
56.0456 11.8431 55.8971 11.6842 55.8086 11.4863  c
55.7201 11.2884 55.6758 10.8717 55.6758 10.2363  c
55.6758 6.65820 l
54.9102 6.65820 l
54.9102 5.84570 l
55.6758 5.84570 l
55.6758 4.29883 l
56.7227 3.67383 l
56.7227 5.84570 l
57.7852 5.84570 l
57.7852 6.65820 l
56.7227 6.65820 l
56.7227 10.2988 l
56.7227 10.6009 56.7409 10.7936 56.7773 10.8770  c
56.8138 10.9603 56.8737 11.0280 56.9570 11.0801  c
57.0404 11.1322 57.1602 11.1582 57.3164 11.1582  c
57.4414 11.1582 57.5977 11.1478 57.7852 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
84.0000 140.000 m
84.0000 146.627 78.6274 152.000 72.0000 152.000  c
65.3726 152.000 60.0000 146.627 60.0000 140.000  c
60.0000 133.373 65.3726 128.000 72.0000 128.000  c
78.6274 128.000 84.0000 133.373 84.0000 140.000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
84.0000 140.000 m
84.0000 146.627 78.6274 152.000 72.0000 152.000  c
65.3726 152.000 60.0000 146.627 60.0000 140.000  c
60.0000 133.373 65.3726 128.000 72.0000 128.000  c
78.6274 128.000 84.0000 133.373 84.0000 140.000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
[ 1.00000 0.00000 0.00000 1.00000 47.5000 240.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
3.88086 9.29883 m
4.94336 9.20508 l
4.99544 9.64258 5.11523 9.99674 5.30273 10.2676  c
5.49023 10.5384 5.77930 10.7598 6.16992 10.9316  c
6.56055 11.1035 7.00065 11.1895 7.49023 11.1895  c
7.91732 11.1895 8.29753 11.1243 8.63086 10.9941  c
8.96419 10.8639 9.21159 10.6868 9.37305 10.4629  c
9.53451 10.2389 9.61523 9.99674 9.61523 9.73633  c
9.61523 9.46549 9.53711 9.22852 9.38086 9.02539  c
9.22461 8.82227 8.96940 8.65299 8.61523 8.51758  c
8.37565 8.42383 7.86263 8.28320 7.07617 8.09570  c
6.28971 7.90820 5.74023 7.73112 5.42773 7.56445  c
5.01107 7.34570 4.70378 7.07747 4.50586 6.75977  c
4.30794 6.44206 4.20898 6.08529 4.20898 5.68945  c
4.20898 5.26237 4.33138 4.85872 4.57617 4.47852  c
4.82096 4.09831 5.18034 3.81185 5.65430 3.61914  c
6.12826 3.42643 6.65169 3.33008 7.22461 3.33008  c
7.86003 3.33008 8.42253 3.43164 8.91211 3.63477  c
9.40169 3.83789 9.77669 4.13997 10.0371 4.54102  c
10.2975 4.94206 10.4382 5.39258 10.4590 5.89258  c
9.36523 5.97070 l
9.30273 5.42904 9.10221 5.02018 8.76367 4.74414  c
8.42513 4.46810 7.92773 4.33008 7.27148 4.33008  c
6.58398 4.33008 6.08398 4.45508 5.77148 4.70508  c
5.45898 4.95508 5.30273 5.25716 5.30273 5.61133  c
5.30273 5.92383 5.41211 6.17904 5.63086 6.37695  c
5.84961 6.57487 6.41992 6.77799 7.34180 6.98633  c
8.26367 7.19466 8.89648 7.37695 9.24023 7.53320  c
9.74023 7.77279 10.1100 8.06706 10.3496 8.41602  c
10.5892 8.76497 10.7090 9.17383 10.7090 9.64258  c
10.7090 10.1009 10.5788 10.5306 10.3184 10.9316  c
10.0579 11.3327 9.68294 11.6452 9.19336 11.8691  c
8.70378 12.0931 8.15169 12.2051 7.53711 12.2051  c
6.75586 12.2051 6.10221 12.0931 5.57617 11.8691  c
5.05013 11.6452 4.63867 11.3040 4.34180 10.8457  c
4.04492 10.3874 3.89128 9.87174 3.88086 9.29883  c
h
16.2129 12.0645 m
16.2129 11.1426 l
15.7233 11.8509 15.0618 12.2051 14.2285 12.2051  c
13.8639 12.2051 13.5228 12.1348 13.2051 11.9941  c
12.8874 11.8535 12.6504 11.6764 12.4941 11.4629  c
12.3379 11.2493 12.2285 10.9863 12.1660 10.6738  c
12.1243 10.4759 12.1035 10.1478 12.1035 9.68945  c
12.1035 5.84570 l
13.1660 5.84570 l
13.1660 9.29883 l
13.1660 9.84049 13.1868 10.2103 13.2285 10.4082  c
13.2910 10.6790 13.4290 10.8952 13.6426 11.0566  c
13.8561 11.2181 14.1243 11.2988 14.4473 11.2988  c
14.7598 11.2988 15.0540 11.2181 15.3301 11.0566  c
15.6061 10.8952 15.8040 10.6738 15.9238 10.3926  c
16.0436 10.1113 16.1035 9.70508 16.1035 9.17383  c
16.1035 5.84570 l
17.1504 5.84570 l
17.1504 12.0645 l
16.2129 12.0645 l
h
18.6055 12.5801 m
19.6367 12.7363 l
19.6784 13.0488 19.7982 13.2780 19.9961 13.4238  c
20.2565 13.6217 20.6107 13.7207 21.0586 13.7207  c
21.5482 13.7207 21.9258 13.6217 22.1914 13.4238  c
22.4570 13.2259 22.6367 12.9551 22.7305 12.6113  c
22.7930 12.3926 22.8190 11.9395 22.8086 11.2520  c
22.3503 11.7936 21.7773 12.0645 21.0898 12.0645  c
20.2357 12.0645 19.5742 11.7546 19.1055 11.1348  c
18.6367 10.5150 18.4023 9.77799 18.4023 8.92383  c
18.4023 8.33008 18.5091 7.78060 18.7227 7.27539  c
18.9362 6.77018 19.2461 6.38216 19.6523 6.11133  c
20.0586 5.84049 20.5378 5.70508 21.0898 5.70508  c
21.8294 5.70508 22.4388 6.00195 22.9180 6.59570  c
22.9180 5.84570 l
23.8867 5.84570 l
23.8867 11.2207 l
23.8867 12.1895 23.7878 12.8770 23.5898 13.2832  c
23.3919 13.6895 23.0794 14.0098 22.6523 14.2441  c
22.2253 14.4785 21.6992 14.5957 21.0742 14.5957  c
20.3346 14.5957 19.7357 14.4290 19.2773 14.0957  c
18.8190 13.7624 18.5951 13.2572 18.6055 12.5801  c
h
19.4805 8.84570 m
19.4805 9.65820 19.6419 10.2520 19.9648 10.6270  c
20.2878 11.0020 20.6940 11.1895 21.1836 11.1895  c
21.6732 11.1895 22.0820 11.0020 22.4102 10.6270  c
22.7383 10.2520 22.9023 9.66862 22.9023 8.87695  c
22.9023 8.11654 22.7331 7.54362 22.3945 7.15820  c
22.0560 6.77279 21.6471 6.58008 21.1680 6.58008  c
20.6992 6.58008 20.3008 6.77018 19.9727 7.15039  c
19.6445 7.53060 19.4805 8.09570 19.4805 8.84570  c
h
25.2793 12.5801 m
26.3105 12.7363 l
26.3522 13.0488 26.4720 13.2780 26.6699 13.4238  c
26.9303 13.6217 27.2845 13.7207 27.7324 13.7207  c
28.2220 13.7207 28.5996 13.6217 28.8652 13.4238  c
29.1309 13.2259 29.3105 12.9551 29.4043 12.6113  c
29.4668 12.3926 29.4928 11.9395 29.4824 11.2520  c
29.0241 11.7936 28.4512 12.0645 27.7637 12.0645  c
26.9095 12.0645 26.2480 11.7546 25.7793 11.1348  c
25.3105 10.5150 25.0762 9.77799 25.0762 8.92383  c
25.0762 8.33008 25.1829 7.78060 25.3965 7.27539  c
25.6100 6.77018 25.9199 6.38216 26.3262 6.11133  c
26.7324 5.84049 27.2116 5.70508 27.7637 5.70508  c
28.5033 5.70508 29.1126 6.00195 29.5918 6.59570  c
29.5918 5.84570 l
30.5605 5.84570 l
30.5605 11.2207 l
30.5605 12.1895 30.4616 12.8770 30.2637 13.2832  c
30.0658 13.6895 29.7533 14.0098 29.3262 14.2441  c
28.8991 14.4785 28.3730 14.5957 27.7480 14.5957  c
27.0085 14.5957 26.4095 14.4290 25.9512 14.0957  c
25.4928 13.7624 25.2689 13.2572 25.2793 12.5801  c
h
26.1543 8.84570 m
26.1543 9.65820 26.3158 10.2520 26.6387 10.6270  c
26.9616 11.0020 27.3678 11.1895 27.8574 11.1895  c
28.3470 11.1895 28.7559 11.0020 29.0840 10.6270  c
29.4121 10.2520 29.5762 9.66862 29.5762 8.87695  c
29.5762 8.11654 29.4069 7.54362 29.0684 7.15820  c
28.7298 6.77279 28.3210 6.58008 27.8418 6.58008  c
27.3730 6.58008 26.9746 6.77018 26.6465 7.15039  c
26.3184 7.53060 26.1543 8.09570 26.1543 8.84570  c
h
36.4062 10.0645 m
37.5000 10.1895 l
37.3333 10.8249 37.0156 11.3197 36.5469 11.6738  c
36.0781 12.0280 35.4844 12.2051 34.7656 12.2051  c
33.8594 12.2051 33.1380 11.9238 32.6016 11.3613  c
32.0651 10.7988 31.7969 10.0124 31.7969 9.00195  c
31.7969 7.96029 32.0677 7.15039 32.6094 6.57227  c
33.1510 5.99414 33.8490 5.70508 34.7031 5.70508  c
35.5365 5.70508 36.2161 5.98633 36.7422 6.54883  c
37.2682 7.11133 37.5312 7.90820 37.5312 8.93945  c
37.5312 9.00195 37.5312 9.09570 37.5312 9.22070  c
32.8906 9.22070 l
32.9323 9.90820 33.1250 10.4316 33.4688 10.7910  c
33.8125 11.1504 34.2448 11.3301 34.7656 11.3301  c
35.1510 11.3301 35.4818 11.2285 35.7578 11.0254  c
36.0339 10.8223 36.2500 10.5020 36.4062 10.0645  c
h
32.9531 8.36133 m
36.4219 8.36133 l
36.3802 7.83008 36.2500 7.43424 36.0312 7.17383  c
35.6875 6.76758 35.2500 6.56445 34.7188 6.56445  c
34.2292 6.56445 33.8203 6.72591 33.4922 7.04883  c
33.1641 7.37174 32.9844 7.80924 32.9531 8.36133  c
h
38.4082 10.2051 m
39.4395 10.0488 l
39.5020 10.4655 39.6660 10.7832 39.9316 11.0020  c
40.1973 11.2207 40.5749 11.3301 41.0645 11.3301  c
41.5436 11.3301 41.9004 11.2337 42.1348 11.0410  c
42.3691 10.8483 42.4863 10.6165 42.4863 10.3457  c
42.4863 10.1061 42.3822 9.91862 42.1738 9.78320  c
42.0280 9.68945 41.6686 9.56966 41.0957 9.42383  c
40.3249 9.22591 39.7910 9.05664 39.4941 8.91602  c
39.1973 8.77539 38.9707 8.58008 38.8145 8.33008  c
38.6582 8.08008 38.5801 7.79883 38.5801 7.48633  c
38.5801 7.21549 38.6426 6.96029 38.7676 6.72070  c
38.8926 6.48112 39.0645 6.28320 39.2832 6.12695  c
39.4499 6.01237 39.6738 5.91341 39.9551 5.83008  c
40.2363 5.74674 40.5436 5.70508 40.8770 5.70508  c
41.3561 5.70508 41.7806 5.77539 42.1504 5.91602  c
42.5202 6.05664 42.7936 6.24674 42.9707 6.48633  c
43.1478 6.72591 43.2676 7.04362 43.3301 7.43945  c
42.2988 7.58008 l
42.2572 7.26758 42.1243 7.02018 41.9004 6.83789  c
41.6764 6.65560 41.3561 6.56445 40.9395 6.56445  c
40.4603 6.56445 40.1165 6.64518 39.9082 6.80664  c
39.6999 6.96810 39.5957 7.15820 39.5957 7.37695  c
39.5957 7.51237 39.6374 7.63216 39.7207 7.73633  c
39.8145 7.85091 39.9499 7.94466 40.1270 8.01758  c
40.2311 8.05924 40.5436 8.14779 41.0645 8.28320  c
41.8145 8.49154 42.3353 8.65820 42.6270 8.78320  c
42.9186 8.90820 43.1478 9.09049 43.3145 9.33008  c
43.4811 9.56966 43.5645 9.87174 43.5645 10.2363  c
43.5645 10.5905 43.4629 10.9212 43.2598 11.2285  c
43.0566 11.5358 42.7624 11.7754 42.3770 11.9473  c
41.9915 12.1191 41.5540 12.2051 41.0645 12.2051  c
40.2520 12.2051 39.6348 12.0358 39.2129 11.6973  c
38.7910 11.3587 38.5228 10.8613 38.4082 10.2051  c
h
47.1270 11.1270 m
47.2832 12.0488 l
46.9811 12.1113 46.7155 12.1426 46.4863 12.1426  c
46.1009 12.1426 45.8040 12.0827 45.5957 11.9629  c
45.3874 11.8431 45.2389 11.6842 45.1504 11.4863  c
45.0618 11.2884 45.0176 10.8717 45.0176 10.2363  c
45.0176 6.65820 l
44.2520 6.65820 l
44.2520 5.84570 l
45.0176 5.84570 l
45.0176 4.29883 l
46.0645 3.67383 l
46.0645 5.84570 l
47.1270 5.84570 l
47.1270 6.65820 l
46.0645 6.65820 l
46.0645 10.2988 l
46.0645 10.6009 46.0827 10.7936 46.1191 10.8770  c
46.1556 10.9603 46.2155 11.0280 46.2988 11.0801  c
46.3822 11.1322 46.5020 11.1582 46.6582 11.1582  c
46.7832 11.1582 46.9395 11.1478 47.1270 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
0.00000 0.00000 0.00000 RG
2 j
0 j
1.00000 1.00000 1.00000 RG
newpath
184.000 102.000 m
184.000 114.000 l
184.000 115.105 184.895 116.000 186.000 116.000  c
198.000 116.000 l
199.105 116.000 200.000 115.105 200.000 114.000  c
200.000 102.000 l
200.000 100.895 199.105 100.000 198.000 100.000  c
186.000 100.000 l
184.895 100.000 184.000 100.895 184.000 102.000  c
h
f
1.50000 w
2 j
.525490 .525490 .525490 RG
newpath
184.000 102.000 m
184.000 114.000 l
184.000 115.105 184.895 116.000 186.000 116.000  c
198.000 116.000 l
199.105 116.000 200.000 115.105 200.000 114.000  c
200.000 102.000 l
200.000 100.895 199.105 100.000 198.000 100.000  c
186.000 100.000 l
184.895 100.000 184.000 100.895 184.000 102.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [184.0 100.0 184.0 116.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
186.500 104.500 m
186.500 113.500 l
186.500 114.605 187.395 115.500 188.500 115.500  c
197.500 115.500 l
198.605 115.500 199.500 114.605 199.500 113.500  c
199.500 104.500 l
199.500 103.395 198.605 102.500 197.500 102.500  c
188.500 102.500 l
187.395 102.500 186.500 103.395 186.500 104.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 124.000 84.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
4.82812 12.0645 m
4.82812 11.2832 l
4.43229 11.8978 3.85417 12.2051 3.09375 12.2051  c
2.59375 12.2051 2.13542 12.0671 1.71875 11.7910  c
1.30208 11.5150 .979167 11.1322 .750000 10.6426  c
.520833 10.1530 .406250 9.59049 .406250 8.95508  c
.406250 8.34049 .510417 7.77799 .718750 7.26758  c
.927083 6.75716 1.23958 6.36914 1.65625 6.10352  c
2.07292 5.83789 2.53646 5.70508 3.04688 5.70508  c
3.42188 5.70508 3.75521 5.78320 4.04688 5.93945  c
4.33854 6.09570 4.57812 6.29883 4.76562 6.54883  c
4.76562 3.47070 l
5.81250 3.47070 l
5.81250 12.0645 l
4.82812 12.0645 l
h
1.50000 8.95508 m
1.50000 9.75716 1.66667 10.3535 2.00000 10.7441  c
2.33333 11.1348 2.72917 11.3301 3.18750 11.3301  c
3.64583 11.3301 4.03646 11.1426 4.35938 10.7676  c
4.68229 10.3926 4.84375 9.81966 4.84375 9.04883  c
4.84375 8.19466 4.67969 7.56966 4.35156 7.17383  c
4.02344 6.77799 3.61979 6.58008 3.14062 6.58008  c
2.67188 6.58008 2.28125 6.77018 1.96875 7.15039  c
1.65625 7.53060 1.50000 8.13216 1.50000 8.95508  c
h
7.08008 8.95508 m
7.08008 7.79883 7.39779 6.94466 8.03320 6.39258  c
8.56445 5.93424 9.21549 5.70508 9.98633 5.70508  c
10.8405 5.70508 11.5410 5.98372 12.0879 6.54102  c
12.6348 7.09831 12.9082 7.87174 12.9082 8.86133  c
12.9082 9.66341 12.7884 10.2936 12.5488 10.7520  c
12.3092 11.2103 11.9577 11.5671 11.4941 11.8223  c
11.0306 12.0775 10.5280 12.2051 9.98633 12.2051  c
9.12174 12.2051 8.42122 11.9264 7.88477 11.3691  c
7.34831 10.8118 7.08008 10.0072 7.08008 8.95508  c
h
8.15820 8.95508 m
8.15820 9.74674 8.33268 10.3405 8.68164 10.7363  c
9.03060 11.1322 9.46549 11.3301 9.98633 11.3301  c
10.5176 11.3301 10.9551 11.1322 11.2988 10.7363  c
11.6426 10.3405 11.8145 9.73633 11.8145 8.92383  c
11.8145 8.15299 11.6400 7.56966 11.2910 7.17383  c
10.9421 6.77799 10.5072 6.58008 9.98633 6.58008  c
9.46549 6.58008 9.03060 6.77539 8.68164 7.16602  c
8.33268 7.55664 8.15820 8.15299 8.15820 8.95508  c
h
18.2070 9.78320 m
19.2383 9.92383 l
19.1237 10.6322 18.8320 11.1895 18.3633 11.5957  c
17.8945 12.0020 17.3216 12.2051 16.6445 12.2051  c
15.7904 12.2051 15.1055 11.9264 14.5898 11.3691  c
14.0742 10.8118 13.8164 10.0124 13.8164 8.97070  c
13.8164 8.30404 13.9284 7.71810 14.1523 7.21289  c
14.3763 6.70768 14.7148 6.33008 15.1680 6.08008  c
15.6211 5.83008 16.1185 5.70508 16.6602 5.70508  c
17.3268 5.70508 17.8763 5.87435 18.3086 6.21289  c
18.7409 6.55143 19.0195 7.03841 19.1445 7.67383  c
18.1133 7.83008 l
18.0195 7.41341 17.8477 7.09831 17.5977 6.88477  c
17.3477 6.67122 17.0456 6.56445 16.6914 6.56445  c
16.1602 6.56445 15.7279 6.75456 15.3945 7.13477  c
15.0612 7.51497 14.8945 8.11654 14.8945 8.93945  c
14.8945 9.78320 15.0560 10.3926 15.3789 10.7676  c
15.7018 11.1426 16.1185 11.3301 16.6289 11.3301  c
17.0456 11.3301 17.3919 11.2051 17.6680 10.9551  c
17.9440 10.7051 18.1237 10.3145 18.2070 9.78320  c
h
24.2227 12.0645 m
24.2227 11.1426 l
23.7331 11.8509 23.0716 12.2051 22.2383 12.2051  c
21.8737 12.2051 21.5326 12.1348 21.2148 11.9941  c
20.8971 11.8535 20.6602 11.6764 20.5039 11.4629  c
20.3477 11.2493 20.2383 10.9863 20.1758 10.6738  c
20.1341 10.4759 20.1133 10.1478 20.1133 9.68945  c
20.1133 5.84570 l
21.1758 5.84570 l
21.1758 9.29883 l
21.1758 9.84049 21.1966 10.2103 21.2383 10.4082  c
21.3008 10.6790 21.4388 10.8952 21.6523 11.0566  c
21.8659 11.2181 22.1341 11.2988 22.4570 11.2988  c
22.7695 11.2988 23.0638 11.2181 23.3398 11.0566  c
23.6159 10.8952 23.8138 10.6738 23.9336 10.3926  c
24.0534 10.1113 24.1133 9.70508 24.1133 9.17383  c
24.1133 5.84570 l
25.1602 5.84570 l
25.1602 12.0645 l
24.2227 12.0645 l
h
26.8184 12.0645 m
26.8184 5.84570 l
27.7559 5.84570 l
27.7559 6.72070 l
27.9538 6.40820 28.2142 6.16081 28.5371 5.97852  c
28.8600 5.79622 29.2298 5.70508 29.6465 5.70508  c
30.1048 5.70508 30.4824 5.79883 30.7793 5.98633  c
31.0762 6.17383 31.2819 6.43945 31.3965 6.78320  c
31.8965 6.06445 32.5371 5.70508 33.3184 5.70508  c
33.9434 5.70508 34.4199 5.87435 34.7480 6.21289  c
35.0762 6.55143 35.2402 7.08008 35.2402 7.79883  c
35.2402 12.0645 l
34.1934 12.0645 l
34.1934 8.14258 l
34.1934 7.72591 34.1595 7.42383 34.0918 7.23633  c
34.0241 7.04883 33.9017 6.89779 33.7246 6.78320  c
33.5475 6.66862 33.3340 6.61133 33.0840 6.61133  c
32.6465 6.61133 32.2845 6.75716 31.9980 7.04883  c
31.7116 7.34049 31.5684 7.80924 31.5684 8.45508  c
31.5684 12.0645 l
30.5059 12.0645 l
30.5059 8.01758 l
30.5059 7.54883 30.4199 7.19727 30.2480 6.96289  c
30.0762 6.72852 29.7975 6.61133 29.4121 6.61133  c
29.1100 6.61133 28.8340 6.68945 28.5840 6.84570  c
28.3340 7.00195 28.1517 7.23112 28.0371 7.53320  c
27.9225 7.83529 27.8652 8.26758 27.8652 8.83008  c
27.8652 12.0645 l
26.8184 12.0645 l
h
41.0645 10.0645 m
42.1582 10.1895 l
41.9915 10.8249 41.6738 11.3197 41.2051 11.6738  c
40.7363 12.0280 40.1426 12.2051 39.4238 12.2051  c
38.5176 12.2051 37.7962 11.9238 37.2598 11.3613  c
36.7233 10.7988 36.4551 10.0124 36.4551 9.00195  c
36.4551 7.96029 36.7259 7.15039 37.2676 6.57227  c
37.8092 5.99414 38.5072 5.70508 39.3613 5.70508  c
40.1947 5.70508 40.8743 5.98633 41.4004 6.54883  c
41.9264 7.11133 42.1895 7.90820 42.1895 8.93945  c
42.1895 9.00195 42.1895 9.09570 42.1895 9.22070  c
37.5488 9.22070 l
37.5905 9.90820 37.7832 10.4316 38.1270 10.7910  c
38.4707 11.1504 38.9030 11.3301 39.4238 11.3301  c
39.8092 11.3301 40.1400 11.2285 40.4160 11.0254  c
40.6921 10.8223 40.9082 10.5020 41.0645 10.0645  c
h
37.6113 8.36133 m
41.0801 8.36133 l
41.0384 7.83008 40.9082 7.43424 40.6895 7.17383  c
40.3457 6.76758 39.9082 6.56445 39.3770 6.56445  c
38.8874 6.56445 38.4785 6.72591 38.1504 7.04883  c
37.8223 7.37174 37.6426 7.80924 37.6113 8.36133  c
h
43.4883 12.0645 m
43.4883 5.84570 l
44.4258 5.84570 l
44.4258 6.72070 l
44.8841 6.04362 45.5456 5.70508 46.4102 5.70508  c
46.7852 5.70508 47.1315 5.77279 47.4492 5.90820  c
47.7669 6.04362 48.0039 6.22070 48.1602 6.43945  c
48.3164 6.65820 48.4258 6.91341 48.4883 7.20508  c
48.5195 7.40299 48.5352 7.74674 48.5352 8.23633  c
48.5352 12.0645 l
47.4883 12.0645 l
47.4883 8.28320 l
47.4883 7.84570 47.4466 7.52279 47.3633 7.31445  c
47.2799 7.10612 47.1341 6.93685 46.9258 6.80664  c
46.7174 6.67643 46.4727 6.61133 46.1914 6.61133  c
45.7435 6.61133 45.3555 6.75456 45.0273 7.04102  c
44.6992 7.32747 44.5352 7.86654 44.5352 8.65820  c
44.5352 12.0645 l
43.4883 12.0645 l
h
52.4590 11.1270 m
52.6152 12.0488 l
52.3132 12.1113 52.0475 12.1426 51.8184 12.1426  c
51.4329 12.1426 51.1361 12.0827 50.9277 11.9629  c
50.7194 11.8431 50.5710 11.6842 50.4824 11.4863  c
50.3939 11.2884 50.3496 10.8717 50.3496 10.2363  c
50.3496 6.65820 l
49.5840 6.65820 l
49.5840 5.84570 l
50.3496 5.84570 l
50.3496 4.29883 l
51.3965 3.67383 l
51.3965 5.84570 l
52.4590 5.84570 l
52.4590 6.65820 l
51.3965 6.65820 l
51.3965 10.2988 l
51.3965 10.6009 51.4147 10.7936 51.4512 10.8770  c
51.4876 10.9603 51.5475 11.0280 51.6309 11.0801  c
51.7142 11.1322 51.8340 11.1582 51.9902 11.1582  c
52.1152 11.1582 52.2715 11.1478 52.4590 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
148.000 170.000 m
148.000 182.000 l
148.000 183.105 148.895 184.000 150.000 184.000  c
162.000 184.000 l
163.105 184.000 164.000 183.105 164.000 182.000  c
164.000 170.000 l
164.000 168.895 163.105 168.000 162.000 168.000  c
150.000 168.000 l
148.895 168.000 148.000 168.895 148.000 170.000  c
h
f
.525490 .525490 .525490 RG
newpath
148.000 170.000 m
148.000 182.000 l
148.000 183.105 148.895 184.000 150.000 184.000  c
162.000 184.000 l
163.105 184.000 164.000 183.105 164.000 182.000  c
164.000 170.000 l
164.000 168.895 163.105 168.000 162.000 168.000  c
150.000 168.000 l
148.895 168.000 148.000 168.895 148.000 170.000  c
h
S
<< /PatternType 2
   /Shading
   << /ShadingType 2
      /ColorSpace /DeviceRGB
      /Coords [148.0 168.0 148.0 184.0]
      /Function
      << /FunctionType 2
         /Domain [0 1]
         /Range [0 1 0 1 0 1]
         /C0 [0.7529412 0.7529412 0.7529412]
         /C1 [1.0 1.0 1.0]
         /N 1
      >>
      /Extend [true true]
   >>
>>
matrix makepattern setpattern
newpath
150.500 172.500 m
150.500 181.500 l
150.500 182.605 151.395 183.500 152.500 183.500  c
161.500 183.500 l
162.605 183.500 163.500 182.605 163.500 181.500  c
163.500 172.500 l
163.500 171.395 162.605 170.500 161.500 170.500  c
152.500 170.500 l
151.395 170.500 150.500 171.395 150.500 172.500  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 124.000 144.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
.796875 14.4551 m
.796875 5.84570 l
1.75000 5.84570 l
1.75000 6.64258 l
1.97917 6.33008 2.23698 6.09570 2.52344 5.93945  c
2.80990 5.78320 3.15625 5.70508 3.56250 5.70508  c
4.09375 5.70508 4.56250 5.84049 4.96875 6.11133  c
5.37500 6.38216 5.67969 6.76758 5.88281 7.26758  c
6.08594 7.76758 6.18750 8.31445 6.18750 8.90820  c
6.18750 9.54362 6.07552 10.1165 5.85156 10.6270  c
5.62760 11.1374 5.29688 11.5280 4.85938 11.7988  c
4.42188 12.0697 3.96354 12.2051 3.48438 12.2051  c
3.13021 12.2051 2.81250 12.1296 2.53125 11.9785  c
2.25000 11.8275 2.02083 11.6426 1.84375 11.4238  c
1.84375 14.4551 l
.796875 14.4551 l
h
1.75000 8.98633 m
1.75000 9.78841 1.91146 10.3796 2.23438 10.7598  c
2.55729 11.1400 2.94792 11.3301 3.40625 11.3301  c
3.87500 11.3301 4.27604 11.1322 4.60938 10.7363  c
4.94271 10.3405 5.10938 9.72591 5.10938 8.89258  c
5.10938 8.10091 4.94792 7.50977 4.62500 7.11914  c
4.30208 6.72852 3.91146 6.53320 3.45312 6.53320  c
3.00521 6.53320 2.60938 6.74154 2.26562 7.15820  c
1.92188 7.57487 1.75000 8.18424 1.75000 8.98633  c
h
7.08008 8.95508 m
7.08008 7.79883 7.39779 6.94466 8.03320 6.39258  c
8.56445 5.93424 9.21549 5.70508 9.98633 5.70508  c
10.8405 5.70508 11.5410 5.98372 12.0879 6.54102  c
12.6348 7.09831 12.9082 7.87174 12.9082 8.86133  c
12.9082 9.66341 12.7884 10.2936 12.5488 10.7520  c
12.3092 11.2103 11.9577 11.5671 11.4941 11.8223  c
11.0306 12.0775 10.5280 12.2051 9.98633 12.2051  c
9.12174 12.2051 8.42122 11.9264 7.88477 11.3691  c
7.34831 10.8118 7.08008 10.0072 7.08008 8.95508  c
h
8.15820 8.95508 m
8.15820 9.74674 8.33268 10.3405 8.68164 10.7363  c
9.03060 11.1322 9.46549 11.3301 9.98633 11.3301  c
10.5176 11.3301 10.9551 11.1322 11.2988 10.7363  c
11.6426 10.3405 11.8145 9.73633 11.8145 8.92383  c
11.8145 8.15299 11.6400 7.56966 11.2910 7.17383  c
10.9421 6.77799 10.5072 6.58008 9.98633 6.58008  c
9.46549 6.58008 9.03060 6.77539 8.68164 7.16602  c
8.33268 7.55664 8.15820 8.15299 8.15820 8.95508  c
h
14.1289 12.0645 m
14.1289 5.84570 l
15.0820 5.84570 l
15.0820 6.78320 l
15.3216 6.34570 15.5430 6.05664 15.7461 5.91602  c
15.9492 5.77539 16.1758 5.70508 16.4258 5.70508  c
16.7799 5.70508 17.1393 5.81445 17.5039 6.03320  c
17.1445 7.01758 l
16.8841 6.86133 16.6289 6.78320 16.3789 6.78320  c
16.1393 6.78320 15.9284 6.85352 15.7461 6.99414  c
15.5638 7.13477 15.4362 7.33008 15.3633 7.58008  c
15.2383 7.95508 15.1758 8.36133 15.1758 8.79883  c
15.1758 12.0645 l
14.1289 12.0645 l
h
20.4375 11.1270 m
20.5938 12.0488 l
20.2917 12.1113 20.0260 12.1426 19.7969 12.1426  c
19.4115 12.1426 19.1146 12.0827 18.9062 11.9629  c
18.6979 11.8431 18.5495 11.6842 18.4609 11.4863  c
18.3724 11.2884 18.3281 10.8717 18.3281 10.2363  c
18.3281 6.65820 l
17.5625 6.65820 l
17.5625 5.84570 l
18.3281 5.84570 l
18.3281 4.29883 l
19.3750 3.67383 l
19.3750 5.84570 l
20.4375 5.84570 l
20.4375 6.65820 l
19.3750 6.65820 l
19.3750 10.2988 l
19.3750 10.6009 19.3932 10.7936 19.4297 10.8770  c
19.4661 10.9603 19.5260 11.0280 19.6094 11.0801  c
19.6927 11.1322 19.8125 11.1582 19.9688 11.1582  c
20.0938 11.1582 20.2500 11.1478 20.4375 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 w
newpath
148.034 180.552 m
82.7819 217.839 l
S
newpath
77.9537 234.419 m
83.7079 231.131 85.7070 223.801 82.4189 218.046  c
79.1308 212.292 71.8005 210.293 66.0463 213.581  c
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
192.000 100.000 m
192.000 74.8274 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
148.055 172.595 m
83.3642 144.870 l
S
7.00000 w
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 268.000 l
313.000 268.000 l
313.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 268.000 l
313.000 268.000 l
313.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
