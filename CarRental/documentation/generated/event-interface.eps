%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 195 312 400 479
%%Creator: FreeHEP Graphics2D Driver
%%Producer: org.freehep.graphicsio.ps.PSGraphics2D Revision: 12753 
%%For: 
%%Title: 
%%CreationDate: Wednesday, 15 September 2010 00:16:48 o'clock BST
%%LanguageLevel: 3
%%EndComments
%%BeginProlog
100 dict dup begin

%
% File: org/freehep/graphicsio.ps/PSProlog.txt
% Author: Charles Loomis
%

% Redefinitions which save some space in the output file.  These are also
% the same as the PDF operators.
/q {gsave} def
/Q {grestore} def

/n {newpath} def
/m {moveto} def
/l {lineto} def
/c {curveto} def
/h {closepath} def

/re {4 -2 roll moveto
     dup 0 exch rlineto exch 0 rlineto
     neg 0 exch rlineto closepath} def

/f {fill} def
/f* {eofill} def
/F {gsave vg&FC fill grestore} def
/F* {gsave vg&FC eofill grestore} def

/s {closepath stroke} def
/S {stroke} def

/b {closepath gsave vg&FC fill grestore
    gsave stroke grestore newpath} def
/B {gsave vg&FC fill grestore gsave stroke grestore newpath} def
/b* {closepath gsave vg&FC eofill grestore
    gsave stroke grestore newpath} def
/B* {gsave vg&FC eofill grestore gsave stroke grestore newpath} def

/g {1 array astore /vg&fcolor exch def} def
/G {setgray} def
/k {4 array astore /vg&fcolor exch def} def
/K {setcmykcolor} def
/rg {3 array astore /vg&fcolor exch def} def
/RG {setrgbcolor} def

% Initialize the fill color.
0 0 0 rg

/vg&FC {mark vg&fcolor aload pop
        counttomark 1 eq {G} if
        counttomark 3 eq {RG} if
        counttomark 4 eq {K} if
        cleartomark } def

/vg&DFC {/vg&fcolor exch def} def

/vg&C {mark exch aload pop
       counttomark 1 eq {G} if
       counttomark 3 eq {RG} if
       counttomark 4 eq {K} if
       cleartomark } def

/w {setlinewidth} def
/j {setlinejoin} def
/J {setlinecap} def
/M {setmiterlimit} def
/d {setdash} def
/i {setflat} def

/W {clip} def
/W* {eoclip} def

% Setup the default graphics state.
% (black; 1 pt. linewidth; miter join; butt-ends; solid)
/defaultGraphicsState {0 g 1 w 0 j 0 J [] 0 d} def

% Emulation of the rectangle operators for PostScript implementations
% which do not implement all Level 2 features.  This is an INCOMPLETE
% emulation; only the "x y width height rect..." form is emulated.
/*rf {gsave newpath re fill grestore} def
/*rs {gsave newpath re stroke grestore} def
/*rc {newpath re clip} def
/rf  /rectfill where {pop /rectfill}{/*rf} ifelse load def
/rs  /rectstroke where {pop /rectstroke}{/*rs} ifelse load def
/rc  /rectclip where {pop /rectclip}{/*rc} ifelse load def

% Emulation of the selectfont operator.  This includes a 20% increase in
% the fontsize which is necessary to get sizes similar to the Java fonts.
/*sf {exch findfont exch
      dup type /arraytype eq {makefont}{scalefont} ifelse setfont} bind def
/sf /selectfont where {pop {1.2 mul selectfont}}{{1.2 mul *sf}} ifelse def

% Special version of stroke which allows the dash pattern to continue
% across path segments.  (This may be needed for PostScript although
% modern printers seem to do this correctly.)
/vg&stroke {
  currentdash pop length 0 eq
  {stroke}
  {
    currentdash /vg&doffset exch def pop
    flattenpath
    {m vg&resetdash}
    {2 copy
     currentpoint
     3 -1 roll sub dup mul
     3 1 roll sub dup mul
     add sqrt
     3 1 roll l
     currentdash 3 -1 roll add setdash}
     {}
     {h vg&resetdash}
     pathforall
     stroke
     vg&resetdash
  } ifelse
} def
/vg&resetdash {currentdash pop vg&doffset setdash} def

% Initialize variables for safety.
/delta 0 def
/xv 0 def  /yv 0 def  /width 0 def  /height 0 def

% Initialize to portrait INTERNATIONAL (Letter-height, A4-width) page.
/pw 595 def  /ph 791  def  /po true def /ftp false def

% Initialize margins to 20 points.
/ml 20 def  /mr 20 def  /mt 20 def  /mb 20 def

% Temporary matrices.
/smatrix 0 def  /nmatrix 0 def

% set page size (usage: <page width><page height> setpagesize)
/setpagesize {/ph exch def /pw exch def} def

% set page orientation (usage: portrait or landscape)
/portrait {/po true def} def
/landscape {/po false def} def

% force natural size for image (usage: naturalsize)
/naturalsize {/ftp false def} def

% resize image to fill page (usage: fittopage)
/fittopage {/ftp true def} def

% set margins of the page (usage: <left><bottom><top><right> setmargins)
/setmargins {/mr exch def /mt exch def /mb exch def /ml exch def} def

% set the graphic's size (usage: <width><height> setsize)
/setsize {/gh exch def /gw exch def} def

% set the graphic's origin (usage: <x0><y0> setorigin)
/setorigin {/gy exch def /gx exch def} def

% calculate image center
/imagecenter {pw ml sub mr sub 2 div ml add
              ph mt sub mb sub 2 div mb add} def

% calculate the necessary scaling
/imagescale {po {gw}{gh} ifelse pw ml sub mr sub div
             po {gh}{gw} ifelse ph mt sub mb sub div
             2 copy lt {exch} if pop
             ftp not {1 2 copy lt {exch} if pop} if
             1 exch div /sfactor exch def
             /gw gw sfactor mul def /gh gh sfactor mul def} def

% calculate image origin
/imageorigin {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div po {add}{sub} ifelse} def

% calculate the clipping origin
/cliporigin  {pw ml sub mr sub 2 div ml add
              po {gw}{gh} ifelse 2 div sub floor
              ph mt sub mb sub 2 div mb add
              po {gh}{gw} ifelse 2 div sub floor} def

% Set the clipping region to the bounding box.
/cliptobounds {cliporigin po {gw}{gh} ifelse 1 add
                          po {gh}{gw} ifelse 1 add rc} def

% set the base transformation matrix (usage: setbasematrix)
/setbasematrix {imageorigin translate
                po {0}{90} ifelse rotate
                sfactor sfactor neg scale
                /defaultmatrix matrix currentmatrix def} def

% The lower-right bias in drawing 1 pt. wide lines.
/bias  {q 0.5 0.5 translate} def
/unbias {Q} def

% Define the composite fonts used to print Unicode strings.
% Undefine particular values in an encoding array.
/vg&undef { {exch dup 3 -1 roll /.notdef put} forall } def
/vg&redef { {3 -1 roll dup 4 2 roll put} forall } def

% usage: key encoding basefontname vg&newbasefont font
/vg&newbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    currentdict
  end
definefont
} def

% usage: key encoding basefontname vg&newskewedbasefont font
/vg&newskewedbasefont {
findfont dup length dict copy
  begin
    currentdict /FID undef
    /Encoding exch def
    dup /FontName exch def
    exch FontMatrix exch matrix concatmatrix /FontMatrix exch def
    currentdict
  end
definefont
} def

% usage: basekey suffix vg&nconcat name
/vg&nconcat {
  2 {dup length string cvs exch} repeat
  dup length 3 -1 roll dup length 3 -1 roll add string
  dup 0 4 -1 roll dup length 5 1 roll putinterval
  dup 4 -2 roll exch putinterval cvn
} def

%usage: fontname vg&skewmatrix matrix
/vg&skewmatrix {
findfont dup /FontInfo known
  {
    /FontInfo get dup /ItalicAngle known
    {
      [ 1 0 4 -1 roll /ItalicAngle get neg dup sin exch cos div 1 0 0 ]
    }
    {pop matrix} ifelse
  }
  {pop matrix} ifelse
} def

% usage: newfontname basefontname vg&newcompositefont --
/vg&newcompositefont {
/vg&fstyle exch def
/vg&bfont exch def
/vg&fname exch def
<<
/FontStyleBits vg&fstyle
/FontType 0
/FontMatrix matrix
/FontName vg&fname
/FMapType 2
/Encoding [ 0 1 255 {pop 6} for ]
          dup 16#00 0 put % Latin
          dup 16#03 1 put % Greek
          dup 16#20 2 put % Punctuation
          dup 16#21 3 put % Arrows
          dup 16#22 4 put % MathOps
          dup 16#27 5 put % Dingbats

/FDepVector [
vg&bfont /-UC-Latin vg&nconcat UCLatinEncoding
vg&bfont vg&newbasefont

vg&bfont vg&skewmatrix
vg&bfont /-UC-Greek vg&nconcat UCGreekEncoding
/Symbol vg&newskewedbasefont

vg&bfont /-UC-Punctuation vg&nconcat UCPunctuationEncoding
vg&bfont vg&newbasefont

/Arrows-UC findfont
/MathOps-UC findfont
/Dingbats-UC findfont
/Undefined-UC findfont ]
>>
vg&fname exch definefont pop
} def

% Null encoding vector (all elements set to .notdef)
/NullEncoding [ 256 {/.notdef} repeat ] def

% Unicode Latin encoding (unicode codes \u0000-\u00ff)
/UCLatinEncoding
  ISOLatin1Encoding dup length array copy
  dup 16#60 /grave put
  [ 16#90 16#91 16#92 16#93 16#94 16#95 16#96
    16#97 16#98 16#9a 16#9b 16#9d 16#9e 16#9f
  ] vg&undef
  def

% Unicode Greek encoding (unicode codes \u0370-\u03ff)
/UCGreekEncoding
  NullEncoding dup length array copy
  << 16#91 /Alpha    16#92 /Beta      16#93 /Gamma    16#94 /Delta
     16#95 /Epsilon  16#96 /Zeta      16#97 /Eta      16#98 /Theta
     16#99 /Iota     16#9a /Kappa     16#9b /Lambda   16#9c /Mu
     16#9d /Nu       16#9e /Xi        16#9f /Omicron  16#a0 /Pi
     16#a1 /Rho      16#a3 /Sigma     16#a4 /Tau      16#a5 /Upsilon
     16#a6 /Phi      16#a7 /Chi       16#a8 /Psi      16#a9 /Omega
     16#b1 /alpha    16#b2 /beta      16#b3 /gamma    16#b4 /delta
     16#b5 /epsilon  16#b6 /zeta      16#b7 /eta      16#b8 /theta
     16#b9 /iota     16#ba /kappa     16#bb /lambda   16#bc /mu
     16#bd /nu       16#be /xi        16#bf /omicron  16#c0 /pi
     16#c1 /rho      16#c2 /sigma1    16#c3 /sigma    16#c4 /tau
     16#c5 /upsilon  16#c6 /phi1      16#c7 /chi      16#c8 /psi
     16#c9 /omega    16#7e /semicolon 16#87 /dotmath  16#d1 /theta1
     16#d2 /Upsilon1 16#d5 /phi       16#d6 /omega1
  >> vg&redef
  def

% Unicode punctuation encoding (unicode codes \u2000-\u206f)
/UCPunctuationEncoding
  NullEncoding dup length array copy
  << 16#10 /hyphen          16#11 /hyphen              16#12 /endash
     16#13 /emdash          16#18 /quoteleft           16#19 /quoteright
     16#1a /quotesinglbase  16#1b /quotesingle         16#1c /quotedblleft
     16#1d /quotedblright   16#1e /quotedblbase        16#1f /quotedbl
     16#20 /dagger          16#21 /daggerdbl           16#22 /bullet
     16#24 /period          16#26 /ellipsis            16#27 /periodcentered
     16#30 /perthousand     16#44 /fraction
     16#70 /zerosuperior    16#74 /foursuperior        16#75 /fivesuperior
     16#76 /sixsuperior     16#77 /sevensuperior       16#78 /eightsuperior
     16#79 /ninesuperior    16#7b /hyphensuperior      16#7d /parenleftsuperior
     16#7e /parenrightsuperior
     16#80 /zeroinferior    16#84 /fourinferior        16#85 /fiveinferior
     16#81 /oneinferior     16#82 /twoinferior         16#83 /threeinferior
     16#86 /sixinferior     16#87 /seveninferior       16#88 /eightinferior
     16#89 /nineinferior    16#8b /hypheninferior      16#8d /parenleftinferior
     16#8e /parenrightinferior
  >> vg&redef
  def

% Unicode mathematical operators encoding (unicode codes \u2200-\u22ff)
/UCMathOpsEncoding
  NullEncoding dup length array copy
  << 16#00 /universal       16#02 /partialdiff         16#03 /existential
     16#05 /emptyset        16#06 /Delta               16#07 /gradient
     16#08 /element         16#09 /notelement          16#0b /suchthat
     16#0f /product         16#11 /summation           16#12 /minus
     16#15 /fraction        16#17 /asteriskmath        16#19 /bullet
     16#1a /radical         16#1d /proportional        16#1e /infinity
     16#20 /angle           16#23 /bar                 16#27 /logicaland
     16#28 /logicalor       16#29 /intersection        16#2a /union
     16#2b /integral        16#34 /therefore           16#36 /colon
     16#3c /similar         16#45 /congruent           16#48 /approxequal
     16#60 /notequal        16#61 /equivalence         16#64 /lessequal
     16#65 /greaterequal    16#82 /propersubset        16#83 /propersuperset
     16#86 /reflexsubset    16#87 /reflexsuperset      16#95 /circleplus
     16#97 /circlemultiply  16#a5 /perpendicular       16#03 /existential
     16#c0 /logicaland      16#c1 /logicalor           16#c2 /intersection
     16#c3 /union           16#c4 /diamond             16#c5 /dotmath
  >> vg&redef
  def

% Unicode arrows encoding (unicode codes \u2190-\u21ff)
% Also includes those "Letterlike" unicode characters
% which are available in the symbol font. (unicode codes \u2100-\u214f)
/UCArrowsEncoding
  NullEncoding dup length array copy
  << 16#11 /Ifraktur        16#1c /Rfraktur            16#22 /trademarkserif
     16#35 /aleph
     16#90 /arrowleft       16#91 /arrowup             16#92 /arrowright
     16#93 /arrowdown       16#94 /arrowboth           16#d0 /arrowdblleft
     16#d1 /arrowdblup      16#d2 /arrowdblright       16#d3 /arrowdbldown
     16#d4 /arrowdblboth
  >> vg&redef
  def

/ZapfDingbats findfont /Encoding get
dup length array copy /UCDingbatsEncoding exch def
16#20 1 16#7f {
  dup 16#20 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
16#a0 1 16#ff {
  dup 16#40 sub exch
  UCDingbatsEncoding exch get
  UCDingbatsEncoding 3 1 roll put
} for
UCDingbatsEncoding [ 16#c0 1 16#ff {} for ] vg&undef
[ 16#00  16#05 16#0a 16#0b  16#28 16#4c 16#4e  16#53 16#54 16#55  16#57 16#5f
  16#60  16#68 16#69 16#6a  16#6b 16#6c 16#6d  16#6e 16#6f 16#70  16#71 16#72
  16#73  16#74 16#75 16#95  16#96 16#97 16#b0  16#bf
] vg&undef pop

% Define the base fonts which don't change.
/Undefined-UC NullEncoding       /Helvetica    vg&newbasefont pop
/MathOps-UC   UCMathOpsEncoding  /Symbol       vg&newbasefont pop
/Arrows-UC    UCArrowsEncoding   /Symbol       vg&newbasefont pop
/Dingbats-UC  UCDingbatsEncoding /ZapfDingbats vg&newbasefont pop

% Make the SansSerif composite fonts.
/SansSerif /Helvetica 16#00 vg&newcompositefont
/SansSerif-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/SansSerif-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/SansSerif-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the Serif composite fonts.
/Serif /Times-Roman 16#00 vg&newcompositefont
/Serif-Bold /Times-Bold 16#01 vg&newcompositefont
/Serif-Italic /Times-Italic 16#02 vg&newcompositefont
/Serif-BoldItalic /Times-BoldItalic 16#03 vg&newcompositefont

% Make the Monospaced composite fonts.
/Monospaced /Courier 16#00 vg&newcompositefont
/Monospaced-Bold /Courier-Bold 16#01 vg&newcompositefont
/Monospaced-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Monospaced-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Dialog composite fonts.
/Dialog /Helvetica 16#00 vg&newcompositefont
/Dialog-Bold /Helvetica-Bold 16#01 vg&newcompositefont
/Dialog-Italic /Helvetica-Oblique 16#02 vg&newcompositefont
/Dialog-BoldItalic /Helvetica-BoldOblique 16#03 vg&newcompositefont

% Make the DialogInput composite fonts.
/DialogInput /Courier 16#00 vg&newcompositefont
/DialogInput-Bold /Courier-Bold 16#01 vg&newcompositefont
/DialogInput-Italic /Courier-Oblique 16#02 vg&newcompositefont
/DialogInput-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont

% Make the Typewriter composite fonts (JDK 1.1 only).
/Typewriter /Courier 16#00 vg&newcompositefont
/Typewriter-Bold /Courier-Bold 16#01 vg&newcompositefont
/Typewriter-Italic /Courier-Oblique 16#02 vg&newcompositefont
/Typewriter-BoldItalic /Courier-BoldOblique 16#03 vg&newcompositefont


/cfontH {
 dup /fontsize exch def /SansSerif exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHB {
  dup /fontsize exch def /SansSerif-Bold exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHI {
 dup /fontsize exch def /SansSerif-Italic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def
/cfontHBI {
 dup /fontsize exch def /SansSerif-BoldItalic exch sf
 /vg&fontstyles [{cfontH} {cfontHB} {cfontHI} {cfontHBI}] def
} def

/cfontT {
 dup /fontsize exch def /Serif exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTB {
 dup /fontsize exch def /Serif-Bold exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTI {
 dup /fontsize exch def /Serif-Italic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def
/cfontTBI {
 dup /fontsize exch def /Serif-BoldItalic exch sf
 /vg&fontstyles [{cfontT} {cfontTB} {cfontTI} {cfontTBI}] def
} def

/cfontC {
 dup /fontsize exch def /Typewriter exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCB {
 dup /fontsize exch def /Typewriter-Bold exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCI {
 dup /fontsize exch def /Typewriter-Italic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def
/cfontCBI {
 dup /fontsize exch def /Typewriter-BoldItalic exch sf
 /vg&fontstyles [{cfontC} {cfontCB} {cfontCI} {cfontCBI}] def
} def

% Darken or lighten the current color.
/darken {0.7 exch exp 3 copy
         q 4 -1 roll vg&C
         currentrgbcolor 3 {4 -2 roll mul} repeat
         3 array astore Q} def

/displayColorMap
<< /Cr   [1.00 0.00 0.00]       /Cg     [0.00 1.00 0.00]
   /Cb   [0.00 0.00 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.00 0.00]       /CGg    [0.00 1.00 0.00]
   /CGb  [0.00 0.00 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.00 0.00]       /CIg    [0.00 1.00 0.00]
   /CIb  [0.00 0.00 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/printColorMap
<< /Cr   [1.00 0.33 0.33]       /Cg     [0.33 1.00 0.33]
   /Cb   [0.33 0.33 1.00]       /Cc     [1.00 0.00 0.00 0.00]
   /Cm   [0.00 1.00 0.00 0.00]  /Cy     [0.00 0.00 1.00 0.00]
   /Co   [1.00 0.78 0.00]       /Cp     [1.00 0.67 0.67]
   /Cw   [1   ]                 /Cgrl   [0.75]
   /Cgr  [0.50]                 /Cgrd   [0.25]
   /Ck   [0   ]
   /CGr  [1.00 0.33 0.33]       /CGg    [0.33 1.00 0.33]
   /CGb  [0.33 0.33 1.00]       /CGc    [1.00 0.00 0.00 0.00]
   /CGm  [0.00 1.00 0.00 0.00]  /CGy    [0.00 0.00 1.00 0.00]
   /CGo  [1.00 0.78 0.00]       /CGp    [1.00 0.67 0.67]
   /CGw  [1   ]                 /CGgrl  [0.75]
   /CGgr [0.50]                 /CGgrd  [0.25]
   /CGk  [0   ]
   /CIr  [1.00 0.33 0.33]       /CIg    [0.33 1.00 0.33]
   /CIb  [0.33 0.33 1.00]       /CIc    [1.00 0.00 0.00 0.00]
   /CIm  [0.00 1.00 0.00 0.00]  /CIy    [0.00 0.00 1.00 0.00]
   /CIo  [1.00 0.78 0.00]       /CIp    [1.00 0.67 0.67]
   /CIw  [1   ]                 /CIgrl  [0.75]
   /CIgr [0.50]                 /CIgrd  [0.25]
   /CIk  [0   ]
>> def

/grayColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [0.75]                 /CGg    [1   ]
   /CGb  [0.50]                 /CGc    [0.75]
   /CGm  [0.50]                 /CGy    [1   ]
   /CGo  [0.75]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [0.25]
   /CGgr [0.50]                 /CGgrd  [0.75]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

/bwColorMap
<< /Cr   [0   ]                 /Cg     [0   ]
   /Cb   [0   ]                 /Cc     [0   ]
   /Cm   [0   ]                 /Cy     [0   ]
   /Co   [0   ]                 /Cp     [0   ]
   /Cw   [0   ]                 /Cgrl   [0   ]
   /Cgr  [0   ]                 /Cgrd   [0   ]
   /Ck   [0   ]
   /CGr  [1   ]                 /CGg    [1   ]
   /CGb  [1   ]                 /CGc    [1   ]
   /CGm  [1   ]                 /CGy    [1   ]
   /CGo  [1   ]                 /CGp    [1   ]
   /CGw  [0   ]                 /CGgrl  [1   ]
   /CGgr [1   ]                 /CGgrd  [1   ]
   /CGk  [1   ]
   /CIr  [1   ]                 /CIg    [1   ]
   /CIb  [1   ]                 /CIc    [1   ]
   /CIm  [1   ]                 /CIy    [1   ]
   /CIo  [1   ]                 /CIp    [1   ]
   /CIw  [1   ]                 /CIgrl  [1   ]
   /CIgr [1   ]                 /CIgrd  [1   ]
   /CIk  [1   ]
>> def

%
% The following routines handle the alignment of and printing of
% tagged strings.
%

% Predefine the bounding box values.
/bbllx 0 def /bblly 0 def /bburx 0 def /bbury 0 def

% This routine pops the first unicode character off of a string and returns
% the remainder of the string, the character code of first character,
% and a "true" if the string was non-zero length.
% <string>      popfirst <remaining string> <true>
% <null string> popfirst <false>
/popfirst {
  dup length 1 gt
    {dup 0 get /vg&fbyte exch def
     dup 1 get /vg&cbyte exch def
     dup length 2 sub 2 exch getinterval true}
    {pop false} ifelse
} def

% This routine shows a single unicode character given the font and
% character codes.
% <font code> <char code> unicharshow --
/unicharshow {
  2 string
  dup 0 5 -1 roll put
  dup 1 4 -1 roll put
  internalshow
} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and showing the string for recshow.
% <string> internalshow --
/internalshow {show} def

% This is an internal routine to alternate between determining the
% bounding box for stringsize and stroking various ornaments.
% <string> internalstroke --
/internalstroke {S} def

% Sets up internalshow to use the null device to determine string size.
% -- nullinternalshow --
/nullinternalshow {/internalshow {false charpath flattenpath
                                  pathbbox updatebbox} def} def

% Sets up internalstroke to use the null device to determine string size.
% -- nullinternalstroke --
/nullinternalstroke {
 /internalstroke {flattenpath pathbbox updatebbox} def} def

% This routine tests to see if the character code matches the first
% character of a string.
% <char code> <string> testchar <char code> <true or false>
/testchar {exch dup 3 -1 roll 0 get eq} def

% Raise the text baseline for superscripts.
% -- raise --
/raise {
  0 fontsize 2 div rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-raise the text baseline for superscripts.
% -- unraise --
/unraise {
  /fontsize fontsize 1.5 mul def
  0 fontsize 2 div neg rmoveto
} def

% Lower the text baseline for subscripts.
% -- lower --
/lower {
  0 fontsize 3 div neg rmoveto
  /fontsize fontsize 2 mul 3 div def
  currentfont /FontName get fontsize sf
} def

% Un-lower the text baseline for subscripts.
% -- unlower --
/unlower {
  /fontsize fontsize 1.5 mul def
  0 fontsize 3 div rmoveto
} def

% Compare the top two elements on the stack and leave only the
% larger one.
/maxval {2 copy gt {pop} {exch pop} ifelse} def

% Tokenize a string.  Do not use the usual PostScript token because
% parentheses will not be interpreted correctly because of rescanning
% of the string.
/vg&token {/vg&string exch def /vg&index -1 def /vg&level 0 def
0 2 vg&string length 2 sub {
  dup dup 1 add exch vg&string exch get 8 bitshift vg&string 3 -1 roll get or
  dup 16#f0fe eq {pop 1}{16#f0ff eq {-1}{0} ifelse} ifelse
  /vg&level exch vg&level add def
  vg&level 0 eq {/vg&index exch def exit} if pop
} for
vg&index 0 ge {
  vg&string vg&index 2 add dup vg&string length exch sub getinterval
  vg&index 2 gt {vg&string 2 vg&index 2 sub getinterval}{()} ifelse
  true}
{false} ifelse
} bind def

% Recursively show an unicode string.
% <string> recshow --
/recshow {
  popfirst
  {
    % Test to see if this is a string attribute.
    vg&fbyte 16#f0 and 16#e0 eq
    {
      q

      % Font style.
      currentfont dup /FontStyleBits known {/FontStyleBits get}{pop 0} ifelse
      vg&cbyte or vg&fontstyles exch get fontsize exch exec

      vg&token pop recshow currentpoint Q m recshow
    }
    {
      vg&fbyte 16#F8 and 16#F0 eq {

        % Superscript and/or subscript.
        vg&cbyte 16#00 eq {
          vg&token pop exch vg&token pop 3 -1 roll
          q raise recshow unraise currentpoint pop Q exch
          q lower recshow unlower currentpoint pop Q
          maxval currentpoint exch pop m recshow } if

        % Strikeout.
        vg&cbyte 16#01 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll fontsize 3 div add moveto
          fontsize 3 div add lineto internalstroke Q
          recshow} if

        % Underline.
        vg&cbyte 16#02 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dashed underline.
        vg&cbyte 16#03 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J [ vg&uthick 5 mul vg&uthick 2 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Dotted underline.
        vg&cbyte 16#04 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 1 J [ 0 vg&uthick 3 mul] 0 d
          vg&underline vg&uthick w
          currentpoint 4 -2 roll vg&uoffset add moveto
          vg&uoffset add lineto internalstroke Q
          recshow} if

        % Thick underline.
        vg&cbyte 16#05 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Gray thick underline.
        vg&cbyte 16#06 eq {
          vg&token pop currentpoint 3 -1 roll recshow
          q 0 J vg&underline vg&uthick 2 mul w 0.5 setgray
          currentpoint 4 -2 roll vg&uoffset vg&uthick 2 div sub add moveto
          vg&uoffset vg&uthick 2 div sub add lineto internalstroke Q
          recshow} if

        % Overbar.
        vg&cbyte 16#07 eq {
          vg&token pop dup stringsize relative 4 1 roll pop pop exch
          3 -1 roll recshow
          q 0 J vg&underline vg&uthick w
          vg&uoffset neg add dup currentpoint pop exch m l internalstroke Q
          recshow} if
      }
      {
        vg&fbyte vg&cbyte unicharshow recshow
      } ifelse
    } ifelse
  } if
} def

% Get the underline position and thickness from the current font.
/vg&underline {

currentfont dup /FontType get 0 eq {/FDepVector get 0 get} if
dup dup /FontInfo known {
  /FontInfo get dup
  dup /UnderlinePosition known {
    /UnderlinePosition get /vg&uoffset exch def
  }
  {
    pop /vg&uoffset 0 def
  } ifelse
  dup /UnderlineThickness known {
    /UnderlineThickness get /vg&uthick exch def
  }
  {
    pop /vg&uthick 0 def
  } ifelse
}
{
  pop /vg&uoffset 0 def /vg&uthick 0 def
} ifelse
/FontMatrix get
currentfont dup /FontType get 0 eq
{/FontMatrix get matrix concatmatrix}{pop} ifelse
dup 0 vg&uoffset 3 -1 roll transform /vg&uoffset exch def pop
0 vg&uthick 3 -1 roll transform /vg&uthick exch def pop
} def

% Make a frame with the coordinates on the stack.
% <llx> <lly> <urx> <ury> frame --
/frame {4 copy m 3 1 roll exch l 4 -2 roll l l h} def

% Resets the accumulated bounding box to a degenerate box at the
% current point.
% -- resetbbox --
/resetbbox {
  currentpoint 2 copy
  /bbury exch def
  /bburx exch def
  /bblly exch def
  /bbllx exch def
} def

% Update the accumulated bounding box.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/updatebbox {
  dup bbury gt {/bbury exch def} {pop} ifelse
  dup bburx gt {/bburx exch def} {pop} ifelse
  dup bblly lt {/bblly exch def} {pop} ifelse
  dup bbllx lt {/bbllx exch def} {pop} ifelse
} def

% Set the bounding box to the values on the stack.
% <llx'> <lly'> <urx'> <ury'> updatebbox --
/restorebbox {
  /bbury exch def /bburx exch def /bblly exch def /bbllx exch def
} def

% Push the accumulated bounding box onto the stack.
% -- pushbbox <llx> <lly> <urx> <ury>
/pushbbox {bbllx bblly bburx bbury} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> inflate <llx> <lly> <urx> <ury>
/inflate {
  2 {fontsize 0.2 mul add 4 1 roll} repeat
  2 {fontsize 0.2 mul sub 4 1 roll} repeat
} def

% Make the relative bounding box relative to the currentpoint.
% <llx'> <lly'> <urx'> <ury'> relative <llx> <lly> <urx> <ury>
/relative {
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
  currentpoint 3 -1 roll add 3 1 roll add exch 4 2 roll
} def

% Returns the size of a string appropriate for recshow.
% <string> stringsize <llx> <lly> <urx> <ury>
/stringsize {
  pushbbox /internalshow load /internalstroke load 7 -1 roll
  q
  nulldevice 0 0 m
  nullinternalshow nullinternalstroke
  resetbbox
  recshow
  /internalstroke exch def /internalshow exch def
  pushbbox 8 -4 roll restorebbox
  Q
} def

% Calculate values for string positioning.
/calcval {4 copy
  3 -1 roll sub /widy exch def sub neg /widx exch def
  pop pop /dy exch def /dx exch def} def

% Utilities to position a string.
% First letter (U=upper, C=center, B=baseline, L=lower)
% Second letter (L=left, C=center, R=right)
/align [
{calcval dx neg widy dy add neg rmoveto} % UL
{calcval dx neg widy 2 div dy add neg rmoveto} % CL
{calcval dx neg 0 rmoveto} % BL
{calcval dx neg dy neg rmoveto} % LL
{calcval widx dx add neg widy dy add neg rmoveto} % UR
{calcval widx dx add neg widy 2 div dy add neg rmoveto} % CR
{calcval widx dx add neg 0 rmoveto} % BR
{calcval widx dx add neg dy neg rmoveto} % LR
{calcval widx 2 div dx add neg widy dy add neg rmoveto} % UC
{calcval widx 2 div dx add neg widy 2 div dy add neg rmoveto} % CC
{calcval widx 2 div dx add neg 0 rmoveto} % BC
{calcval widx 2 div dx add neg dy neg rmoveto} % LC
] def

/vg&str {m q 1 -1 scale dup stringsize 4 copy align 11 -1 roll get exec
         q inflate relative frame exch exec Q recshow Q} def

end /procDict exch def
%%EndProlog

%%BeginSetup
save
procDict begin
printColorMap begin
595 791 setpagesize
20 20 20 20 setmargins
0 0 setorigin
204 166 setsize
naturalsize
portrait
imagescale
cliptobounds
setbasematrix
/Helvetica 10 sf
defaultGraphicsState
%%EndSetup

0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
1.00000 1.00000 1.00000 RG
newpath
0.00000 0.00000 m
204.000 0.00000 l
204.000 166.000 l
0.00000 166.000 l
0.00000 0.00000 l
h
f
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] concat
0 0 228 190 rc
q
q
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-1.00000 -1.00000 230.000 192.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
0.00000 0.00000 100000 100000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
-2.00000 -2.00000 232.000 194.000 rc
[ 1.00000 0.00000 0.00000 1.00000 0.00000 0.00000 ] concat
[ 1.00000 0.00000 0.00000 1.00000 148.500 148.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.27148 12.0645 m
4.27148 3.47070 l
8.08398 3.47070 l
8.85482 3.47070 9.43815 3.54883 9.83398 3.70508  c
10.2298 3.86133 10.5475 4.13477 10.7871 4.52539  c
11.0267 4.91602 11.1465 5.34570 11.1465 5.81445  c
11.1465 6.42904 10.9486 6.94466 10.5527 7.36133  c
10.1569 7.77799 9.54753 8.04362 8.72461 8.15820  c
9.02669 8.30404 9.25586 8.44466 9.41211 8.58008  c
9.74544 8.88216 10.0579 9.26237 10.3496 9.72070  c
11.8496 12.0645 l
10.4121 12.0645 l
9.28711 10.2832 l
8.95378 9.76237 8.68034 9.36654 8.46680 9.09570  c
8.25326 8.82487 8.06055 8.63477 7.88867 8.52539  c
7.71680 8.41602 7.54232 8.33529 7.36523 8.28320  c
7.24023 8.26237 7.03190 8.25195 6.74023 8.25195  c
5.41211 8.25195 l
5.41211 12.0645 l
4.27148 12.0645 l
h
5.41211 7.26758 m
7.86523 7.26758 l
8.37565 7.26758 8.77930 7.21289 9.07617 7.10352  c
9.37305 6.99414 9.59701 6.82227 9.74805 6.58789  c
9.89909 6.35352 9.97461 6.09570 9.97461 5.81445  c
9.97461 5.40820 9.82617 5.07487 9.52930 4.81445  c
9.23242 4.55404 8.76628 4.42383 8.13086 4.42383  c
5.41211 4.42383 l
5.41211 7.26758 l
h
17.0469 10.0645 m
18.1406 10.1895 l
17.9740 10.8249 17.6562 11.3197 17.1875 11.6738  c
16.7188 12.0280 16.1250 12.2051 15.4062 12.2051  c
14.5000 12.2051 13.7786 11.9238 13.2422 11.3613  c
12.7057 10.7988 12.4375 10.0124 12.4375 9.00195  c
12.4375 7.96029 12.7083 7.15039 13.2500 6.57227  c
13.7917 5.99414 14.4896 5.70508 15.3438 5.70508  c
16.1771 5.70508 16.8568 5.98633 17.3828 6.54883  c
17.9089 7.11133 18.1719 7.90820 18.1719 8.93945  c
18.1719 9.00195 18.1719 9.09570 18.1719 9.22070  c
13.5312 9.22070 l
13.5729 9.90820 13.7656 10.4316 14.1094 10.7910  c
14.4531 11.1504 14.8854 11.3301 15.4062 11.3301  c
15.7917 11.3301 16.1224 11.2285 16.3984 11.0254  c
16.6745 10.8223 16.8906 10.5020 17.0469 10.0645  c
h
13.5938 8.36133 m
17.0625 8.36133 l
17.0208 7.83008 16.8906 7.43424 16.6719 7.17383  c
16.3281 6.76758 15.8906 6.56445 15.3594 6.56445  c
14.8698 6.56445 14.4609 6.72591 14.1328 7.04883  c
13.8047 7.37174 13.6250 7.80924 13.5938 8.36133  c
h
19.4707 12.0645 m
19.4707 5.84570 l
20.4082 5.84570 l
20.4082 6.72070 l
20.8665 6.04362 21.5280 5.70508 22.3926 5.70508  c
22.7676 5.70508 23.1139 5.77279 23.4316 5.90820  c
23.7493 6.04362 23.9863 6.22070 24.1426 6.43945  c
24.2988 6.65820 24.4082 6.91341 24.4707 7.20508  c
24.5020 7.40299 24.5176 7.74674 24.5176 8.23633  c
24.5176 12.0645 l
23.4707 12.0645 l
23.4707 8.28320 l
23.4707 7.84570 23.4290 7.52279 23.3457 7.31445  c
23.2624 7.10612 23.1165 6.93685 22.9082 6.80664  c
22.6999 6.67643 22.4551 6.61133 22.1738 6.61133  c
21.7259 6.61133 21.3379 6.75456 21.0098 7.04102  c
20.6816 7.32747 20.5176 7.86654 20.5176 8.65820  c
20.5176 12.0645 l
19.4707 12.0645 l
h
28.4414 11.1270 m
28.5977 12.0488 l
28.2956 12.1113 28.0299 12.1426 27.8008 12.1426  c
27.4154 12.1426 27.1185 12.0827 26.9102 11.9629  c
26.7018 11.8431 26.5534 11.6842 26.4648 11.4863  c
26.3763 11.2884 26.3320 10.8717 26.3320 10.2363  c
26.3320 6.65820 l
25.5664 6.65820 l
25.5664 5.84570 l
26.3320 5.84570 l
26.3320 4.29883 l
27.3789 3.67383 l
27.3789 5.84570 l
28.4414 5.84570 l
28.4414 6.65820 l
27.3789 6.65820 l
27.3789 10.2988 l
27.3789 10.6009 27.3971 10.7936 27.4336 10.8770  c
27.4701 10.9603 27.5299 11.0280 27.6133 11.0801  c
27.6966 11.1322 27.8164 11.1582 27.9727 11.1582  c
28.0977 11.1582 28.2539 11.1478 28.4414 11.1270  c
h
33.7285 10.0645 m
34.8223 10.1895 l
34.6556 10.8249 34.3379 11.3197 33.8691 11.6738  c
33.4004 12.0280 32.8066 12.2051 32.0879 12.2051  c
31.1816 12.2051 30.4603 11.9238 29.9238 11.3613  c
29.3874 10.7988 29.1191 10.0124 29.1191 9.00195  c
29.1191 7.96029 29.3900 7.15039 29.9316 6.57227  c
30.4733 5.99414 31.1712 5.70508 32.0254 5.70508  c
32.8587 5.70508 33.5384 5.98633 34.0645 6.54883  c
34.5905 7.11133 34.8535 7.90820 34.8535 8.93945  c
34.8535 9.00195 34.8535 9.09570 34.8535 9.22070  c
30.2129 9.22070 l
30.2546 9.90820 30.4473 10.4316 30.7910 10.7910  c
31.1348 11.1504 31.5671 11.3301 32.0879 11.3301  c
32.4733 11.3301 32.8040 11.2285 33.0801 11.0254  c
33.3561 10.8223 33.5723 10.5020 33.7285 10.0645  c
h
30.2754 8.36133 m
33.7441 8.36133 l
33.7025 7.83008 33.5723 7.43424 33.3535 7.17383  c
33.0098 6.76758 32.5723 6.56445 32.0410 6.56445  c
31.5514 6.56445 31.1426 6.72591 30.8145 7.04883  c
30.4863 7.37174 30.3066 7.80924 30.2754 8.36133  c
h
36.1367 12.0645 m
36.1367 5.84570 l
37.0898 5.84570 l
37.0898 6.78320 l
37.3294 6.34570 37.5508 6.05664 37.7539 5.91602  c
37.9570 5.77539 38.1836 5.70508 38.4336 5.70508  c
38.7878 5.70508 39.1471 5.81445 39.5117 6.03320  c
39.1523 7.01758 l
38.8919 6.86133 38.6367 6.78320 38.3867 6.78320  c
38.1471 6.78320 37.9362 6.85352 37.7539 6.99414  c
37.5716 7.13477 37.4440 7.33008 37.3711 7.58008  c
37.2461 7.95508 37.1836 8.36133 37.1836 8.79883  c
37.1836 12.0645 l
36.1367 12.0645 l
h
40.2734 12.0645 m
40.2734 3.47070 l
43.2422 3.47070 l
43.9089 3.47070 44.4193 3.51237 44.7734 3.59570  c
45.2630 3.71029 45.6797 3.91341 46.0234 4.20508  c
46.4818 4.59049 46.8229 5.08268 47.0469 5.68164  c
47.2708 6.28060 47.3828 6.96029 47.3828 7.72070  c
47.3828 8.37695 47.3073 8.95508 47.1562 9.45508  c
47.0052 9.95508 46.8099 10.3717 46.5703 10.7051  c
46.3307 11.0384 46.0677 11.2988 45.7812 11.4863  c
45.4948 11.6738 45.1536 11.8171 44.7578 11.9160  c
44.3620 12.0150 43.9036 12.0645 43.3828 12.0645  c
40.2734 12.0645 l
h
41.4141 11.0488 m
43.2422 11.0488 l
43.8151 11.0488 44.2630 10.9967 44.5859 10.8926  c
44.9089 10.7884 45.1641 10.6374 45.3516 10.4395  c
45.6224 10.1790 45.8333 9.81966 45.9844 9.36133  c
46.1354 8.90299 46.2109 8.35091 46.2109 7.70508  c
46.2109 6.80924 46.0625 6.11914 45.7656 5.63477  c
45.4688 5.15039 45.1120 4.82487 44.6953 4.65820  c
44.3828 4.54362 43.8932 4.48633 43.2266 4.48633  c
41.4141 4.48633 l
41.4141 11.0488 l
h
53.0645 10.0645 m
54.1582 10.1895 l
53.9915 10.8249 53.6738 11.3197 53.2051 11.6738  c
52.7363 12.0280 52.1426 12.2051 51.4238 12.2051  c
50.5176 12.2051 49.7962 11.9238 49.2598 11.3613  c
48.7233 10.7988 48.4551 10.0124 48.4551 9.00195  c
48.4551 7.96029 48.7259 7.15039 49.2676 6.57227  c
49.8092 5.99414 50.5072 5.70508 51.3613 5.70508  c
52.1947 5.70508 52.8743 5.98633 53.4004 6.54883  c
53.9264 7.11133 54.1895 7.90820 54.1895 8.93945  c
54.1895 9.00195 54.1895 9.09570 54.1895 9.22070  c
49.5488 9.22070 l
49.5905 9.90820 49.7832 10.4316 50.1270 10.7910  c
50.4707 11.1504 50.9030 11.3301 51.4238 11.3301  c
51.8092 11.3301 52.1400 11.2285 52.4160 11.0254  c
52.6921 10.8223 52.9082 10.5020 53.0645 10.0645  c
h
49.6113 8.36133 m
53.0801 8.36133 l
53.0384 7.83008 52.9082 7.43424 52.6895 7.17383  c
52.3457 6.76758 51.9082 6.56445 51.3770 6.56445  c
50.8874 6.56445 50.4785 6.72591 50.1504 7.04883  c
49.8223 7.37174 49.6426 7.80924 49.6113 8.36133  c
h
57.7852 11.1270 m
57.9414 12.0488 l
57.6393 12.1113 57.3737 12.1426 57.1445 12.1426  c
56.7591 12.1426 56.4622 12.0827 56.2539 11.9629  c
56.0456 11.8431 55.8971 11.6842 55.8086 11.4863  c
55.7201 11.2884 55.6758 10.8717 55.6758 10.2363  c
55.6758 6.65820 l
54.9102 6.65820 l
54.9102 5.84570 l
55.6758 5.84570 l
55.6758 4.29883 l
56.7227 3.67383 l
56.7227 5.84570 l
57.7852 5.84570 l
57.7852 6.65820 l
56.7227 6.65820 l
56.7227 10.2988 l
56.7227 10.6009 56.7409 10.7936 56.7773 10.8770  c
56.8138 10.9603 56.8737 11.0280 56.9570 11.0801  c
57.0404 11.1322 57.1602 11.1582 57.3164 11.1582  c
57.4414 11.1582 57.5977 11.1478 57.7852 11.1270  c
h
62.8848 11.2988 m
62.4889 11.6322 62.1113 11.8665 61.7520 12.0020  c
61.3926 12.1374 61.0046 12.2051 60.5879 12.2051  c
59.9004 12.2051 59.3743 12.0384 59.0098 11.7051  c
58.6452 11.3717 58.4629 10.9447 58.4629 10.4238  c
58.4629 10.1217 58.5306 9.84310 58.6660 9.58789  c
58.8014 9.33268 58.9837 9.12956 59.2129 8.97852  c
59.4421 8.82747 59.6973 8.71549 59.9785 8.64258  c
60.1764 8.58008 60.4889 8.52279 60.9160 8.47070  c
61.7598 8.37695 62.3848 8.25716 62.7910 8.11133  c
62.7910 7.96549 62.7910 7.87695 62.7910 7.84570  c
62.7910 7.40820 62.6921 7.10091 62.4941 6.92383  c
62.2233 6.69466 61.8223 6.58008 61.2910 6.58008  c
60.8014 6.58008 60.4368 6.66602 60.1973 6.83789  c
59.9577 7.00977 59.7806 7.31445 59.6660 7.75195  c
58.6348 7.61133 l
58.7285 7.17383 58.8848 6.81966 59.1035 6.54883  c
59.3223 6.27799 59.6348 6.06966 60.0410 5.92383  c
60.4473 5.77799 60.9160 5.70508 61.4473 5.70508  c
61.9785 5.70508 62.4108 5.76758 62.7441 5.89258  c
63.0775 6.01758 63.3223 6.17383 63.4785 6.36133  c
63.6348 6.54883 63.7441 6.78841 63.8066 7.08008  c
63.8379 7.25716 63.8535 7.58008 63.8535 8.04883  c
63.8535 9.45508 l
63.8535 10.4342 63.8770 11.0540 63.9238 11.3145  c
63.9707 11.5749 64.0618 11.8249 64.1973 12.0645  c
63.0879 12.0645 l
62.9837 11.8457 62.9160 11.5905 62.8848 11.2988  c
h
62.7910 8.93945 m
62.4056 9.09570 61.8327 9.23112 61.0723 9.34570  c
60.6348 9.40820 60.3275 9.47852 60.1504 9.55664  c
59.9733 9.63477 59.8353 9.74674 59.7363 9.89258  c
59.6374 10.0384 59.5879 10.2051 59.5879 10.3926  c
59.5879 10.6738 59.6947 10.9082 59.9082 11.0957  c
60.1217 11.2832 60.4316 11.3770 60.8379 11.3770  c
61.2441 11.3770 61.6061 11.2884 61.9238 11.1113  c
62.2415 10.9342 62.4733 10.6895 62.6191 10.3770  c
62.7337 10.1374 62.7910 9.78841 62.7910 9.33008  c
62.7910 8.93945 l
h
65.4961 4.68945 m
65.4961 3.47070 l
66.5586 3.47070 l
66.5586 4.68945 l
65.4961 4.68945 l
h
65.4961 12.0645 m
65.4961 5.84570 l
66.5586 5.84570 l
66.5586 12.0645 l
65.4961 12.0645 l
h
68.1309 12.0645 m
68.1309 3.47070 l
69.1934 3.47070 l
69.1934 12.0645 l
68.1309 12.0645 l
h
70.4062 10.2051 m
71.4375 10.0488 l
71.5000 10.4655 71.6641 10.7832 71.9297 11.0020  c
72.1953 11.2207 72.5729 11.3301 73.0625 11.3301  c
73.5417 11.3301 73.8984 11.2337 74.1328 11.0410  c
74.3672 10.8483 74.4844 10.6165 74.4844 10.3457  c
74.4844 10.1061 74.3802 9.91862 74.1719 9.78320  c
74.0260 9.68945 73.6667 9.56966 73.0938 9.42383  c
72.3229 9.22591 71.7891 9.05664 71.4922 8.91602  c
71.1953 8.77539 70.9688 8.58008 70.8125 8.33008  c
70.6562 8.08008 70.5781 7.79883 70.5781 7.48633  c
70.5781 7.21549 70.6406 6.96029 70.7656 6.72070  c
70.8906 6.48112 71.0625 6.28320 71.2812 6.12695  c
71.4479 6.01237 71.6719 5.91341 71.9531 5.83008  c
72.2344 5.74674 72.5417 5.70508 72.8750 5.70508  c
73.3542 5.70508 73.7786 5.77539 74.1484 5.91602  c
74.5182 6.05664 74.7917 6.24674 74.9688 6.48633  c
75.1458 6.72591 75.2656 7.04362 75.3281 7.43945  c
74.2969 7.58008 l
74.2552 7.26758 74.1224 7.02018 73.8984 6.83789  c
73.6745 6.65560 73.3542 6.56445 72.9375 6.56445  c
72.4583 6.56445 72.1146 6.64518 71.9062 6.80664  c
71.6979 6.96810 71.5938 7.15820 71.5938 7.37695  c
71.5938 7.51237 71.6354 7.63216 71.7188 7.73633  c
71.8125 7.85091 71.9479 7.94466 72.1250 8.01758  c
72.2292 8.05924 72.5417 8.14779 73.0625 8.28320  c
73.8125 8.49154 74.3333 8.65820 74.6250 8.78320  c
74.9167 8.90820 75.1458 9.09049 75.3125 9.33008  c
75.4792 9.56966 75.5625 9.87174 75.5625 10.2363  c
75.5625 10.5905 75.4609 10.9212 75.2578 11.2285  c
75.0547 11.5358 74.7604 11.7754 74.3750 11.9473  c
73.9896 12.1191 73.5521 12.2051 73.0625 12.2051  c
72.2500 12.2051 71.6328 12.0358 71.2109 11.6973  c
70.7891 11.3587 70.5208 10.8613 70.4062 10.2051  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 162.000 164.701 ] concat
.250980 .250980 .250980 RG
newpath
2.34375 12.1631 m
1.85417 11.5485 1.44271 10.8298 1.10938 10.0068  c
.776042 9.18392 .609375 8.33496 .609375 7.45996  c
.609375 6.68913 .734375 5.94954 .984375 5.24121  c
1.27604 4.40788 1.72917 3.58496 2.34375 2.77246  c
2.96875 2.77246 l
2.57292 3.44954 2.31250 3.93392 2.18750 4.22559  c
1.98958 4.67350 1.83333 5.14225 1.71875 5.63184  c
1.58333 6.23600 1.51562 6.84538 1.51562 7.45996  c
1.51562 9.03288 2.00000 10.6006 2.96875 12.1631  c
2.34375 12.1631 l
h
4.20508 10.0537 m
4.20508 5.55371 l
3.42383 5.55371 l
3.42383 4.86621 l
4.20508 4.86621 l
4.20508 4.31934 l
4.20508 3.96517 4.23633 3.70475 4.29883 3.53809  c
4.38216 3.30892 4.53060 3.12402 4.74414 2.98340  c
4.95768 2.84277 5.25716 2.77246 5.64258 2.77246  c
5.88216 2.77246 6.15299 2.80371 6.45508 2.86621  c
6.33008 3.63184 l
6.14258 3.60059 5.96549 3.58496 5.79883 3.58496  c
5.53841 3.58496 5.35352 3.63965 5.24414 3.74902  c
5.13477 3.85840 5.08008 4.06934 5.08008 4.38184  c
5.08008 4.86621 l
6.08008 4.86621 l
6.08008 5.55371 l
5.08008 5.55371 l
5.08008 10.0537 l
4.20508 10.0537 l
h
6.76465 10.0537 m
6.76465 4.86621 l
7.54590 4.86621 l
7.54590 5.64746 l
7.75423 5.28288 7.94173 5.04329 8.10840 4.92871  c
8.27507 4.81413 8.46257 4.75684 8.67090 4.75684  c
8.97298 4.75684 9.27507 4.85059 9.57715 5.03809  c
9.28027 5.85059 l
9.06152 5.72559 8.84277 5.66309 8.62402 5.66309  c
8.43652 5.66309 8.26465 5.72038 8.10840 5.83496  c
7.95215 5.94954 7.84277 6.11100 7.78027 6.31934  c
7.68652 6.63184 7.63965 6.97038 7.63965 7.33496  c
7.63965 10.0537 l
6.76465 10.0537 l
h
9.76660 7.45996 m
9.76660 6.50163 10.0374 5.78809 10.5791 5.31934  c
11.0166 4.94434 11.5583 4.75684 12.2041 4.75684  c
12.9124 4.75684 13.4932 4.98861 13.9463 5.45215  c
14.3994 5.91569 14.6260 6.55892 14.6260 7.38184  c
14.6260 8.04850 14.5270 8.57454 14.3291 8.95996  c
14.1312 9.34538 13.8395 9.64486 13.4541 9.85840  c
13.0687 10.0719 12.6520 10.1787 12.2041 10.1787  c
11.4749 10.1787 10.8864 9.94434 10.4385 9.47559  c
9.99056 9.00684 9.76660 8.33496 9.76660 7.45996  c
h
10.6729 7.45996 m
10.6729 8.12663 10.8187 8.62402 11.1104 8.95215  c
11.4020 9.28027 11.7666 9.44434 12.2041 9.44434  c
12.6416 9.44434 13.0036 9.27767 13.2900 8.94434  c
13.5765 8.61100 13.7197 8.10579 13.7197 7.42871  c
13.7197 6.79329 13.5739 6.30892 13.2822 5.97559  c
12.9906 5.64225 12.6312 5.47559 12.2041 5.47559  c
11.7666 5.47559 11.4020 5.63965 11.1104 5.96777  c
10.8187 6.29590 10.6729 6.79329 10.6729 7.45996  c
h
15.6562 10.0537 m
15.6562 4.86621 l
16.4531 4.86621 l
16.4531 5.60059 l
16.6094 5.34017 16.8229 5.13444 17.0938 4.98340  c
17.3646 4.83236 17.6719 4.75684 18.0156 4.75684  c
18.4010 4.75684 18.7161 4.83496 18.9609 4.99121  c
19.2057 5.14746 19.3802 5.37142 19.4844 5.66309  c
19.8906 5.05892 20.4219 4.75684 21.0781 4.75684  c
21.5990 4.75684 21.9974 4.89746 22.2734 5.17871  c
22.5495 5.45996 22.6875 5.89746 22.6875 6.49121  c
22.6875 10.0537 l
21.8125 10.0537 l
21.8125 6.78809 l
21.8125 6.43392 21.7839 6.17871 21.7266 6.02246  c
21.6693 5.86621 21.5651 5.74121 21.4141 5.64746  c
21.2630 5.55371 21.0885 5.50684 20.8906 5.50684  c
20.5260 5.50684 20.2240 5.62923 19.9844 5.87402  c
19.7448 6.11882 19.6250 6.50684 19.6250 7.03809  c
19.6250 10.0537 l
18.7344 10.0537 l
18.7344 6.67871 l
18.7344 6.29329 18.6641 6.00163 18.5234 5.80371  c
18.3828 5.60579 18.1510 5.50684 17.8281 5.50684  c
17.5781 5.50684 17.3490 5.57194 17.1406 5.70215  c
16.9323 5.83236 16.7786 6.02246 16.6797 6.27246  c
16.5807 6.52246 16.5312 6.88704 16.5312 7.36621  c
16.5312 10.0537 l
15.6562 10.0537 l
h
27.5771 10.0537 m
26.7646 10.0537 l
26.7646 2.89746 l
27.6396 2.89746 l
27.6396 5.44434 l
28.0146 4.98600 28.4886 4.75684 29.0615 4.75684  c
29.3844 4.75684 29.6865 4.81934 29.9678 4.94434  c
30.2490 5.06934 30.4834 5.24902 30.6709 5.48340  c
30.8584 5.71777 31.0042 5.99902 31.1084 6.32715  c
31.2126 6.65527 31.2646 7.00684 31.2646 7.38184  c
31.2646 8.26725 31.0433 8.95475 30.6006 9.44434  c
30.1579 9.93392 29.6292 10.1787 29.0146 10.1787  c
28.4105 10.1787 27.9313 9.91829 27.5771 9.39746  c
27.5771 10.0537 l
h
27.5615 7.42871 m
27.5615 8.04329 27.6501 8.49121 27.8271 8.77246  c
28.0980 9.22038 28.4730 9.44434 28.9521 9.44434  c
29.3271 9.44434 29.6553 9.27767 29.9365 8.94434  c
30.2178 8.61100 30.3584 8.11621 30.3584 7.45996  c
30.3584 6.78288 30.2256 6.28288 29.9600 5.95996  c
29.6943 5.63704 29.3688 5.47559 28.9834 5.47559  c
28.5980 5.47559 28.2646 5.64225 27.9834 5.97559  c
27.7021 6.30892 27.5615 6.79329 27.5615 7.42871  c
h
35.7168 9.41309 m
35.3939 9.69434 35.0814 9.89225 34.7793 10.0068  c
34.4772 10.1214 34.1543 10.1787 33.8105 10.1787  c
33.2376 10.1787 32.7975 10.0381 32.4902 9.75684  c
32.1829 9.47559 32.0293 9.11621 32.0293 8.67871  c
32.0293 8.42871 32.0866 8.19954 32.2012 7.99121  c
32.3158 7.78288 32.4668 7.61361 32.6543 7.48340  c
32.8418 7.35319 33.0553 7.25684 33.2949 7.19434  c
33.4616 7.15267 33.7220 7.11100 34.0762 7.06934  c
34.7845 6.98600 35.3053 6.88184 35.6387 6.75684  c
35.6387 6.64225 35.6387 6.56934 35.6387 6.53809  c
35.6387 6.17350 35.5553 5.91829 35.3887 5.77246  c
35.1699 5.57454 34.8366 5.47559 34.3887 5.47559  c
33.9824 5.47559 33.6803 5.54850 33.4824 5.69434  c
33.2845 5.84017 33.1387 6.09538 33.0449 6.45996  c
32.1855 6.35059 l
32.2585 5.97559 32.3861 5.67611 32.5684 5.45215  c
32.7507 5.22819 33.0111 5.05632 33.3496 4.93652  c
33.6882 4.81673 34.0814 4.75684 34.5293 4.75684  c
34.9668 4.75684 35.3236 4.80892 35.5996 4.91309  c
35.8757 5.01725 36.0788 5.14746 36.2090 5.30371  c
36.3392 5.45996 36.4303 5.65788 36.4824 5.89746  c
36.5137 6.04329 36.5293 6.31413 36.5293 6.70996  c
36.5293 7.88184 l
36.5293 8.69434 36.5475 9.20996 36.5840 9.42871  c
36.6204 9.64746 36.6960 9.85579 36.8105 10.0537  c
35.8887 10.0537 l
35.7949 9.86621 35.7376 9.65267 35.7168 9.41309  c
h
35.6387 7.44434 m
35.3158 7.57975 34.8366 7.69434 34.2012 7.78809  c
33.8470 7.84017 33.5944 7.89746 33.4434 7.95996  c
33.2923 8.02246 33.1751 8.11621 33.0918 8.24121  c
33.0085 8.36621 32.9668 8.50684 32.9668 8.66309  c
32.9668 8.89225 33.0553 9.08496 33.2324 9.24121  c
33.4095 9.39746 33.6699 9.47559 34.0137 9.47559  c
34.3574 9.47559 34.6595 9.40267 34.9199 9.25684  c
35.1803 9.11100 35.3730 8.90788 35.4980 8.64746  c
35.5918 8.44954 35.6387 8.15788 35.6387 7.77246  c
35.6387 7.44434 l
h
37.5439 8.50684 m
38.4033 8.36621 l
38.4554 8.72038 38.5934 8.98861 38.8174 9.17090  c
39.0413 9.35319 39.3512 9.44434 39.7471 9.44434  c
40.1533 9.44434 40.4554 9.36361 40.6533 9.20215  c
40.8512 9.04069 40.9502 8.84538 40.9502 8.61621  c
40.9502 8.41829 40.8617 8.26204 40.6846 8.14746  c
40.5596 8.07454 40.2575 7.97559 39.7783 7.85059  c
39.1429 7.69434 38.7002 7.55632 38.4502 7.43652  c
38.2002 7.31673 38.0101 7.15267 37.8799 6.94434  c
37.7497 6.73600 37.6846 6.50163 37.6846 6.24121  c
37.6846 6.01204 37.7367 5.79850 37.8408 5.60059  c
37.9450 5.40267 38.0908 5.24121 38.2783 5.11621  c
38.4137 5.01204 38.5986 4.92611 38.8330 4.85840  c
39.0674 4.79069 39.3200 4.75684 39.5908 4.75684  c
39.9971 4.75684 40.3538 4.81413 40.6611 4.92871  c
40.9684 5.04329 41.1976 5.20215 41.3486 5.40527  c
41.4997 5.60840 41.6012 5.87663 41.6533 6.20996  c
40.7939 6.31934 l
40.7523 6.05892 40.6377 5.85319 40.4502 5.70215  c
40.2627 5.55111 39.9971 5.47559 39.6533 5.47559  c
39.2575 5.47559 38.9710 5.54069 38.7939 5.67090  c
38.6169 5.80111 38.5283 5.95996 38.5283 6.14746  c
38.5283 6.26204 38.5648 6.36100 38.6377 6.44434  c
38.7106 6.53809 38.8252 6.61621 38.9814 6.67871  c
39.0648 6.70996 39.3252 6.78809 39.7627 6.91309  c
40.3773 7.07975 40.8070 7.21517 41.0518 7.31934  c
41.2965 7.42350 41.4893 7.57715 41.6299 7.78027  c
41.7705 7.98340 41.8408 8.23079 41.8408 8.52246  c
41.8408 8.82454 41.7575 9.10319 41.5908 9.35840  c
41.4242 9.61361 41.1794 9.81413 40.8564 9.95996  c
40.5335 10.1058 40.1689 10.1787 39.7627 10.1787  c
39.0856 10.1787 38.5700 10.0381 38.2158 9.75684  c
37.8617 9.47559 37.6377 9.05892 37.5439 8.50684  c
h
46.4346 8.38184 m
47.3564 8.49121 l
47.2106 9.02246 46.9424 9.43652 46.5518 9.73340  c
46.1611 10.0303 45.6689 10.1787 45.0752 10.1787  c
44.3148 10.1787 43.7106 9.94434 43.2627 9.47559  c
42.8148 9.00684 42.5908 8.35059 42.5908 7.50684  c
42.5908 6.63184 42.8174 5.95475 43.2705 5.47559  c
43.7236 4.99642 44.3044 4.75684 45.0127 4.75684  c
45.7106 4.75684 46.2783 4.99121 46.7158 5.45996  c
47.1533 5.92871 47.3721 6.59017 47.3721 7.44434  c
47.3721 7.49642 47.3721 7.57454 47.3721 7.67871  c
43.5127 7.67871 l
43.5439 8.25163 43.7028 8.68913 43.9893 8.99121  c
44.2757 9.29329 44.6377 9.44434 45.0752 9.44434  c
45.3981 9.44434 45.6742 9.36100 45.9033 9.19434  c
46.1325 9.02767 46.3096 8.75684 46.4346 8.38184  c
h
43.5596 6.95996 m
46.4502 6.95996 l
46.4085 6.52246 46.2992 6.19434 46.1221 5.97559  c
45.8408 5.64225 45.4762 5.47559 45.0283 5.47559  c
44.6221 5.47559 44.2835 5.61100 44.0127 5.88184  c
43.7419 6.15267 43.5908 6.51204 43.5596 6.95996  c
h
49.0273 12.1631 m
48.4023 12.1631 l
49.3711 10.6006 49.8555 9.03288 49.8555 7.45996  c
49.8555 6.85579 49.7878 6.25163 49.6523 5.64746  c
49.5378 5.15788 49.3815 4.68913 49.1836 4.24121  c
49.0586 3.94954 48.7982 3.45996 48.4023 2.77246  c
49.0273 2.77246 l
49.6419 3.58496 50.0951 4.40788 50.3867 5.24121  c
50.6367 5.94954 50.7617 6.68913 50.7617 7.45996  c
50.7617 8.33496 50.5924 9.18392 50.2539 10.0068  c
49.9154 10.8298 49.5065 11.5485 49.0273 12.1631  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
200.000 132.000 m
200.000 138.627 194.627 144.000 188.000 144.000  c
181.373 144.000 176.000 138.627 176.000 132.000  c
176.000 125.373 181.373 120.000 188.000 120.000  c
194.627 120.000 200.000 125.373 200.000 132.000  c
h
f
0 J
2 j
0.00000 0.00000 0.00000 RG
newpath
200.000 132.000 m
200.000 138.627 194.627 144.000 188.000 144.000  c
181.373 144.000 176.000 138.627 176.000 132.000  c
176.000 125.373 181.373 120.000 188.000 120.000  c
194.627 120.000 200.000 125.373 200.000 132.000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
[ 1.00000 0.00000 0.00000 1.00000 109.500 60.0000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.27148 12.0645 m
4.27148 3.47070 l
8.08398 3.47070 l
8.85482 3.47070 9.43815 3.54883 9.83398 3.70508  c
10.2298 3.86133 10.5475 4.13477 10.7871 4.52539  c
11.0267 4.91602 11.1465 5.34570 11.1465 5.81445  c
11.1465 6.42904 10.9486 6.94466 10.5527 7.36133  c
10.1569 7.77799 9.54753 8.04362 8.72461 8.15820  c
9.02669 8.30404 9.25586 8.44466 9.41211 8.58008  c
9.74544 8.88216 10.0579 9.26237 10.3496 9.72070  c
11.8496 12.0645 l
10.4121 12.0645 l
9.28711 10.2832 l
8.95378 9.76237 8.68034 9.36654 8.46680 9.09570  c
8.25326 8.82487 8.06055 8.63477 7.88867 8.52539  c
7.71680 8.41602 7.54232 8.33529 7.36523 8.28320  c
7.24023 8.26237 7.03190 8.25195 6.74023 8.25195  c
5.41211 8.25195 l
5.41211 12.0645 l
4.27148 12.0645 l
h
5.41211 7.26758 m
7.86523 7.26758 l
8.37565 7.26758 8.77930 7.21289 9.07617 7.10352  c
9.37305 6.99414 9.59701 6.82227 9.74805 6.58789  c
9.89909 6.35352 9.97461 6.09570 9.97461 5.81445  c
9.97461 5.40820 9.82617 5.07487 9.52930 4.81445  c
9.23242 4.55404 8.76628 4.42383 8.13086 4.42383  c
5.41211 4.42383 l
5.41211 7.26758 l
h
17.0469 10.0645 m
18.1406 10.1895 l
17.9740 10.8249 17.6562 11.3197 17.1875 11.6738  c
16.7188 12.0280 16.1250 12.2051 15.4062 12.2051  c
14.5000 12.2051 13.7786 11.9238 13.2422 11.3613  c
12.7057 10.7988 12.4375 10.0124 12.4375 9.00195  c
12.4375 7.96029 12.7083 7.15039 13.2500 6.57227  c
13.7917 5.99414 14.4896 5.70508 15.3438 5.70508  c
16.1771 5.70508 16.8568 5.98633 17.3828 6.54883  c
17.9089 7.11133 18.1719 7.90820 18.1719 8.93945  c
18.1719 9.00195 18.1719 9.09570 18.1719 9.22070  c
13.5312 9.22070 l
13.5729 9.90820 13.7656 10.4316 14.1094 10.7910  c
14.4531 11.1504 14.8854 11.3301 15.4062 11.3301  c
15.7917 11.3301 16.1224 11.2285 16.3984 11.0254  c
16.6745 10.8223 16.8906 10.5020 17.0469 10.0645  c
h
13.5938 8.36133 m
17.0625 8.36133 l
17.0208 7.83008 16.8906 7.43424 16.6719 7.17383  c
16.3281 6.76758 15.8906 6.56445 15.3594 6.56445  c
14.8698 6.56445 14.4609 6.72591 14.1328 7.04883  c
13.8047 7.37174 13.6250 7.80924 13.5938 8.36133  c
h
19.4707 12.0645 m
19.4707 5.84570 l
20.4082 5.84570 l
20.4082 6.72070 l
20.8665 6.04362 21.5280 5.70508 22.3926 5.70508  c
22.7676 5.70508 23.1139 5.77279 23.4316 5.90820  c
23.7493 6.04362 23.9863 6.22070 24.1426 6.43945  c
24.2988 6.65820 24.4082 6.91341 24.4707 7.20508  c
24.5020 7.40299 24.5176 7.74674 24.5176 8.23633  c
24.5176 12.0645 l
23.4707 12.0645 l
23.4707 8.28320 l
23.4707 7.84570 23.4290 7.52279 23.3457 7.31445  c
23.2624 7.10612 23.1165 6.93685 22.9082 6.80664  c
22.6999 6.67643 22.4551 6.61133 22.1738 6.61133  c
21.7259 6.61133 21.3379 6.75456 21.0098 7.04102  c
20.6816 7.32747 20.5176 7.86654 20.5176 8.65820  c
20.5176 12.0645 l
19.4707 12.0645 l
h
28.4414 11.1270 m
28.5977 12.0488 l
28.2956 12.1113 28.0299 12.1426 27.8008 12.1426  c
27.4154 12.1426 27.1185 12.0827 26.9102 11.9629  c
26.7018 11.8431 26.5534 11.6842 26.4648 11.4863  c
26.3763 11.2884 26.3320 10.8717 26.3320 10.2363  c
26.3320 6.65820 l
25.5664 6.65820 l
25.5664 5.84570 l
26.3320 5.84570 l
26.3320 4.29883 l
27.3789 3.67383 l
27.3789 5.84570 l
28.4414 5.84570 l
28.4414 6.65820 l
27.3789 6.65820 l
27.3789 10.2988 l
27.3789 10.6009 27.3971 10.7936 27.4336 10.8770  c
27.4701 10.9603 27.5299 11.0280 27.6133 11.0801  c
27.6966 11.1322 27.8164 11.1582 27.9727 11.1582  c
28.0977 11.1582 28.2539 11.1478 28.4414 11.1270  c
h
33.5410 11.2988 m
33.1452 11.6322 32.7676 11.8665 32.4082 12.0020  c
32.0488 12.1374 31.6608 12.2051 31.2441 12.2051  c
30.5566 12.2051 30.0306 12.0384 29.6660 11.7051  c
29.3014 11.3717 29.1191 10.9447 29.1191 10.4238  c
29.1191 10.1217 29.1868 9.84310 29.3223 9.58789  c
29.4577 9.33268 29.6400 9.12956 29.8691 8.97852  c
30.0983 8.82747 30.3535 8.71549 30.6348 8.64258  c
30.8327 8.58008 31.1452 8.52279 31.5723 8.47070  c
32.4160 8.37695 33.0410 8.25716 33.4473 8.11133  c
33.4473 7.96549 33.4473 7.87695 33.4473 7.84570  c
33.4473 7.40820 33.3483 7.10091 33.1504 6.92383  c
32.8796 6.69466 32.4785 6.58008 31.9473 6.58008  c
31.4577 6.58008 31.0931 6.66602 30.8535 6.83789  c
30.6139 7.00977 30.4368 7.31445 30.3223 7.75195  c
29.2910 7.61133 l
29.3848 7.17383 29.5410 6.81966 29.7598 6.54883  c
29.9785 6.27799 30.2910 6.06966 30.6973 5.92383  c
31.1035 5.77799 31.5723 5.70508 32.1035 5.70508  c
32.6348 5.70508 33.0671 5.76758 33.4004 5.89258  c
33.7337 6.01758 33.9785 6.17383 34.1348 6.36133  c
34.2910 6.54883 34.4004 6.78841 34.4629 7.08008  c
34.4941 7.25716 34.5098 7.58008 34.5098 8.04883  c
34.5098 9.45508 l
34.5098 10.4342 34.5332 11.0540 34.5801 11.3145  c
34.6270 11.5749 34.7181 11.8249 34.8535 12.0645  c
33.7441 12.0645 l
33.6400 11.8457 33.5723 11.5905 33.5410 11.2988  c
h
33.4473 8.93945 m
33.0618 9.09570 32.4889 9.23112 31.7285 9.34570  c
31.2910 9.40820 30.9837 9.47852 30.8066 9.55664  c
30.6296 9.63477 30.4915 9.74674 30.3926 9.89258  c
30.2936 10.0384 30.2441 10.2051 30.2441 10.3926  c
30.2441 10.6738 30.3509 10.9082 30.5645 11.0957  c
30.7780 11.2832 31.0879 11.3770 31.4941 11.3770  c
31.9004 11.3770 32.2624 11.2884 32.5801 11.1113  c
32.8978 10.9342 33.1296 10.6895 33.2754 10.3770  c
33.3900 10.1374 33.4473 9.78841 33.4473 9.33008  c
33.4473 8.93945 l
h
36.1211 12.0645 m
36.1211 3.47070 l
37.1836 3.47070 l
37.1836 12.0645 l
36.1211 12.0645 l
h
38.9746 12.0645 m
38.9746 3.47070 l
45.1777 3.47070 l
45.1777 4.48633 l
40.1152 4.48633 l
40.1152 7.11133 l
44.8652 7.11133 l
44.8652 8.12695 l
40.1152 8.12695 l
40.1152 11.0488 l
45.3809 11.0488 l
45.3809 12.0645 l
38.9746 12.0645 l
h
48.5410 12.0645 m
46.1816 5.84570 l
47.2910 5.84570 l
48.6348 9.56445 l
48.7702 9.97070 48.9004 10.3874 49.0254 10.8145  c
49.1191 10.4915 49.2493 10.1009 49.4160 9.64258  c
50.8066 5.84570 l
51.8848 5.84570 l
49.5254 12.0645 l
48.5410 12.0645 l
h
57.0723 10.0645 m
58.1660 10.1895 l
57.9993 10.8249 57.6816 11.3197 57.2129 11.6738  c
56.7441 12.0280 56.1504 12.2051 55.4316 12.2051  c
54.5254 12.2051 53.8040 11.9238 53.2676 11.3613  c
52.7311 10.7988 52.4629 10.0124 52.4629 9.00195  c
52.4629 7.96029 52.7337 7.15039 53.2754 6.57227  c
53.8171 5.99414 54.5150 5.70508 55.3691 5.70508  c
56.2025 5.70508 56.8822 5.98633 57.4082 6.54883  c
57.9342 7.11133 58.1973 7.90820 58.1973 8.93945  c
58.1973 9.00195 58.1973 9.09570 58.1973 9.22070  c
53.5566 9.22070 l
53.5983 9.90820 53.7910 10.4316 54.1348 10.7910  c
54.4785 11.1504 54.9108 11.3301 55.4316 11.3301  c
55.8171 11.3301 56.1478 11.2285 56.4238 11.0254  c
56.6999 10.8223 56.9160 10.5020 57.0723 10.0645  c
h
53.6191 8.36133 m
57.0879 8.36133 l
57.0462 7.83008 56.9160 7.43424 56.6973 7.17383  c
56.3535 6.76758 55.9160 6.56445 55.3848 6.56445  c
54.8952 6.56445 54.4863 6.72591 54.1582 7.04883  c
53.8301 7.37174 53.6504 7.80924 53.6191 8.36133  c
h
59.4961 12.0645 m
59.4961 5.84570 l
60.4336 5.84570 l
60.4336 6.72070 l
60.8919 6.04362 61.5534 5.70508 62.4180 5.70508  c
62.7930 5.70508 63.1393 5.77279 63.4570 5.90820  c
63.7747 6.04362 64.0117 6.22070 64.1680 6.43945  c
64.3242 6.65820 64.4336 6.91341 64.4961 7.20508  c
64.5273 7.40299 64.5430 7.74674 64.5430 8.23633  c
64.5430 12.0645 l
63.4961 12.0645 l
63.4961 8.28320 l
63.4961 7.84570 63.4544 7.52279 63.3711 7.31445  c
63.2878 7.10612 63.1419 6.93685 62.9336 6.80664  c
62.7253 6.67643 62.4805 6.61133 62.1992 6.61133  c
61.7513 6.61133 61.3633 6.75456 61.0352 7.04102  c
60.7070 7.32747 60.5430 7.86654 60.5430 8.65820  c
60.5430 12.0645 l
59.4961 12.0645 l
h
68.4668 11.1270 m
68.6230 12.0488 l
68.3210 12.1113 68.0553 12.1426 67.8262 12.1426  c
67.4408 12.1426 67.1439 12.0827 66.9355 11.9629  c
66.7272 11.8431 66.5788 11.6842 66.4902 11.4863  c
66.4017 11.2884 66.3574 10.8717 66.3574 10.2363  c
66.3574 6.65820 l
65.5918 6.65820 l
65.5918 5.84570 l
66.3574 5.84570 l
66.3574 4.29883 l
67.4043 3.67383 l
67.4043 5.84570 l
68.4668 5.84570 l
68.4668 6.65820 l
67.4043 6.65820 l
67.4043 10.2988 l
67.4043 10.6009 67.4225 10.7936 67.4590 10.8770  c
67.4954 10.9603 67.5553 11.0280 67.6387 11.0801  c
67.7220 11.1322 67.8418 11.1582 67.9980 11.1582  c
68.1230 11.1582 68.2793 11.1478 68.4668 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
156.000 44.0000 m
156.000 50.6274 150.627 56.0000 144.000 56.0000  c
137.373 56.0000 132.000 50.6274 132.000 44.0000  c
132.000 37.3726 137.373 32.0000 144.000 32.0000  c
150.627 32.0000 156.000 37.3726 156.000 44.0000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
156.000 44.0000 m
156.000 50.6274 150.627 56.0000 144.000 56.0000  c
137.373 56.0000 132.000 50.6274 132.000 44.0000  c
132.000 37.3726 137.373 32.0000 144.000 32.0000  c
150.627 32.0000 156.000 37.3726 156.000 44.0000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
[ 1.00000 0.00000 0.00000 1.00000 74.9902 148.000 ] concat
0.00000 0.00000 0.00000 RG
newpath
1.12500 12.0645 m
1.12500 3.47070 l
2.25000 3.47070 l
2.25000 12.0645 l
1.12500 12.0645 l
h
4.28711 12.0645 m
4.28711 3.47070 l
10.4902 3.47070 l
10.4902 4.48633 l
5.42773 4.48633 l
5.42773 7.11133 l
10.1777 7.11133 l
10.1777 8.12695 l
5.42773 8.12695 l
5.42773 11.0488 l
10.6934 11.0488 l
10.6934 12.0645 l
4.28711 12.0645 l
h
13.8535 12.0645 m
11.4941 5.84570 l
12.6035 5.84570 l
13.9473 9.56445 l
14.0827 9.97070 14.2129 10.3874 14.3379 10.8145  c
14.4316 10.4915 14.5618 10.1009 14.7285 9.64258  c
16.1191 5.84570 l
17.1973 5.84570 l
14.8379 12.0645 l
13.8535 12.0645 l
h
22.3848 10.0645 m
23.4785 10.1895 l
23.3118 10.8249 22.9941 11.3197 22.5254 11.6738  c
22.0566 12.0280 21.4629 12.2051 20.7441 12.2051  c
19.8379 12.2051 19.1165 11.9238 18.5801 11.3613  c
18.0436 10.7988 17.7754 10.0124 17.7754 9.00195  c
17.7754 7.96029 18.0462 7.15039 18.5879 6.57227  c
19.1296 5.99414 19.8275 5.70508 20.6816 5.70508  c
21.5150 5.70508 22.1947 5.98633 22.7207 6.54883  c
23.2467 7.11133 23.5098 7.90820 23.5098 8.93945  c
23.5098 9.00195 23.5098 9.09570 23.5098 9.22070  c
18.8691 9.22070 l
18.9108 9.90820 19.1035 10.4316 19.4473 10.7910  c
19.7910 11.1504 20.2233 11.3301 20.7441 11.3301  c
21.1296 11.3301 21.4603 11.2285 21.7363 11.0254  c
22.0124 10.8223 22.2285 10.5020 22.3848 10.0645  c
h
18.9316 8.36133 m
22.4004 8.36133 l
22.3587 7.83008 22.2285 7.43424 22.0098 7.17383  c
21.6660 6.76758 21.2285 6.56445 20.6973 6.56445  c
20.2077 6.56445 19.7988 6.72591 19.4707 7.04883  c
19.1426 7.37174 18.9629 7.80924 18.9316 8.36133  c
h
24.8086 12.0645 m
24.8086 5.84570 l
25.7461 5.84570 l
25.7461 6.72070 l
26.2044 6.04362 26.8659 5.70508 27.7305 5.70508  c
28.1055 5.70508 28.4518 5.77279 28.7695 5.90820  c
29.0872 6.04362 29.3242 6.22070 29.4805 6.43945  c
29.6367 6.65820 29.7461 6.91341 29.8086 7.20508  c
29.8398 7.40299 29.8555 7.74674 29.8555 8.23633  c
29.8555 12.0645 l
28.8086 12.0645 l
28.8086 8.28320 l
28.8086 7.84570 28.7669 7.52279 28.6836 7.31445  c
28.6003 7.10612 28.4544 6.93685 28.2461 6.80664  c
28.0378 6.67643 27.7930 6.61133 27.5117 6.61133  c
27.0638 6.61133 26.6758 6.75456 26.3477 7.04102  c
26.0195 7.32747 25.8555 7.86654 25.8555 8.65820  c
25.8555 12.0645 l
24.8086 12.0645 l
h
33.7793 11.1270 m
33.9355 12.0488 l
33.6335 12.1113 33.3678 12.1426 33.1387 12.1426  c
32.7533 12.1426 32.4564 12.0827 32.2480 11.9629  c
32.0397 11.8431 31.8913 11.6842 31.8027 11.4863  c
31.7142 11.2884 31.6699 10.8717 31.6699 10.2363  c
31.6699 6.65820 l
30.9043 6.65820 l
30.9043 5.84570 l
31.6699 5.84570 l
31.6699 4.29883 l
32.7168 3.67383 l
32.7168 5.84570 l
33.7793 5.84570 l
33.7793 6.65820 l
32.7168 6.65820 l
32.7168 10.2988 l
32.7168 10.6009 32.7350 10.7936 32.7715 10.8770  c
32.8079 10.9603 32.8678 11.0280 32.9512 11.0801  c
33.0345 11.1322 33.1543 11.1582 33.3105 11.1582  c
33.4355 11.1582 33.5918 11.1478 33.7793 11.1270  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 42.0000 164.701 ] concat
.250980 .250980 .250980 RG
newpath
2.34375 12.1631 m
1.85417 11.5485 1.44271 10.8298 1.10938 10.0068  c
.776042 9.18392 .609375 8.33496 .609375 7.45996  c
.609375 6.68913 .734375 5.94954 .984375 5.24121  c
1.27604 4.40788 1.72917 3.58496 2.34375 2.77246  c
2.96875 2.77246 l
2.57292 3.44954 2.31250 3.93392 2.18750 4.22559  c
1.98958 4.67350 1.83333 5.14225 1.71875 5.63184  c
1.58333 6.23600 1.51562 6.84538 1.51562 7.45996  c
1.51562 9.03288 2.00000 10.6006 2.96875 12.1631  c
2.34375 12.1631 l
h
4.20508 10.0537 m
4.20508 5.55371 l
3.42383 5.55371 l
3.42383 4.86621 l
4.20508 4.86621 l
4.20508 4.31934 l
4.20508 3.96517 4.23633 3.70475 4.29883 3.53809  c
4.38216 3.30892 4.53060 3.12402 4.74414 2.98340  c
4.95768 2.84277 5.25716 2.77246 5.64258 2.77246  c
5.88216 2.77246 6.15299 2.80371 6.45508 2.86621  c
6.33008 3.63184 l
6.14258 3.60059 5.96549 3.58496 5.79883 3.58496  c
5.53841 3.58496 5.35352 3.63965 5.24414 3.74902  c
5.13477 3.85840 5.08008 4.06934 5.08008 4.38184  c
5.08008 4.86621 l
6.08008 4.86621 l
6.08008 5.55371 l
5.08008 5.55371 l
5.08008 10.0537 l
4.20508 10.0537 l
h
6.76465 10.0537 m
6.76465 4.86621 l
7.54590 4.86621 l
7.54590 5.64746 l
7.75423 5.28288 7.94173 5.04329 8.10840 4.92871  c
8.27507 4.81413 8.46257 4.75684 8.67090 4.75684  c
8.97298 4.75684 9.27507 4.85059 9.57715 5.03809  c
9.28027 5.85059 l
9.06152 5.72559 8.84277 5.66309 8.62402 5.66309  c
8.43652 5.66309 8.26465 5.72038 8.10840 5.83496  c
7.95215 5.94954 7.84277 6.11100 7.78027 6.31934  c
7.68652 6.63184 7.63965 6.97038 7.63965 7.33496  c
7.63965 10.0537 l
6.76465 10.0537 l
h
9.76660 7.45996 m
9.76660 6.50163 10.0374 5.78809 10.5791 5.31934  c
11.0166 4.94434 11.5583 4.75684 12.2041 4.75684  c
12.9124 4.75684 13.4932 4.98861 13.9463 5.45215  c
14.3994 5.91569 14.6260 6.55892 14.6260 7.38184  c
14.6260 8.04850 14.5270 8.57454 14.3291 8.95996  c
14.1312 9.34538 13.8395 9.64486 13.4541 9.85840  c
13.0687 10.0719 12.6520 10.1787 12.2041 10.1787  c
11.4749 10.1787 10.8864 9.94434 10.4385 9.47559  c
9.99056 9.00684 9.76660 8.33496 9.76660 7.45996  c
h
10.6729 7.45996 m
10.6729 8.12663 10.8187 8.62402 11.1104 8.95215  c
11.4020 9.28027 11.7666 9.44434 12.2041 9.44434  c
12.6416 9.44434 13.0036 9.27767 13.2900 8.94434  c
13.5765 8.61100 13.7197 8.10579 13.7197 7.42871  c
13.7197 6.79329 13.5739 6.30892 13.2822 5.97559  c
12.9906 5.64225 12.6312 5.47559 12.2041 5.47559  c
11.7666 5.47559 11.4020 5.63965 11.1104 5.96777  c
10.8187 6.29590 10.6729 6.79329 10.6729 7.45996  c
h
15.6562 10.0537 m
15.6562 4.86621 l
16.4531 4.86621 l
16.4531 5.60059 l
16.6094 5.34017 16.8229 5.13444 17.0938 4.98340  c
17.3646 4.83236 17.6719 4.75684 18.0156 4.75684  c
18.4010 4.75684 18.7161 4.83496 18.9609 4.99121  c
19.2057 5.14746 19.3802 5.37142 19.4844 5.66309  c
19.8906 5.05892 20.4219 4.75684 21.0781 4.75684  c
21.5990 4.75684 21.9974 4.89746 22.2734 5.17871  c
22.5495 5.45996 22.6875 5.89746 22.6875 6.49121  c
22.6875 10.0537 l
21.8125 10.0537 l
21.8125 6.78809 l
21.8125 6.43392 21.7839 6.17871 21.7266 6.02246  c
21.6693 5.86621 21.5651 5.74121 21.4141 5.64746  c
21.2630 5.55371 21.0885 5.50684 20.8906 5.50684  c
20.5260 5.50684 20.2240 5.62923 19.9844 5.87402  c
19.7448 6.11882 19.6250 6.50684 19.6250 7.03809  c
19.6250 10.0537 l
18.7344 10.0537 l
18.7344 6.67871 l
18.7344 6.29329 18.6641 6.00163 18.5234 5.80371  c
18.3828 5.60579 18.1510 5.50684 17.8281 5.50684  c
17.5781 5.50684 17.3490 5.57194 17.1406 5.70215  c
16.9323 5.83236 16.7786 6.02246 16.6797 6.27246  c
16.5807 6.52246 16.5312 6.88704 16.5312 7.36621  c
16.5312 10.0537 l
15.6562 10.0537 l
h
27.5771 10.0537 m
26.7646 10.0537 l
26.7646 2.89746 l
27.6396 2.89746 l
27.6396 5.44434 l
28.0146 4.98600 28.4886 4.75684 29.0615 4.75684  c
29.3844 4.75684 29.6865 4.81934 29.9678 4.94434  c
30.2490 5.06934 30.4834 5.24902 30.6709 5.48340  c
30.8584 5.71777 31.0042 5.99902 31.1084 6.32715  c
31.2126 6.65527 31.2646 7.00684 31.2646 7.38184  c
31.2646 8.26725 31.0433 8.95475 30.6006 9.44434  c
30.1579 9.93392 29.6292 10.1787 29.0146 10.1787  c
28.4105 10.1787 27.9313 9.91829 27.5771 9.39746  c
27.5771 10.0537 l
h
27.5615 7.42871 m
27.5615 8.04329 27.6501 8.49121 27.8271 8.77246  c
28.0980 9.22038 28.4730 9.44434 28.9521 9.44434  c
29.3271 9.44434 29.6553 9.27767 29.9365 8.94434  c
30.2178 8.61100 30.3584 8.11621 30.3584 7.45996  c
30.3584 6.78288 30.2256 6.28288 29.9600 5.95996  c
29.6943 5.63704 29.3688 5.47559 28.9834 5.47559  c
28.5980 5.47559 28.2646 5.64225 27.9834 5.97559  c
27.7021 6.30892 27.5615 6.79329 27.5615 7.42871  c
h
35.7168 9.41309 m
35.3939 9.69434 35.0814 9.89225 34.7793 10.0068  c
34.4772 10.1214 34.1543 10.1787 33.8105 10.1787  c
33.2376 10.1787 32.7975 10.0381 32.4902 9.75684  c
32.1829 9.47559 32.0293 9.11621 32.0293 8.67871  c
32.0293 8.42871 32.0866 8.19954 32.2012 7.99121  c
32.3158 7.78288 32.4668 7.61361 32.6543 7.48340  c
32.8418 7.35319 33.0553 7.25684 33.2949 7.19434  c
33.4616 7.15267 33.7220 7.11100 34.0762 7.06934  c
34.7845 6.98600 35.3053 6.88184 35.6387 6.75684  c
35.6387 6.64225 35.6387 6.56934 35.6387 6.53809  c
35.6387 6.17350 35.5553 5.91829 35.3887 5.77246  c
35.1699 5.57454 34.8366 5.47559 34.3887 5.47559  c
33.9824 5.47559 33.6803 5.54850 33.4824 5.69434  c
33.2845 5.84017 33.1387 6.09538 33.0449 6.45996  c
32.1855 6.35059 l
32.2585 5.97559 32.3861 5.67611 32.5684 5.45215  c
32.7507 5.22819 33.0111 5.05632 33.3496 4.93652  c
33.6882 4.81673 34.0814 4.75684 34.5293 4.75684  c
34.9668 4.75684 35.3236 4.80892 35.5996 4.91309  c
35.8757 5.01725 36.0788 5.14746 36.2090 5.30371  c
36.3392 5.45996 36.4303 5.65788 36.4824 5.89746  c
36.5137 6.04329 36.5293 6.31413 36.5293 6.70996  c
36.5293 7.88184 l
36.5293 8.69434 36.5475 9.20996 36.5840 9.42871  c
36.6204 9.64746 36.6960 9.85579 36.8105 10.0537  c
35.8887 10.0537 l
35.7949 9.86621 35.7376 9.65267 35.7168 9.41309  c
h
35.6387 7.44434 m
35.3158 7.57975 34.8366 7.69434 34.2012 7.78809  c
33.8470 7.84017 33.5944 7.89746 33.4434 7.95996  c
33.2923 8.02246 33.1751 8.11621 33.0918 8.24121  c
33.0085 8.36621 32.9668 8.50684 32.9668 8.66309  c
32.9668 8.89225 33.0553 9.08496 33.2324 9.24121  c
33.4095 9.39746 33.6699 9.47559 34.0137 9.47559  c
34.3574 9.47559 34.6595 9.40267 34.9199 9.25684  c
35.1803 9.11100 35.3730 8.90788 35.4980 8.64746  c
35.5918 8.44954 35.6387 8.15788 35.6387 7.77246  c
35.6387 7.44434 l
h
41.2783 8.14746 m
42.1377 8.27246 l
42.0439 8.86621 41.8018 9.33236 41.4111 9.67090  c
41.0205 10.0094 40.5439 10.1787 39.9814 10.1787  c
39.2731 10.1787 38.7028 9.94434 38.2705 9.47559  c
37.8382 9.00684 37.6221 8.34017 37.6221 7.47559  c
37.6221 6.92350 37.7158 6.43652 37.9033 6.01465  c
38.0908 5.59277 38.3721 5.27767 38.7471 5.06934  c
39.1221 4.86100 39.5335 4.75684 39.9814 4.75684  c
40.5439 4.75684 41.0049 4.89746 41.3643 5.17871  c
41.7236 5.45996 41.9554 5.86621 42.0596 6.39746  c
41.2002 6.52246 l
41.1169 6.17871 40.9736 5.91829 40.7705 5.74121  c
40.5674 5.56413 40.3148 5.47559 40.0127 5.47559  c
39.5752 5.47559 39.2184 5.63444 38.9424 5.95215  c
38.6663 6.26986 38.5283 6.77246 38.5283 7.45996  c
38.5283 8.15788 38.6611 8.66309 38.9268 8.97559  c
39.1924 9.28809 39.5387 9.44434 39.9658 9.44434  c
40.3096 9.44434 40.5986 9.34017 40.8330 9.13184  c
41.0674 8.92350 41.2158 8.59538 41.2783 8.14746  c
h
42.9033 10.0537 m
42.9033 2.89746 l
43.7783 2.89746 l
43.7783 6.97559 l
45.8564 4.86621 l
46.9971 4.86621 l
45.0127 6.78809 l
47.2002 10.0537 l
46.1064 10.0537 l
44.3877 7.39746 l
43.7783 7.99121 l
43.7783 10.0537 l
42.9033 10.0537 l
h
48.7002 10.0537 m
47.8877 10.0537 l
47.8877 2.89746 l
48.7627 2.89746 l
48.7627 5.44434 l
49.1377 4.98600 49.6117 4.75684 50.1846 4.75684  c
50.5075 4.75684 50.8096 4.81934 51.0908 4.94434  c
51.3721 5.06934 51.6064 5.24902 51.7939 5.48340  c
51.9814 5.71777 52.1273 5.99902 52.2314 6.32715  c
52.3356 6.65527 52.3877 7.00684 52.3877 7.38184  c
52.3877 8.26725 52.1663 8.95475 51.7236 9.44434  c
51.2809 9.93392 50.7523 10.1787 50.1377 10.1787  c
49.5335 10.1787 49.0544 9.91829 48.7002 9.39746  c
48.7002 10.0537 l
h
48.6846 7.42871 m
48.6846 8.04329 48.7731 8.49121 48.9502 8.77246  c
49.2210 9.22038 49.5960 9.44434 50.0752 9.44434  c
50.4502 9.44434 50.7783 9.27767 51.0596 8.94434  c
51.3408 8.61100 51.4814 8.11621 51.4814 7.45996  c
51.4814 6.78288 51.3486 6.28288 51.0830 5.95996  c
50.8174 5.63704 50.4919 5.47559 50.1064 5.47559  c
49.7210 5.47559 49.3877 5.64225 49.1064 5.97559  c
48.8252 6.30892 48.6846 6.79329 48.6846 7.42871  c
h
53.1211 7.45996 m
53.1211 6.50163 53.3919 5.78809 53.9336 5.31934  c
54.3711 4.94434 54.9128 4.75684 55.5586 4.75684  c
56.2669 4.75684 56.8477 4.98861 57.3008 5.45215  c
57.7539 5.91569 57.9805 6.55892 57.9805 7.38184  c
57.9805 8.04850 57.8815 8.57454 57.6836 8.95996  c
57.4857 9.34538 57.1940 9.64486 56.8086 9.85840  c
56.4232 10.0719 56.0065 10.1787 55.5586 10.1787  c
54.8294 10.1787 54.2409 9.94434 53.7930 9.47559  c
53.3451 9.00684 53.1211 8.33496 53.1211 7.45996  c
h
54.0273 7.45996 m
54.0273 8.12663 54.1732 8.62402 54.4648 8.95215  c
54.7565 9.28027 55.1211 9.44434 55.5586 9.44434  c
55.9961 9.44434 56.3581 9.27767 56.6445 8.94434  c
56.9310 8.61100 57.0742 8.10579 57.0742 7.42871  c
57.0742 6.79329 56.9284 6.30892 56.6367 5.97559  c
56.3451 5.64225 55.9857 5.47559 55.5586 5.47559  c
55.1211 5.47559 54.7565 5.63965 54.4648 5.96777  c
54.1732 6.29590 54.0273 6.79329 54.0273 7.45996  c
h
59.0107 10.0537 m
59.0107 4.86621 l
59.8076 4.86621 l
59.8076 5.60059 l
60.1826 5.03809 60.7295 4.75684 61.4482 4.75684  c
61.7607 4.75684 62.0498 4.81152 62.3154 4.92090  c
62.5811 5.03027 62.7790 5.17611 62.9092 5.35840  c
63.0394 5.54069 63.1305 5.75684 63.1826 6.00684  c
63.2139 6.17350 63.2295 6.45996 63.2295 6.86621  c
63.2295 10.0537 l
62.3545 10.0537 l
62.3545 6.89746 l
62.3545 6.54329 62.3206 6.27767 62.2529 6.10059  c
62.1852 5.92350 62.0628 5.78027 61.8857 5.67090  c
61.7087 5.56152 61.5055 5.50684 61.2764 5.50684  c
60.9014 5.50684 60.5758 5.62663 60.2998 5.86621  c
60.0238 6.10579 59.8857 6.55892 59.8857 7.22559  c
59.8857 10.0537 l
59.0107 10.0537 l
h
68.1191 8.38184 m
69.0410 8.49121 l
68.8952 9.02246 68.6270 9.43652 68.2363 9.73340  c
67.8457 10.0303 67.3535 10.1787 66.7598 10.1787  c
65.9993 10.1787 65.3952 9.94434 64.9473 9.47559  c
64.4993 9.00684 64.2754 8.35059 64.2754 7.50684  c
64.2754 6.63184 64.5020 5.95475 64.9551 5.47559  c
65.4082 4.99642 65.9889 4.75684 66.6973 4.75684  c
67.3952 4.75684 67.9629 4.99121 68.4004 5.45996  c
68.8379 5.92871 69.0566 6.59017 69.0566 7.44434  c
69.0566 7.49642 69.0566 7.57454 69.0566 7.67871  c
65.1973 7.67871 l
65.2285 8.25163 65.3874 8.68913 65.6738 8.99121  c
65.9603 9.29329 66.3223 9.44434 66.7598 9.44434  c
67.0827 9.44434 67.3587 9.36100 67.5879 9.19434  c
67.8171 9.02767 67.9941 8.75684 68.1191 8.38184  c
h
65.2441 6.95996 m
68.1348 6.95996 l
68.0931 6.52246 67.9837 6.19434 67.8066 5.97559  c
67.5254 5.64225 67.1608 5.47559 66.7129 5.47559  c
66.3066 5.47559 65.9681 5.61100 65.6973 5.88184  c
65.4264 6.15267 65.2754 6.51204 65.2441 6.95996  c
h
72.2559 10.1787 m
74.3340 2.77246 l
75.0371 2.77246 l
72.9590 10.1787 l
72.2559 10.1787 l
h
81.8594 9.41309 m
81.5365 9.69434 81.2240 9.89225 80.9219 10.0068  c
80.6198 10.1214 80.2969 10.1787 79.9531 10.1787  c
79.3802 10.1787 78.9401 10.0381 78.6328 9.75684  c
78.3255 9.47559 78.1719 9.11621 78.1719 8.67871  c
78.1719 8.42871 78.2292 8.19954 78.3438 7.99121  c
78.4583 7.78288 78.6094 7.61361 78.7969 7.48340  c
78.9844 7.35319 79.1979 7.25684 79.4375 7.19434  c
79.6042 7.15267 79.8646 7.11100 80.2188 7.06934  c
80.9271 6.98600 81.4479 6.88184 81.7812 6.75684  c
81.7812 6.64225 81.7812 6.56934 81.7812 6.53809  c
81.7812 6.17350 81.6979 5.91829 81.5312 5.77246  c
81.3125 5.57454 80.9792 5.47559 80.5312 5.47559  c
80.1250 5.47559 79.8229 5.54850 79.6250 5.69434  c
79.4271 5.84017 79.2812 6.09538 79.1875 6.45996  c
78.3281 6.35059 l
78.4010 5.97559 78.5286 5.67611 78.7109 5.45215  c
78.8932 5.22819 79.1536 5.05632 79.4922 4.93652  c
79.8307 4.81673 80.2240 4.75684 80.6719 4.75684  c
81.1094 4.75684 81.4661 4.80892 81.7422 4.91309  c
82.0182 5.01725 82.2214 5.14746 82.3516 5.30371  c
82.4818 5.45996 82.5729 5.65788 82.6250 5.89746  c
82.6562 6.04329 82.6719 6.31413 82.6719 6.70996  c
82.6719 7.88184 l
82.6719 8.69434 82.6901 9.20996 82.7266 9.42871  c
82.7630 9.64746 82.8385 9.85579 82.9531 10.0537  c
82.0312 10.0537 l
81.9375 9.86621 81.8802 9.65267 81.8594 9.41309  c
h
81.7812 7.44434 m
81.4583 7.57975 80.9792 7.69434 80.3438 7.78809  c
79.9896 7.84017 79.7370 7.89746 79.5859 7.95996  c
79.4349 8.02246 79.3177 8.11621 79.2344 8.24121  c
79.1510 8.36621 79.1094 8.50684 79.1094 8.66309  c
79.1094 8.89225 79.1979 9.08496 79.3750 9.24121  c
79.5521 9.39746 79.8125 9.47559 80.1562 9.47559  c
80.5000 9.47559 80.8021 9.40267 81.0625 9.25684  c
81.3229 9.11100 81.5156 8.90788 81.6406 8.64746  c
81.7344 8.44954 81.7812 8.15788 81.7812 7.77246  c
81.7812 7.44434 l
h
84.0303 12.0381 m
84.0303 4.86621 l
84.8271 4.86621 l
84.8271 5.53809 l
85.0251 5.27767 85.2412 5.08236 85.4756 4.95215  c
85.7100 4.82194 85.9990 4.75684 86.3428 4.75684  c
86.7803 4.75684 87.1683 4.86882 87.5068 5.09277  c
87.8454 5.31673 88.1006 5.63704 88.2725 6.05371  c
88.4443 6.47038 88.5303 6.92871 88.5303 7.42871  c
88.5303 7.94954 88.4365 8.42350 88.2490 8.85059  c
88.0615 9.27767 87.7855 9.60579 87.4209 9.83496  c
87.0563 10.0641 86.6761 10.1787 86.2803 10.1787  c
85.9886 10.1787 85.7256 10.1162 85.4912 9.99121  c
85.2568 9.86621 85.0615 9.70996 84.9053 9.52246  c
84.9053 12.0381 l
84.0303 12.0381 l
h
84.8271 7.49121 m
84.8271 8.15788 84.9626 8.65007 85.2334 8.96777  c
85.5042 9.28548 85.8324 9.44434 86.2178 9.44434  c
86.6032 9.44434 86.9365 9.28027 87.2178 8.95215  c
87.4990 8.62402 87.6396 8.11100 87.6396 7.41309  c
87.6396 6.75684 87.5042 6.26465 87.2334 5.93652  c
86.9626 5.60840 86.6344 5.44434 86.2490 5.44434  c
85.8740 5.44434 85.5433 5.61882 85.2568 5.96777  c
84.9704 6.31673 84.8271 6.82454 84.8271 7.49121  c
h
89.6074 3.91309 m
89.6074 2.89746 l
90.4824 2.89746 l
90.4824 3.91309 l
89.6074 3.91309 l
h
89.6074 10.0537 m
89.6074 4.86621 l
90.4824 4.86621 l
90.4824 10.0537 l
89.6074 10.0537 l
h
92.3916 12.1631 m
91.7666 12.1631 l
92.7354 10.6006 93.2197 9.03288 93.2197 7.45996  c
93.2197 6.85579 93.1520 6.25163 93.0166 5.64746  c
92.9020 5.15788 92.7458 4.68913 92.5479 4.24121  c
92.4229 3.94954 92.1624 3.45996 91.7666 2.77246  c
92.3916 2.77246 l
93.0062 3.58496 93.4593 4.40788 93.7510 5.24121  c
94.0010 5.94954 94.1260 6.68913 94.1260 7.45996  c
94.1260 8.33496 93.9567 9.18392 93.6182 10.0068  c
93.2796 10.8298 92.8708 11.5485 92.3916 12.1631  c
h
f
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
1.00000 1.00000 1.00000 RG
newpath
104.000 132.000 m
104.000 138.627 98.6274 144.000 92.0000 144.000  c
85.3726 144.000 80.0000 138.627 80.0000 132.000  c
80.0000 125.373 85.3726 120.000 92.0000 120.000  c
98.6274 120.000 104.000 125.373 104.000 132.000  c
h
f
2 j
0.00000 0.00000 0.00000 RG
newpath
104.000 132.000 m
104.000 138.627 98.6274 144.000 92.0000 144.000  c
85.3726 144.000 80.0000 138.627 80.0000 132.000  c
80.0000 125.373 85.3726 120.000 92.0000 120.000  c
98.6274 120.000 104.000 125.373 104.000 132.000  c
h
S
0.00000 0.00000 0.00000 RG
0 j
2 j
0.00000 0.00000 0.00000 RG
newpath
125.859 74.7007 m
98.3024 121.334 l
S
[ .860927 .508729 -.508729 .860927 75.3976 -33.1349 ] concat
newpath
98.3024 121.334 m
90.3024 101.334 l
106.302 101.334 l
98.3024 121.334 l
98.3024 121.334 l
h
f*
newpath
98.3024 121.334 m
90.3024 101.334 l
106.302 101.334 l
98.3024 121.334 l
98.3024 121.334 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
1.00000 w
0.00000 0.00000 0.00000 RG
newpath
159.300 74.6001 m
182.440 120.880 l
S
[ .894427 -.447214 .447214 .894427 -34.7984 94.3512 ] concat
newpath
182.440 120.880 m
174.440 100.880 l
190.440 100.880 l
182.440 120.880 l
182.440 120.880 l
h
f*
newpath
182.440 120.880 m
174.440 100.880 l
190.440 100.880 l
182.440 120.880 l
182.440 120.880 l
h
S
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
7.00000 w
0.00000 0.00000 0.00000 RG
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 190.000 l
228.000 190.000 l
228.000 0.00000 l
h
W
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
[ 1.00000 0.00000 0.00000 1.00000 -28.0000 -28.0000 ] defaultmatrix matrix concatmatrix setmatrix
cliprestore
newpath
0.00000 0.00000 m
0.00000 190.000 l
228.000 190.000 l
228.000 0.00000 l
h
W
Q
end end restore showpage

%%Trailer
%%EOF
